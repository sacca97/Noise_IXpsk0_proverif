File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 227, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 228, characters 7-8:
Warning: identifier cs rebound.
File "IXpsk0.noise.active.pv", line 228, character 36:
Warning: identifier h rebound.
File "IXpsk0.noise.active.pv", line 267, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 268, character 6:
Warning: identifier e rebound.
File "IXpsk0.noise.active.pv", line 269, characters 6-7:
Warning: identifier ne rebound.
File "IXpsk0.noise.active.pv", line 270, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 271, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 272, character 6:
Warning: identifier s rebound.
File "IXpsk0.noise.active.pv", line 273, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 273, characters 26-27:
Warning: identifier ns rebound.
File "IXpsk0.noise.active.pv", line 274, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 274, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk0.noise.active.pv", line 275, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 282, character 6:
Warning: identifier e rebound.
File "IXpsk0.noise.active.pv", line 283, characters 6-7:
Warning: identifier ne rebound.
File "IXpsk0.noise.active.pv", line 284, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 288, character 6:
Warning: identifier s rebound.
File "IXpsk0.noise.active.pv", line 289, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 289, characters 26-27:
Warning: identifier ns rebound.
File "IXpsk0.noise.active.pv", line 290, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 291, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 291, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk0.noise.active.pv", line 292, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 300, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 300, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk0.noise.active.pv", line 301, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 308, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 308, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk0.noise.active.pv", line 309, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 317, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 318, characters 6-7:
Warning: identifier re rebound.
File "IXpsk0.noise.active.pv", line 319, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 320, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 321, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 321, characters 26-27:
Warning: identifier ne rebound.
File "IXpsk0.noise.active.pv", line 321, characters 40-45:
Warning: identifier valid1 rebound.
File "IXpsk0.noise.active.pv", line 322, characters 6-7:
Warning: identifier rs rebound.
File "IXpsk0.noise.active.pv", line 323, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 325, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 333, characters 6-7:
Warning: identifier re rebound.
File "IXpsk0.noise.active.pv", line 334, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 335, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 336, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 337, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 338, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 338, characters 26-27:
Warning: identifier ne rebound.
File "IXpsk0.noise.active.pv", line 338, characters 40-45:
Warning: identifier valid1 rebound.
File "IXpsk0.noise.active.pv", line 339, characters 6-7:
Warning: identifier rs rebound.
File "IXpsk0.noise.active.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 520, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 522, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 513, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 514, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 300, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 300, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk0.noise.active.pv", line 301, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 507, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 333, characters 6-7:
Warning: identifier re rebound.
File "IXpsk0.noise.active.pv", line 334, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 335, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 336, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 337, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 338, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 338, characters 26-27:
Warning: identifier ne rebound.
File "IXpsk0.noise.active.pv", line 338, characters 40-45:
Warning: identifier valid1 rebound.
File "IXpsk0.noise.active.pv", line 339, characters 6-7:
Warning: identifier rs rebound.
File "IXpsk0.noise.active.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 500, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 267, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 268, character 6:
Warning: identifier e rebound.
File "IXpsk0.noise.active.pv", line 269, characters 6-7:
Warning: identifier ne rebound.
File "IXpsk0.noise.active.pv", line 270, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 271, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 272, character 6:
Warning: identifier s rebound.
File "IXpsk0.noise.active.pv", line 273, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 273, characters 26-27:
Warning: identifier ns rebound.
File "IXpsk0.noise.active.pv", line 274, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 274, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk0.noise.active.pv", line 275, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 227, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 228, characters 7-8:
Warning: identifier cs rebound.
File "IXpsk0.noise.active.pv", line 228, character 36:
Warning: identifier h rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 574, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 575, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 308, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 308, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk0.noise.active.pv", line 309, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 566, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 568, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 560, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 282, character 6:
Warning: identifier e rebound.
File "IXpsk0.noise.active.pv", line 283, characters 6-7:
Warning: identifier ne rebound.
File "IXpsk0.noise.active.pv", line 284, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 288, character 6:
Warning: identifier s rebound.
File "IXpsk0.noise.active.pv", line 289, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 289, characters 26-27:
Warning: identifier ns rebound.
File "IXpsk0.noise.active.pv", line 290, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 291, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 291, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk0.noise.active.pv", line 292, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 554, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 317, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 318, characters 6-7:
Warning: identifier re rebound.
File "IXpsk0.noise.active.pv", line 319, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 320, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 321, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 321, characters 26-27:
Warning: identifier ne rebound.
File "IXpsk0.noise.active.pv", line 321, characters 40-45:
Warning: identifier valid1 rebound.
File "IXpsk0.noise.active.pv", line 322, characters 6-7:
Warning: identifier rs rebound.
File "IXpsk0.noise.active.pv", line 323, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk0.noise.active.pv", line 325, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk0.noise.active.pv", line 227, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk0.noise.active.pv", line 228, characters 7-8:
Warning: identifier cs rebound.
File "IXpsk0.noise.active.pv", line 228, character 36:
Warning: identifier h rebound.
File "IXpsk0.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
Linear part:
dhexp_real(b,dhexp_real(a,g)) = dhexp_real(a,dhexp_real(b,g))
Completing equations...
Completed equations:
dhexp_real(b,dhexp_real(a,g)) = dhexp_real(a,dhexp_real(b,g))
Convergent part:
Completing equations...
Completed equations:
Process 0 (that is, the initial process):
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s));
    (
        {6}let e: keypair = keypairpack(empty,empty) in
        {7}let rs: key = empty in
        {8}let re: key = empty in
        {9}let v: bitstring = catch-fail(hash(somename,empty)) in
        {10}let v_1: key = catch-fail(v) in
        {11}let v_2: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {12}let v_3: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v) then (if not-caught-fail(v_1) then (if not-caught-fail(v_2) then symmetricstatepack(v_2,v_1,v) else fail-any) else fail-any) else fail-any))) in
        {13}let v_4: symmetricstate = catch-fail((if success?((if not-caught-fail(v) then (if not-caught-fail(v_1) then (if not-caught-fail(v_2) then symmetricstatepack(v_2,v_1,v) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_3) && success?(is-true(success?(1-proj-3-tuple(v_3))))) then symmetricstatepack(1-proj-3-tuple(v_3),2-proj-3-tuple(v_3),hash(3-proj-3-tuple(v_3),empty)) else fail-any) else fail-any)) in
        {14}let hs: handshakestate = (if not-caught-fail(v_4) then handshakestatepack(v_4,s,e,rs,re,key_psk(alice,bob),true) else fail-any) in
        {15}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {63}get statestore(=alice,=bob,=sid,statepack_a(hs_1: handshakestate)) in
        {16}let v_5: bitstring = catch-fail(handshakestateunpack(hs_1)) in
        {17}let v_6: bitstring = catch-fail((empty,empty,empty)) in
        {18}let v_7: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_5))) in
        {19}let v_8: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_7),6-proj-7-tuple(v_5))) in
        {20}let v_9: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_7),6-proj-7-tuple(v_5))) in
        {21}let v_10: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_7),6-proj-7-tuple(v_5))) in
        {22}let v_11: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_5)) && success?(2-proj-3-tuple(v_7))) then (if not-caught-fail(v_8) then (if not-caught-fail(v_9) then (if not-caught-fail(v_10) then (v_8,v_9,v_10) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {23}let v_12: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_7),1-proj-3-tuple(v_11),3-proj-3-tuple(v_7)))) in
        {24}let v_13: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_11)) && success?(symmetricstatepack(1-proj-3-tuple(v_7),1-proj-3-tuple(v_11),3-proj-3-tuple(v_7)))) then (if (not-caught-fail(v_12) && success?(is-true(success?(1-proj-3-tuple(v_12))))) then symmetricstatepack(1-proj-3-tuple(v_12),2-proj-3-tuple(v_12),hash(3-proj-3-tuple(v_12),2-proj-3-tuple(v_11))) else fail-any) else fail-any))) in
        {25}let v_14: symmetricstate = catch-fail((if (success?(6-proj-7-tuple(v_5)) && success?(1-proj-7-tuple(v_5))) then (if (not-caught-fail(v_7) && success?(is-true(success?(1-proj-3-tuple(v_7))))) then (if (not-caught-fail(v_11) && success?(is-true(success?(1-proj-3-tuple(v_11))))) then (if (not-caught-fail(v_13) && success?(is-true(success?(1-proj-3-tuple(v_13))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_11)) then cipherstatepack(3-proj-3-tuple(v_11),minnonce) else fail-any),1-proj-3-tuple(v_11),3-proj-3-tuple(v_13)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {26}let v_15: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {27}let v_16: keypair = catch-fail((if not-caught-fail(v_15) then keypairpack(validkey(v_15),key_e(alice,bob,sid)) else fail-any)) in
        {28}let v_17: bitstring = catch-fail(getpublickey(v_16)) in
        {29}let v_18: bitstring = catch-fail(symmetricstateunpack(v_14)) in
        {30}let v_19: symmetricstate = catch-fail((if (not-caught-fail(v_18) && success?(is-true(success?(1-proj-3-tuple(v_18))))) then symmetricstatepack(1-proj-3-tuple(v_18),2-proj-3-tuple(v_18),hash(3-proj-3-tuple(v_18),v_17)) else fail-any)) in
        {31}let v_20: bitstring = catch-fail(symmetricstateunpack(v_19)) in
        {32}let v_21: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_20),getpublickey(v_16))) in
        {33}let v_22: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_20),getpublickey(v_16))) in
        {34}let v_23: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_20),getpublickey(v_16))) in
        {35}let v_24: bitstring = catch-fail((if (success?(getpublickey(v_16)) && success?(2-proj-3-tuple(v_20))) then (if not-caught-fail(v_21) then (if not-caught-fail(v_22) then (if not-caught-fail(v_23) then (v_21,v_22,v_23) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {36}let v_25: symmetricstate = catch-fail((if success?(getpublickey(v_16)) then (if (not-caught-fail(v_20) && success?(is-true(success?(1-proj-3-tuple(v_20))))) then (if (not-caught-fail(v_24) && success?(is-true(success?(1-proj-3-tuple(v_24))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_24)) then cipherstatepack(2-proj-3-tuple(v_24),minnonce) else fail-any),1-proj-3-tuple(v_24),3-proj-3-tuple(v_20)) else fail-any) else fail-any) else fail-any)) in
        {37}let v_26: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {38}let v_27: keypair = catch-fail((if not-caught-fail(v_26) then keypairpack(validkey(v_26),key_s(alice)) else fail-any)) in
        {39}let v_28: bitstring = catch-fail(symmetricstateunpack(v_25)) in
        {40}let v_29: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_28))) in
        {41}let v_30: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_29),2-proj-2-tuple(v_29),3-proj-3-tuple(v_28),getpublickey(v_27))) in
        {42}let v_31: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_28))) in
        {43}let v_32: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_29))) && success?(1-proj-3-tuple(v_28))) then (if (not-caught-fail(v_31) && success?(is-true(success?(1-proj-2-tuple(v_31))))) then cipherstatepack(1-proj-2-tuple(v_31),increment_nonce(2-proj-2-tuple(v_29))) else fail-any) else fail-any)) in
        {44}let v_33: bitstring = catch-fail((if (success?(getpublickey(v_27)) && (success?(3-proj-3-tuple(v_28)) && success?(1-proj-3-tuple(v_28)))) then (if (not-caught-fail(v_29) && success?(is-true(success?(1-proj-2-tuple(v_29))))) then (if not-caught-fail(v_30) then (if not-caught-fail(v_32) then (v_32,v_30) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {45}let v_34: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_33),2-proj-3-tuple(v_28),3-proj-3-tuple(v_28)))) in
        {46}let v_35: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_33)) && success?(symmetricstatepack(1-proj-2-tuple(v_33),2-proj-3-tuple(v_28),3-proj-3-tuple(v_28)))) then (if (not-caught-fail(v_34) && success?(is-true(success?(1-proj-3-tuple(v_34))))) then symmetricstatepack(1-proj-3-tuple(v_34),2-proj-3-tuple(v_34),hash(3-proj-3-tuple(v_34),2-proj-2-tuple(v_33))) else fail-any) else fail-any)) in
        {47}let v_36: bitstring = catch-fail((if success?(getpublickey(v_27)) then (if (not-caught-fail(v_28) && success?(is-true(success?(1-proj-3-tuple(v_28))))) then (if (not-caught-fail(v_33) && success?(is-true(success?(1-proj-2-tuple(v_33))))) then (if not-caught-fail(v_35) then (v_35,2-proj-2-tuple(v_33)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {48}let v_37: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_36))) in
        {49}let v_38: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_37))) in
        {50}let v_39: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_38),2-proj-2-tuple(v_38),3-proj-3-tuple(v_37),msg_a(alice,bob,sid))) in
        {51}let v_40: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_37))) in
        {52}let v_41: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_38))) && success?(1-proj-3-tuple(v_37))) then (if (not-caught-fail(v_40) && success?(is-true(success?(1-proj-2-tuple(v_40))))) then cipherstatepack(1-proj-2-tuple(v_40),increment_nonce(2-proj-2-tuple(v_38))) else fail-any) else fail-any)) in
        {53}let v_42: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_37)) && success?(1-proj-3-tuple(v_37))) then (if (not-caught-fail(v_38) && success?(is-true(success?(1-proj-2-tuple(v_38))))) then (if not-caught-fail(v_39) then (if not-caught-fail(v_41) then (v_41,v_39) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {54}let v_43: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_42),2-proj-3-tuple(v_37),3-proj-3-tuple(v_37)))) in
        {55}let v_44: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_42)) && success?(symmetricstatepack(1-proj-2-tuple(v_42),2-proj-3-tuple(v_37),3-proj-3-tuple(v_37)))) then (if (not-caught-fail(v_43) && success?(is-true(success?(1-proj-3-tuple(v_43))))) then symmetricstatepack(1-proj-3-tuple(v_43),2-proj-3-tuple(v_43),hash(3-proj-3-tuple(v_43),2-proj-2-tuple(v_42))) else fail-any) else fail-any)) in
        {56}let v_45: bitstring = catch-fail((if success?(1-proj-2-tuple(v_36)) then (if (not-caught-fail(v_37) && success?(is-true(success?(1-proj-3-tuple(v_37))))) then (if (not-caught-fail(v_42) && success?(is-true(success?(1-proj-2-tuple(v_42))))) then (if not-caught-fail(v_44) then (v_44,2-proj-2-tuple(v_42)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {57}let v_46: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_45),v_27,v_16,4-proj-7-tuple(v_5),5-proj-7-tuple(v_5),6-proj-7-tuple(v_5),7-proj-7-tuple(v_5))) in
        {58}let v_47: bitstring = catch-fail(concat3(v_17,2-proj-2-tuple(v_36),2-proj-2-tuple(v_45))) in
        {59}let (hs_2: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_5) && success?(is-true(success?(1-proj-7-tuple(v_5))))) then (if (not-caught-fail(v_6) && success?(is-true(success?(1-proj-3-tuple(v_6))))) then (if not-caught-fail(v_14) then (if not-caught-fail(v_16) then (if not-caught-fail(v_17) then (if not-caught-fail(v_19) then (if not-caught-fail(v_25) then (if not-caught-fail(v_27) then (if (not-caught-fail(v_36) && success?(is-true(success?(1-proj-2-tuple(v_36))))) then (if (not-caught-fail(v_45) && success?(is-true(success?(1-proj-2-tuple(v_45))))) then (if not-caught-fail(v_46) then (if not-caught-fail(v_47) then (v_46,v_47) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {60}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {61}insert statestore(alice,bob,sid,statepack_b(hs_2));
        {62}out(pub, message_a)
    ) | (
        {132}get statestore(=alice,=bob,=sid,statepack_b(hs_3: handshakestate)) in
        {64}in(pub, message_b: bitstring);
        {65}let v_48: bitstring = catch-fail(handshakestateunpack(hs_3)) in
        {66}let v_49: bitstring = catch-fail(deconcat3(message_b)) in
        {67}let v_50: bool = catch-fail(true) in
        {68}let v_51: key = catch-fail(1-proj-3-tuple(v_49)) in
        {69}let v_52: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_48))) in
        {70}let v_53: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_48)) then (if (not-caught-fail(v_52) && success?(is-true(success?(1-proj-3-tuple(v_52))))) then symmetricstatepack(1-proj-3-tuple(v_52),2-proj-3-tuple(v_52),hash(3-proj-3-tuple(v_52),v_51)) else fail-any) else fail-any)) in
        {71}let v_54: bitstring = catch-fail(symmetricstateunpack(v_53)) in
        {72}let v_55: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_54),v_51)) in
        {73}let v_56: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_54),v_51)) in
        {74}let v_57: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_54),v_51)) in
        {75}let v_58: bitstring = catch-fail((if success?(2-proj-3-tuple(v_54)) then (if not-caught-fail(v_55) then (if not-caught-fail(v_56) then (if not-caught-fail(v_57) then (v_55,v_56,v_57) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {76}let v_59: symmetricstate = catch-fail((if (not-caught-fail(v_54) && success?(is-true(success?(1-proj-3-tuple(v_54))))) then (if (not-caught-fail(v_58) && success?(is-true(success?(1-proj-3-tuple(v_58))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_58)) then cipherstatepack(2-proj-3-tuple(v_58),minnonce) else fail-any),1-proj-3-tuple(v_58),3-proj-3-tuple(v_54)) else fail-any) else fail-any)) in
        {77}let v_60: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_48))) in
        {78}let v_61: bitstring = catch-fail(symmetricstateunpack(v_59)) in
        {79}let v_62: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_61),(if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_60) && success?(is-true(success?(1-proj-2-tuple(v_60))))) then dhexp(2-proj-2-tuple(v_60),v_51) else fail-any) else fail-any))) in
        {80}let v_63: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_61),(if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_60) && success?(is-true(success?(1-proj-2-tuple(v_60))))) then dhexp(2-proj-2-tuple(v_60),v_51) else fail-any) else fail-any))) in
        {81}let v_64: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_61),(if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_60) && success?(is-true(success?(1-proj-2-tuple(v_60))))) then dhexp(2-proj-2-tuple(v_60),v_51) else fail-any) else fail-any))) in
        {82}let v_65: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_60) && success?(is-true(success?(1-proj-2-tuple(v_60))))) then dhexp(2-proj-2-tuple(v_60),v_51) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_61))) then (if not-caught-fail(v_62) then (if not-caught-fail(v_63) then (if not-caught-fail(v_64) then (v_62,v_63,v_64) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {83}let v_66: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_60) && success?(is-true(success?(1-proj-2-tuple(v_60))))) then dhexp(2-proj-2-tuple(v_60),v_51) else fail-any) else fail-any)) then (if (not-caught-fail(v_61) && success?(is-true(success?(1-proj-3-tuple(v_61))))) then (if (not-caught-fail(v_65) && success?(is-true(success?(1-proj-3-tuple(v_65))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_65)) then cipherstatepack(2-proj-3-tuple(v_65),minnonce) else fail-any),1-proj-3-tuple(v_65),3-proj-3-tuple(v_61)) else fail-any) else fail-any) else fail-any)) in
        {84}let v_67: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_48))) in
        {85}let v_68: bitstring = catch-fail(symmetricstateunpack(v_66)) in
        {86}let v_69: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_68),(if success?(2-proj-7-tuple(v_48)) then (if (not-caught-fail(v_67) && success?(is-true(success?(1-proj-2-tuple(v_67))))) then dhexp(2-proj-2-tuple(v_67),v_51) else fail-any) else fail-any))) in
        {87}let v_70: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_68),(if success?(2-proj-7-tuple(v_48)) then (if (not-caught-fail(v_67) && success?(is-true(success?(1-proj-2-tuple(v_67))))) then dhexp(2-proj-2-tuple(v_67),v_51) else fail-any) else fail-any))) in
        {88}let v_71: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_68),(if success?(2-proj-7-tuple(v_48)) then (if (not-caught-fail(v_67) && success?(is-true(success?(1-proj-2-tuple(v_67))))) then dhexp(2-proj-2-tuple(v_67),v_51) else fail-any) else fail-any))) in
        {89}let v_72: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_48)) then (if (not-caught-fail(v_67) && success?(is-true(success?(1-proj-2-tuple(v_67))))) then dhexp(2-proj-2-tuple(v_67),v_51) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_68))) then (if not-caught-fail(v_69) then (if not-caught-fail(v_70) then (if not-caught-fail(v_71) then (v_69,v_70,v_71) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {90}let v_73: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_48)) then (if (not-caught-fail(v_67) && success?(is-true(success?(1-proj-2-tuple(v_67))))) then dhexp(2-proj-2-tuple(v_67),v_51) else fail-any) else fail-any)) then (if (not-caught-fail(v_68) && success?(is-true(success?(1-proj-3-tuple(v_68))))) then (if (not-caught-fail(v_72) && success?(is-true(success?(1-proj-3-tuple(v_72))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_72)) then cipherstatepack(2-proj-3-tuple(v_72),minnonce) else fail-any),1-proj-3-tuple(v_72),3-proj-3-tuple(v_68)) else fail-any) else fail-any) else fail-any)) in
        {91}let v_74: bitstring = catch-fail(symmetricstateunpack(v_73)) in
        {92}let v_75: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_74))) in
        {93}let v_76: aead = catch-fail(decrypt(1-proj-2-tuple(v_75),2-proj-2-tuple(v_75),3-proj-3-tuple(v_74),2-proj-3-tuple(v_49))) in
        {94}let v_77: bitstring = catch-fail(aeadunpack(v_76)) in
        {95}let v_78: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_74))) in
        {96}let v_79: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_75))) && success?(1-proj-3-tuple(v_74))) then (if (not-caught-fail(v_78) && success?(is-true(success?(1-proj-2-tuple(v_78))))) then cipherstatepack(1-proj-2-tuple(v_78),increment_nonce(2-proj-2-tuple(v_75))) else fail-any) else fail-any)) in
        {97}let v_80: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_49)) && (success?(3-proj-3-tuple(v_74)) && success?(1-proj-3-tuple(v_74)))) then (if (not-caught-fail(v_75) && success?(is-true(success?(1-proj-2-tuple(v_75))))) then (if not-caught-fail(v_76) then (if (not-caught-fail(v_77) && success?(is-true(success?(1-proj-3-tuple(v_77))))) then (if not-caught-fail(v_79) then (v_79,3-proj-3-tuple(v_77),1-proj-3-tuple(v_77)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {98}let v_81: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_80),2-proj-3-tuple(v_74),3-proj-3-tuple(v_74)))) in
        {99}let v_82: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_49)) && success?(symmetricstatepack(1-proj-3-tuple(v_80),2-proj-3-tuple(v_74),3-proj-3-tuple(v_74)))) then (if (not-caught-fail(v_81) && success?(is-true(success?(1-proj-3-tuple(v_81))))) then symmetricstatepack(1-proj-3-tuple(v_81),2-proj-3-tuple(v_81),hash(3-proj-3-tuple(v_81),2-proj-3-tuple(v_49))) else fail-any) else fail-any)) in
        {100}let v_83: bitstring = catch-fail((if success?(2-proj-3-tuple(v_49)) then (if (not-caught-fail(v_74) && success?(is-true(success?(1-proj-3-tuple(v_74))))) then (if (not-caught-fail(v_80) && success?(is-true(success?(1-proj-3-tuple(v_80))))) then (if not-caught-fail(v_82) then (v_82,2-proj-3-tuple(v_80),3-proj-3-tuple(v_80)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {101}let v_84: key = catch-fail(2-proj-3-tuple(v_83)) in
        {102}let v_85: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_48))) in
        {103}let v_86: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_83))) in
        {104}let v_87: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_86),(if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_85) && success?(is-true(success?(1-proj-2-tuple(v_85))))) then dhexp(2-proj-2-tuple(v_85),v_84) else fail-any) else fail-any))) in
        {105}let v_88: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_86),(if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_85) && success?(is-true(success?(1-proj-2-tuple(v_85))))) then dhexp(2-proj-2-tuple(v_85),v_84) else fail-any) else fail-any))) in
        {106}let v_89: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_86),(if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_85) && success?(is-true(success?(1-proj-2-tuple(v_85))))) then dhexp(2-proj-2-tuple(v_85),v_84) else fail-any) else fail-any))) in
        {107}let v_90: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_85) && success?(is-true(success?(1-proj-2-tuple(v_85))))) then dhexp(2-proj-2-tuple(v_85),v_84) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_86))) then (if not-caught-fail(v_87) then (if not-caught-fail(v_88) then (if not-caught-fail(v_89) then (v_87,v_88,v_89) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {108}let v_91: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_48)) then (if (not-caught-fail(v_85) && success?(is-true(success?(1-proj-2-tuple(v_85))))) then dhexp(2-proj-2-tuple(v_85),v_84) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_83))) then (if (not-caught-fail(v_86) && success?(is-true(success?(1-proj-3-tuple(v_86))))) then (if (not-caught-fail(v_90) && success?(is-true(success?(1-proj-3-tuple(v_90))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_90)) then cipherstatepack(2-proj-3-tuple(v_90),minnonce) else fail-any),1-proj-3-tuple(v_90),3-proj-3-tuple(v_86)) else fail-any) else fail-any) else fail-any)) in
        {109}let v_92: bitstring = catch-fail(symmetricstateunpack(v_91)) in
        {110}let v_93: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_92))) in
        {111}let v_94: aead = catch-fail(decrypt(1-proj-2-tuple(v_93),2-proj-2-tuple(v_93),3-proj-3-tuple(v_92),3-proj-3-tuple(v_49))) in
        {112}let v_95: bitstring = catch-fail(aeadunpack(v_94)) in
        {113}let v_96: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_92))) in
        {114}let v_97: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_93))) && success?(1-proj-3-tuple(v_92))) then (if (not-caught-fail(v_96) && success?(is-true(success?(1-proj-2-tuple(v_96))))) then cipherstatepack(1-proj-2-tuple(v_96),increment_nonce(2-proj-2-tuple(v_93))) else fail-any) else fail-any)) in
        {115}let v_98: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_49)) && (success?(3-proj-3-tuple(v_92)) && success?(1-proj-3-tuple(v_92)))) then (if (not-caught-fail(v_93) && success?(is-true(success?(1-proj-2-tuple(v_93))))) then (if not-caught-fail(v_94) then (if (not-caught-fail(v_95) && success?(is-true(success?(1-proj-3-tuple(v_95))))) then (if not-caught-fail(v_97) then (v_97,3-proj-3-tuple(v_95),1-proj-3-tuple(v_95)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {116}let v_99: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_98),2-proj-3-tuple(v_92),3-proj-3-tuple(v_92)))) in
        {117}let v_100: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_49)) && success?(symmetricstatepack(1-proj-3-tuple(v_98),2-proj-3-tuple(v_92),3-proj-3-tuple(v_92)))) then (if (not-caught-fail(v_99) && success?(is-true(success?(1-proj-3-tuple(v_99))))) then symmetricstatepack(1-proj-3-tuple(v_99),2-proj-3-tuple(v_99),hash(3-proj-3-tuple(v_99),3-proj-3-tuple(v_49))) else fail-any) else fail-any)) in
        {118}let v_101: bitstring = catch-fail((if success?(3-proj-3-tuple(v_49)) then (if (not-caught-fail(v_92) && success?(is-true(success?(1-proj-3-tuple(v_92))))) then (if (not-caught-fail(v_98) && success?(is-true(success?(1-proj-3-tuple(v_98))))) then (if not-caught-fail(v_100) then (v_100,2-proj-3-tuple(v_98),3-proj-3-tuple(v_98)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {119}let v_102: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {120}let v_103: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_101),2-proj-7-tuple(v_48),3-proj-7-tuple(v_48),v_84,v_51,6-proj-7-tuple(v_48),7-proj-7-tuple(v_48))) in
        {121}let v_104: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_101))) in
        {122}let v_105: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_104),zero)) in
        {123}let v_106: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_104),zero)) in
        {124}let v_107: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_104),zero)) in
        {125}let v_108: bitstring = catch-fail((if success?(2-proj-3-tuple(v_104)) then (if not-caught-fail(v_105) then (if not-caught-fail(v_106) then (if not-caught-fail(v_107) then (v_105,v_106,v_107) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {126}let v_109: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_108)) then cipherstatepack(1-proj-3-tuple(v_108),minnonce) else fail-any)) in
        {127}let v_110: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_108)) then cipherstatepack(2-proj-3-tuple(v_108),minnonce) else fail-any)) in
        {128}let v_111: bitstring = catch-fail((if success?(1-proj-3-tuple(v_101)) then (if (not-caught-fail(v_104) && success?(is-true(success?(1-proj-3-tuple(v_104))))) then (if (not-caught-fail(v_108) && success?(is-true(success?(1-proj-3-tuple(v_108))))) then (if not-caught-fail(v_109) then (if not-caught-fail(v_110) then (1-proj-3-tuple(v_101),v_109,v_110) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {129}let (hs_4: handshakestate,plaintext_b: bitstring,valid: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_48) && success?(is-true(success?(1-proj-7-tuple(v_48))))) then (if (not-caught-fail(v_49) && success?(is-true(success?(1-proj-3-tuple(v_49))))) then (if not-caught-fail(v_50) then (if not-caught-fail(v_51) then (if not-caught-fail(v_53) then (if not-caught-fail(v_59) then (if not-caught-fail(v_66) then (if not-caught-fail(v_73) then (if (not-caught-fail(v_83) && success?(is-true(success?(1-proj-3-tuple(v_83))))) then (if not-caught-fail(v_84) then (if not-caught-fail(v_91) then (if (not-caught-fail(v_101) && success?(is-true(success?(1-proj-3-tuple(v_101))))) then (if ((3-proj-3-tuple(v_83) && 3-proj-3-tuple(v_101)) && (v_84 = getpublickey((if not-caught-fail(v_102) then keypairpack(validkey(v_102),key_s(bob)) else fail-any)))) then (if not-caught-fail(v_103) then (if (not-caught-fail(v_111) && success?(is-true(success?(1-proj-3-tuple(v_111))))) then (v_103,2-proj-3-tuple(v_101),true,2-proj-3-tuple(v_111),3-proj-3-tuple(v_111)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {130}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {131}insert statestore(alice,bob,sid,statepack_c(hs_4,cs1,cs2))
    ) | (
        {133}!
        {152}get statestore(=alice,=bob,=sid,statepack_c(hs_5: handshakestate,cs1_1: cipherstate,cs2_1: cipherstate)) in
        {134}let hs_6: handshakestate = handshakestatesetcs(hs_5,cs1_1) in
        {135}let v_112: bitstring = catch-fail(handshakestateunpack(hs_6)) in
        {136}let v_113: bitstring = catch-fail((empty,empty,empty)) in
        {137}let v_114: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_112))) in
        {138}let v_115: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_114))) in
        {139}let v_116: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_115),2-proj-2-tuple(v_115),3-proj-3-tuple(v_114),msg_c(alice,bob,sid))) in
        {140}let v_117: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_114))) in
        {141}let v_118: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_115))) && success?(1-proj-3-tuple(v_114))) then (if (not-caught-fail(v_117) && success?(is-true(success?(1-proj-2-tuple(v_117))))) then cipherstatepack(1-proj-2-tuple(v_117),increment_nonce(2-proj-2-tuple(v_115))) else fail-any) else fail-any)) in
        {142}let v_119: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_114)) && success?(1-proj-3-tuple(v_114))) then (if (not-caught-fail(v_115) && success?(is-true(success?(1-proj-2-tuple(v_115))))) then (if not-caught-fail(v_116) then (if not-caught-fail(v_118) then (v_118,v_116) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {143}let v_120: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_119),2-proj-3-tuple(v_114),3-proj-3-tuple(v_114)))) in
        {144}let v_121: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_119)) && success?(symmetricstatepack(1-proj-2-tuple(v_119),2-proj-3-tuple(v_114),3-proj-3-tuple(v_114)))) then (if (not-caught-fail(v_120) && success?(is-true(success?(1-proj-3-tuple(v_120))))) then symmetricstatepack(1-proj-3-tuple(v_120),2-proj-3-tuple(v_120),hash(3-proj-3-tuple(v_120),2-proj-2-tuple(v_119))) else fail-any) else fail-any)) in
        {145}let v_122: bitstring = catch-fail((if success?(1-proj-7-tuple(v_112)) then (if (not-caught-fail(v_114) && success?(is-true(success?(1-proj-3-tuple(v_114))))) then (if (not-caught-fail(v_119) && success?(is-true(success?(1-proj-2-tuple(v_119))))) then (if not-caught-fail(v_121) then (v_121,2-proj-2-tuple(v_119)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {146}let v_123: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_122),2-proj-7-tuple(v_112),3-proj-7-tuple(v_112),4-proj-7-tuple(v_112),5-proj-7-tuple(v_112),6-proj-7-tuple(v_112),7-proj-7-tuple(v_112))) in
        {147}let v_124: bitstring = catch-fail(concat3(1-proj-3-tuple(v_113),2-proj-3-tuple(v_113),2-proj-2-tuple(v_122))) in
        {148}let (hs_7: handshakestate,message_c: bitstring) = (if (not-caught-fail(v_112) && success?(is-true(success?(1-proj-7-tuple(v_112))))) then (if (not-caught-fail(v_113) && success?(is-true(success?(1-proj-3-tuple(v_113))))) then (if (not-caught-fail(v_122) && success?(is-true(success?(1-proj-2-tuple(v_122))))) then (if not-caught-fail(v_123) then (if not-caught-fail(v_124) then (v_123,v_124) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {149}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {150}insert statestore(alice,bob,sid,statepack_d(hs_7,handshakestategetcs(hs_7),cs2_1));
        {151}out(pub, message_c)
    ) | (
        {153}!
        {173}get statestore(=alice,=bob,=sid,statepack_d(hs_8: handshakestate,cs1_2: cipherstate,cs2_2: cipherstate)) in
        {154}let hs_9: handshakestate = handshakestatesetcs(hs_8,cs2_2) in
        {155}in(pub, message_d: bitstring);
        {156}let v_125: bitstring = catch-fail(handshakestateunpack(hs_9)) in
        {157}let v_126: bitstring = catch-fail(deconcat3(message_d)) in
        {158}let v_127: bool = catch-fail(true) in
        {159}let v_128: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_125))) in
        {160}let v_129: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_128))) in
        {161}let v_130: aead = catch-fail(decrypt(1-proj-2-tuple(v_129),2-proj-2-tuple(v_129),3-proj-3-tuple(v_128),3-proj-3-tuple(v_126))) in
        {162}let v_131: bitstring = catch-fail(aeadunpack(v_130)) in
        {163}let v_132: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_128))) in
        {164}let v_133: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_129))) && success?(1-proj-3-tuple(v_128))) then (if (not-caught-fail(v_132) && success?(is-true(success?(1-proj-2-tuple(v_132))))) then cipherstatepack(1-proj-2-tuple(v_132),increment_nonce(2-proj-2-tuple(v_129))) else fail-any) else fail-any)) in
        {165}let v_134: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_126)) && (success?(3-proj-3-tuple(v_128)) && success?(1-proj-3-tuple(v_128)))) then (if (not-caught-fail(v_129) && success?(is-true(success?(1-proj-2-tuple(v_129))))) then (if not-caught-fail(v_130) then (if (not-caught-fail(v_131) && success?(is-true(success?(1-proj-3-tuple(v_131))))) then (if not-caught-fail(v_133) then (v_133,3-proj-3-tuple(v_131),1-proj-3-tuple(v_131)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {166}let v_135: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_134),2-proj-3-tuple(v_128),3-proj-3-tuple(v_128)))) in
        {167}let v_136: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_126)) && success?(symmetricstatepack(1-proj-3-tuple(v_134),2-proj-3-tuple(v_128),3-proj-3-tuple(v_128)))) then (if (not-caught-fail(v_135) && success?(is-true(success?(1-proj-3-tuple(v_135))))) then symmetricstatepack(1-proj-3-tuple(v_135),2-proj-3-tuple(v_135),hash(3-proj-3-tuple(v_135),3-proj-3-tuple(v_126))) else fail-any) else fail-any)) in
        {168}let v_137: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_126)) && success?(1-proj-7-tuple(v_125))) then (if (not-caught-fail(v_128) && success?(is-true(success?(1-proj-3-tuple(v_128))))) then (if (not-caught-fail(v_134) && success?(is-true(success?(1-proj-3-tuple(v_134))))) then (if not-caught-fail(v_136) then (v_136,2-proj-3-tuple(v_134),3-proj-3-tuple(v_134)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {169}let v_138: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_137),2-proj-7-tuple(v_125),3-proj-7-tuple(v_125),4-proj-7-tuple(v_125),5-proj-7-tuple(v_125),6-proj-7-tuple(v_125),7-proj-7-tuple(v_125))) in
        {170}let (hs_10: handshakestate,plaintext_d: bitstring,valid_1: bool) = (if (not-caught-fail(v_125) && success?(is-true(success?(1-proj-7-tuple(v_125))))) then (if (not-caught-fail(v_126) && success?(is-true(success?(1-proj-3-tuple(v_126))))) then (if not-caught-fail(v_127) then (if (not-caught-fail(v_137) && success?(is-true(success?(1-proj-3-tuple(v_137))))) then (if (v_127 && 3-proj-3-tuple(v_137)) then (if not-caught-fail(v_138) then (v_138,2-proj-3-tuple(v_137),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {171}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {172}event RecvEnd(valid_1)
    ) | (
        {174}event LeakPsk(phase0,alice,bob);
        {175}out(pub, key_psk(alice,bob))
    ) | (
        {176}phase 1;
        {177}event LeakPsk(phase1,alice,bob);
        {178}out(pub, key_psk(alice,bob))
    ) | (
        {179}event LeakS(phase0,alice);
        {180}out(pub, key_s(alice))
    ) | (
        {181}phase 1;
        {182}event LeakS(phase1,alice);
        {183}out(pub, key_s(alice))
    )
) | (
    {184}let s_1: keypair = keypairpack(empty,empty) in
    {185}out(pub, getpublickey(s_1));
    (
        {186}let e_1: keypair = keypairpack(empty,empty) in
        {187}let rs_1: key = empty in
        {188}let re_1: key = empty in
        {189}let v_139: bitstring = catch-fail(hash(somename,empty)) in
        {190}let v_140: key = catch-fail(v_139) in
        {191}let v_141: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {192}let v_142: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_139) then (if not-caught-fail(v_140) then (if not-caught-fail(v_141) then symmetricstatepack(v_141,v_140,v_139) else fail-any) else fail-any) else fail-any))) in
        {193}let v_143: symmetricstate = catch-fail((if success?((if not-caught-fail(v_139) then (if not-caught-fail(v_140) then (if not-caught-fail(v_141) then symmetricstatepack(v_141,v_140,v_139) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_142) && success?(is-true(success?(1-proj-3-tuple(v_142))))) then symmetricstatepack(1-proj-3-tuple(v_142),2-proj-3-tuple(v_142),hash(3-proj-3-tuple(v_142),empty)) else fail-any) else fail-any)) in
        {194}let hs_11: handshakestate = (if not-caught-fail(v_143) then handshakestatepack(v_143,s_1,e_1,rs_1,re_1,key_psk(alice,charlie),true) else fail-any) in
        {195}insert statestore(alice,charlie,sid,statepack_a(hs_11))
    ) | (
        {243}get statestore(=alice,=charlie,=sid,statepack_a(hs_12: handshakestate)) in
        {196}let v_144: bitstring = catch-fail(handshakestateunpack(hs_12)) in
        {197}let v_145: bitstring = catch-fail((empty,empty,empty)) in
        {198}let v_146: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_144))) in
        {199}let v_147: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_146),6-proj-7-tuple(v_144))) in
        {200}let v_148: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_146),6-proj-7-tuple(v_144))) in
        {201}let v_149: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_146),6-proj-7-tuple(v_144))) in
        {202}let v_150: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_144)) && success?(2-proj-3-tuple(v_146))) then (if not-caught-fail(v_147) then (if not-caught-fail(v_148) then (if not-caught-fail(v_149) then (v_147,v_148,v_149) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {203}let v_151: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_146),1-proj-3-tuple(v_150),3-proj-3-tuple(v_146)))) in
        {204}let v_152: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_150)) && success?(symmetricstatepack(1-proj-3-tuple(v_146),1-proj-3-tuple(v_150),3-proj-3-tuple(v_146)))) then (if (not-caught-fail(v_151) && success?(is-true(success?(1-proj-3-tuple(v_151))))) then symmetricstatepack(1-proj-3-tuple(v_151),2-proj-3-tuple(v_151),hash(3-proj-3-tuple(v_151),2-proj-3-tuple(v_150))) else fail-any) else fail-any))) in
        {205}let v_153: symmetricstate = catch-fail((if (success?(6-proj-7-tuple(v_144)) && success?(1-proj-7-tuple(v_144))) then (if (not-caught-fail(v_146) && success?(is-true(success?(1-proj-3-tuple(v_146))))) then (if (not-caught-fail(v_150) && success?(is-true(success?(1-proj-3-tuple(v_150))))) then (if (not-caught-fail(v_152) && success?(is-true(success?(1-proj-3-tuple(v_152))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_150)) then cipherstatepack(3-proj-3-tuple(v_150),minnonce) else fail-any),1-proj-3-tuple(v_150),3-proj-3-tuple(v_152)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {206}let v_154: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {207}let v_155: keypair = catch-fail((if not-caught-fail(v_154) then keypairpack(validkey(v_154),key_e(alice,charlie,sid)) else fail-any)) in
        {208}let v_156: bitstring = catch-fail(getpublickey(v_155)) in
        {209}let v_157: bitstring = catch-fail(symmetricstateunpack(v_153)) in
        {210}let v_158: symmetricstate = catch-fail((if (not-caught-fail(v_157) && success?(is-true(success?(1-proj-3-tuple(v_157))))) then symmetricstatepack(1-proj-3-tuple(v_157),2-proj-3-tuple(v_157),hash(3-proj-3-tuple(v_157),v_156)) else fail-any)) in
        {211}let v_159: bitstring = catch-fail(symmetricstateunpack(v_158)) in
        {212}let v_160: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_159),getpublickey(v_155))) in
        {213}let v_161: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_159),getpublickey(v_155))) in
        {214}let v_162: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_159),getpublickey(v_155))) in
        {215}let v_163: bitstring = catch-fail((if (success?(getpublickey(v_155)) && success?(2-proj-3-tuple(v_159))) then (if not-caught-fail(v_160) then (if not-caught-fail(v_161) then (if not-caught-fail(v_162) then (v_160,v_161,v_162) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {216}let v_164: symmetricstate = catch-fail((if success?(getpublickey(v_155)) then (if (not-caught-fail(v_159) && success?(is-true(success?(1-proj-3-tuple(v_159))))) then (if (not-caught-fail(v_163) && success?(is-true(success?(1-proj-3-tuple(v_163))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_163)) then cipherstatepack(2-proj-3-tuple(v_163),minnonce) else fail-any),1-proj-3-tuple(v_163),3-proj-3-tuple(v_159)) else fail-any) else fail-any) else fail-any)) in
        {217}let v_165: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {218}let v_166: keypair = catch-fail((if not-caught-fail(v_165) then keypairpack(validkey(v_165),key_s(alice)) else fail-any)) in
        {219}let v_167: bitstring = catch-fail(symmetricstateunpack(v_164)) in
        {220}let v_168: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_167))) in
        {221}let v_169: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_168),2-proj-2-tuple(v_168),3-proj-3-tuple(v_167),getpublickey(v_166))) in
        {222}let v_170: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_167))) in
        {223}let v_171: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_168))) && success?(1-proj-3-tuple(v_167))) then (if (not-caught-fail(v_170) && success?(is-true(success?(1-proj-2-tuple(v_170))))) then cipherstatepack(1-proj-2-tuple(v_170),increment_nonce(2-proj-2-tuple(v_168))) else fail-any) else fail-any)) in
        {224}let v_172: bitstring = catch-fail((if (success?(getpublickey(v_166)) && (success?(3-proj-3-tuple(v_167)) && success?(1-proj-3-tuple(v_167)))) then (if (not-caught-fail(v_168) && success?(is-true(success?(1-proj-2-tuple(v_168))))) then (if not-caught-fail(v_169) then (if not-caught-fail(v_171) then (v_171,v_169) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {225}let v_173: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_172),2-proj-3-tuple(v_167),3-proj-3-tuple(v_167)))) in
        {226}let v_174: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_172)) && success?(symmetricstatepack(1-proj-2-tuple(v_172),2-proj-3-tuple(v_167),3-proj-3-tuple(v_167)))) then (if (not-caught-fail(v_173) && success?(is-true(success?(1-proj-3-tuple(v_173))))) then symmetricstatepack(1-proj-3-tuple(v_173),2-proj-3-tuple(v_173),hash(3-proj-3-tuple(v_173),2-proj-2-tuple(v_172))) else fail-any) else fail-any)) in
        {227}let v_175: bitstring = catch-fail((if success?(getpublickey(v_166)) then (if (not-caught-fail(v_167) && success?(is-true(success?(1-proj-3-tuple(v_167))))) then (if (not-caught-fail(v_172) && success?(is-true(success?(1-proj-2-tuple(v_172))))) then (if not-caught-fail(v_174) then (v_174,2-proj-2-tuple(v_172)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {228}let v_176: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_175))) in
        {229}let v_177: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_176))) in
        {230}let v_178: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_177),2-proj-2-tuple(v_177),3-proj-3-tuple(v_176),msg_a(alice,charlie,sid))) in
        {231}let v_179: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_176))) in
        {232}let v_180: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_177))) && success?(1-proj-3-tuple(v_176))) then (if (not-caught-fail(v_179) && success?(is-true(success?(1-proj-2-tuple(v_179))))) then cipherstatepack(1-proj-2-tuple(v_179),increment_nonce(2-proj-2-tuple(v_177))) else fail-any) else fail-any)) in
        {233}let v_181: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_176)) && success?(1-proj-3-tuple(v_176))) then (if (not-caught-fail(v_177) && success?(is-true(success?(1-proj-2-tuple(v_177))))) then (if not-caught-fail(v_178) then (if not-caught-fail(v_180) then (v_180,v_178) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {234}let v_182: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_181),2-proj-3-tuple(v_176),3-proj-3-tuple(v_176)))) in
        {235}let v_183: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_181)) && success?(symmetricstatepack(1-proj-2-tuple(v_181),2-proj-3-tuple(v_176),3-proj-3-tuple(v_176)))) then (if (not-caught-fail(v_182) && success?(is-true(success?(1-proj-3-tuple(v_182))))) then symmetricstatepack(1-proj-3-tuple(v_182),2-proj-3-tuple(v_182),hash(3-proj-3-tuple(v_182),2-proj-2-tuple(v_181))) else fail-any) else fail-any)) in
        {236}let v_184: bitstring = catch-fail((if success?(1-proj-2-tuple(v_175)) then (if (not-caught-fail(v_176) && success?(is-true(success?(1-proj-3-tuple(v_176))))) then (if (not-caught-fail(v_181) && success?(is-true(success?(1-proj-2-tuple(v_181))))) then (if not-caught-fail(v_183) then (v_183,2-proj-2-tuple(v_181)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {237}let v_185: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_184),v_166,v_155,4-proj-7-tuple(v_144),5-proj-7-tuple(v_144),6-proj-7-tuple(v_144),7-proj-7-tuple(v_144))) in
        {238}let v_186: bitstring = catch-fail(concat3(v_156,2-proj-2-tuple(v_175),2-proj-2-tuple(v_184))) in
        {239}let (hs_13: handshakestate,message_a_1: bitstring) = (if (not-caught-fail(v_144) && success?(is-true(success?(1-proj-7-tuple(v_144))))) then (if (not-caught-fail(v_145) && success?(is-true(success?(1-proj-3-tuple(v_145))))) then (if not-caught-fail(v_153) then (if not-caught-fail(v_155) then (if not-caught-fail(v_156) then (if not-caught-fail(v_158) then (if not-caught-fail(v_164) then (if not-caught-fail(v_166) then (if (not-caught-fail(v_175) && success?(is-true(success?(1-proj-2-tuple(v_175))))) then (if (not-caught-fail(v_184) && success?(is-true(success?(1-proj-2-tuple(v_184))))) then (if not-caught-fail(v_185) then (if not-caught-fail(v_186) then (v_185,v_186) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {240}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {241}insert statestore(alice,charlie,sid,statepack_b(hs_13));
        {242}out(pub, message_a_1)
    ) | (
        {312}get statestore(=alice,=charlie,=sid,statepack_b(hs_14: handshakestate)) in
        {244}in(pub, message_b_1: bitstring);
        {245}let v_187: bitstring = catch-fail(handshakestateunpack(hs_14)) in
        {246}let v_188: bitstring = catch-fail(deconcat3(message_b_1)) in
        {247}let v_189: bool = catch-fail(true) in
        {248}let v_190: key = catch-fail(1-proj-3-tuple(v_188)) in
        {249}let v_191: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_187))) in
        {250}let v_192: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_187)) then (if (not-caught-fail(v_191) && success?(is-true(success?(1-proj-3-tuple(v_191))))) then symmetricstatepack(1-proj-3-tuple(v_191),2-proj-3-tuple(v_191),hash(3-proj-3-tuple(v_191),v_190)) else fail-any) else fail-any)) in
        {251}let v_193: bitstring = catch-fail(symmetricstateunpack(v_192)) in
        {252}let v_194: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_193),v_190)) in
        {253}let v_195: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_193),v_190)) in
        {254}let v_196: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_193),v_190)) in
        {255}let v_197: bitstring = catch-fail((if success?(2-proj-3-tuple(v_193)) then (if not-caught-fail(v_194) then (if not-caught-fail(v_195) then (if not-caught-fail(v_196) then (v_194,v_195,v_196) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {256}let v_198: symmetricstate = catch-fail((if (not-caught-fail(v_193) && success?(is-true(success?(1-proj-3-tuple(v_193))))) then (if (not-caught-fail(v_197) && success?(is-true(success?(1-proj-3-tuple(v_197))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_197)) then cipherstatepack(2-proj-3-tuple(v_197),minnonce) else fail-any),1-proj-3-tuple(v_197),3-proj-3-tuple(v_193)) else fail-any) else fail-any)) in
        {257}let v_199: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_187))) in
        {258}let v_200: bitstring = catch-fail(symmetricstateunpack(v_198)) in
        {259}let v_201: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_200),(if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_199) && success?(is-true(success?(1-proj-2-tuple(v_199))))) then dhexp(2-proj-2-tuple(v_199),v_190) else fail-any) else fail-any))) in
        {260}let v_202: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_200),(if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_199) && success?(is-true(success?(1-proj-2-tuple(v_199))))) then dhexp(2-proj-2-tuple(v_199),v_190) else fail-any) else fail-any))) in
        {261}let v_203: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_200),(if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_199) && success?(is-true(success?(1-proj-2-tuple(v_199))))) then dhexp(2-proj-2-tuple(v_199),v_190) else fail-any) else fail-any))) in
        {262}let v_204: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_199) && success?(is-true(success?(1-proj-2-tuple(v_199))))) then dhexp(2-proj-2-tuple(v_199),v_190) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_200))) then (if not-caught-fail(v_201) then (if not-caught-fail(v_202) then (if not-caught-fail(v_203) then (v_201,v_202,v_203) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {263}let v_205: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_199) && success?(is-true(success?(1-proj-2-tuple(v_199))))) then dhexp(2-proj-2-tuple(v_199),v_190) else fail-any) else fail-any)) then (if (not-caught-fail(v_200) && success?(is-true(success?(1-proj-3-tuple(v_200))))) then (if (not-caught-fail(v_204) && success?(is-true(success?(1-proj-3-tuple(v_204))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_204)) then cipherstatepack(2-proj-3-tuple(v_204),minnonce) else fail-any),1-proj-3-tuple(v_204),3-proj-3-tuple(v_200)) else fail-any) else fail-any) else fail-any)) in
        {264}let v_206: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_187))) in
        {265}let v_207: bitstring = catch-fail(symmetricstateunpack(v_205)) in
        {266}let v_208: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_207),(if success?(2-proj-7-tuple(v_187)) then (if (not-caught-fail(v_206) && success?(is-true(success?(1-proj-2-tuple(v_206))))) then dhexp(2-proj-2-tuple(v_206),v_190) else fail-any) else fail-any))) in
        {267}let v_209: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_207),(if success?(2-proj-7-tuple(v_187)) then (if (not-caught-fail(v_206) && success?(is-true(success?(1-proj-2-tuple(v_206))))) then dhexp(2-proj-2-tuple(v_206),v_190) else fail-any) else fail-any))) in
        {268}let v_210: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_207),(if success?(2-proj-7-tuple(v_187)) then (if (not-caught-fail(v_206) && success?(is-true(success?(1-proj-2-tuple(v_206))))) then dhexp(2-proj-2-tuple(v_206),v_190) else fail-any) else fail-any))) in
        {269}let v_211: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_187)) then (if (not-caught-fail(v_206) && success?(is-true(success?(1-proj-2-tuple(v_206))))) then dhexp(2-proj-2-tuple(v_206),v_190) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_207))) then (if not-caught-fail(v_208) then (if not-caught-fail(v_209) then (if not-caught-fail(v_210) then (v_208,v_209,v_210) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {270}let v_212: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_187)) then (if (not-caught-fail(v_206) && success?(is-true(success?(1-proj-2-tuple(v_206))))) then dhexp(2-proj-2-tuple(v_206),v_190) else fail-any) else fail-any)) then (if (not-caught-fail(v_207) && success?(is-true(success?(1-proj-3-tuple(v_207))))) then (if (not-caught-fail(v_211) && success?(is-true(success?(1-proj-3-tuple(v_211))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_211)) then cipherstatepack(2-proj-3-tuple(v_211),minnonce) else fail-any),1-proj-3-tuple(v_211),3-proj-3-tuple(v_207)) else fail-any) else fail-any) else fail-any)) in
        {271}let v_213: bitstring = catch-fail(symmetricstateunpack(v_212)) in
        {272}let v_214: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_213))) in
        {273}let v_215: aead = catch-fail(decrypt(1-proj-2-tuple(v_214),2-proj-2-tuple(v_214),3-proj-3-tuple(v_213),2-proj-3-tuple(v_188))) in
        {274}let v_216: bitstring = catch-fail(aeadunpack(v_215)) in
        {275}let v_217: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_213))) in
        {276}let v_218: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_214))) && success?(1-proj-3-tuple(v_213))) then (if (not-caught-fail(v_217) && success?(is-true(success?(1-proj-2-tuple(v_217))))) then cipherstatepack(1-proj-2-tuple(v_217),increment_nonce(2-proj-2-tuple(v_214))) else fail-any) else fail-any)) in
        {277}let v_219: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_188)) && (success?(3-proj-3-tuple(v_213)) && success?(1-proj-3-tuple(v_213)))) then (if (not-caught-fail(v_214) && success?(is-true(success?(1-proj-2-tuple(v_214))))) then (if not-caught-fail(v_215) then (if (not-caught-fail(v_216) && success?(is-true(success?(1-proj-3-tuple(v_216))))) then (if not-caught-fail(v_218) then (v_218,3-proj-3-tuple(v_216),1-proj-3-tuple(v_216)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {278}let v_220: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_219),2-proj-3-tuple(v_213),3-proj-3-tuple(v_213)))) in
        {279}let v_221: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_188)) && success?(symmetricstatepack(1-proj-3-tuple(v_219),2-proj-3-tuple(v_213),3-proj-3-tuple(v_213)))) then (if (not-caught-fail(v_220) && success?(is-true(success?(1-proj-3-tuple(v_220))))) then symmetricstatepack(1-proj-3-tuple(v_220),2-proj-3-tuple(v_220),hash(3-proj-3-tuple(v_220),2-proj-3-tuple(v_188))) else fail-any) else fail-any)) in
        {280}let v_222: bitstring = catch-fail((if success?(2-proj-3-tuple(v_188)) then (if (not-caught-fail(v_213) && success?(is-true(success?(1-proj-3-tuple(v_213))))) then (if (not-caught-fail(v_219) && success?(is-true(success?(1-proj-3-tuple(v_219))))) then (if not-caught-fail(v_221) then (v_221,2-proj-3-tuple(v_219),3-proj-3-tuple(v_219)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {281}let v_223: key = catch-fail(2-proj-3-tuple(v_222)) in
        {282}let v_224: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_187))) in
        {283}let v_225: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_222))) in
        {284}let v_226: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_225),(if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_224) && success?(is-true(success?(1-proj-2-tuple(v_224))))) then dhexp(2-proj-2-tuple(v_224),v_223) else fail-any) else fail-any))) in
        {285}let v_227: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_225),(if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_224) && success?(is-true(success?(1-proj-2-tuple(v_224))))) then dhexp(2-proj-2-tuple(v_224),v_223) else fail-any) else fail-any))) in
        {286}let v_228: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_225),(if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_224) && success?(is-true(success?(1-proj-2-tuple(v_224))))) then dhexp(2-proj-2-tuple(v_224),v_223) else fail-any) else fail-any))) in
        {287}let v_229: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_224) && success?(is-true(success?(1-proj-2-tuple(v_224))))) then dhexp(2-proj-2-tuple(v_224),v_223) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_225))) then (if not-caught-fail(v_226) then (if not-caught-fail(v_227) then (if not-caught-fail(v_228) then (v_226,v_227,v_228) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {288}let v_230: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_187)) then (if (not-caught-fail(v_224) && success?(is-true(success?(1-proj-2-tuple(v_224))))) then dhexp(2-proj-2-tuple(v_224),v_223) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_222))) then (if (not-caught-fail(v_225) && success?(is-true(success?(1-proj-3-tuple(v_225))))) then (if (not-caught-fail(v_229) && success?(is-true(success?(1-proj-3-tuple(v_229))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_229)) then cipherstatepack(2-proj-3-tuple(v_229),minnonce) else fail-any),1-proj-3-tuple(v_229),3-proj-3-tuple(v_225)) else fail-any) else fail-any) else fail-any)) in
        {289}let v_231: bitstring = catch-fail(symmetricstateunpack(v_230)) in
        {290}let v_232: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_231))) in
        {291}let v_233: aead = catch-fail(decrypt(1-proj-2-tuple(v_232),2-proj-2-tuple(v_232),3-proj-3-tuple(v_231),3-proj-3-tuple(v_188))) in
        {292}let v_234: bitstring = catch-fail(aeadunpack(v_233)) in
        {293}let v_235: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_231))) in
        {294}let v_236: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_232))) && success?(1-proj-3-tuple(v_231))) then (if (not-caught-fail(v_235) && success?(is-true(success?(1-proj-2-tuple(v_235))))) then cipherstatepack(1-proj-2-tuple(v_235),increment_nonce(2-proj-2-tuple(v_232))) else fail-any) else fail-any)) in
        {295}let v_237: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_188)) && (success?(3-proj-3-tuple(v_231)) && success?(1-proj-3-tuple(v_231)))) then (if (not-caught-fail(v_232) && success?(is-true(success?(1-proj-2-tuple(v_232))))) then (if not-caught-fail(v_233) then (if (not-caught-fail(v_234) && success?(is-true(success?(1-proj-3-tuple(v_234))))) then (if not-caught-fail(v_236) then (v_236,3-proj-3-tuple(v_234),1-proj-3-tuple(v_234)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {296}let v_238: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_237),2-proj-3-tuple(v_231),3-proj-3-tuple(v_231)))) in
        {297}let v_239: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_188)) && success?(symmetricstatepack(1-proj-3-tuple(v_237),2-proj-3-tuple(v_231),3-proj-3-tuple(v_231)))) then (if (not-caught-fail(v_238) && success?(is-true(success?(1-proj-3-tuple(v_238))))) then symmetricstatepack(1-proj-3-tuple(v_238),2-proj-3-tuple(v_238),hash(3-proj-3-tuple(v_238),3-proj-3-tuple(v_188))) else fail-any) else fail-any)) in
        {298}let v_240: bitstring = catch-fail((if success?(3-proj-3-tuple(v_188)) then (if (not-caught-fail(v_231) && success?(is-true(success?(1-proj-3-tuple(v_231))))) then (if (not-caught-fail(v_237) && success?(is-true(success?(1-proj-3-tuple(v_237))))) then (if not-caught-fail(v_239) then (v_239,2-proj-3-tuple(v_237),3-proj-3-tuple(v_237)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {299}let v_241: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {300}let v_242: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_240),2-proj-7-tuple(v_187),3-proj-7-tuple(v_187),v_223,v_190,6-proj-7-tuple(v_187),7-proj-7-tuple(v_187))) in
        {301}let v_243: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_240))) in
        {302}let v_244: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_243),zero)) in
        {303}let v_245: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_243),zero)) in
        {304}let v_246: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_243),zero)) in
        {305}let v_247: bitstring = catch-fail((if success?(2-proj-3-tuple(v_243)) then (if not-caught-fail(v_244) then (if not-caught-fail(v_245) then (if not-caught-fail(v_246) then (v_244,v_245,v_246) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {306}let v_248: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_247)) then cipherstatepack(1-proj-3-tuple(v_247),minnonce) else fail-any)) in
        {307}let v_249: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_247)) then cipherstatepack(2-proj-3-tuple(v_247),minnonce) else fail-any)) in
        {308}let v_250: bitstring = catch-fail((if success?(1-proj-3-tuple(v_240)) then (if (not-caught-fail(v_243) && success?(is-true(success?(1-proj-3-tuple(v_243))))) then (if (not-caught-fail(v_247) && success?(is-true(success?(1-proj-3-tuple(v_247))))) then (if not-caught-fail(v_248) then (if not-caught-fail(v_249) then (1-proj-3-tuple(v_240),v_248,v_249) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {309}let (hs_15: handshakestate,plaintext_b_1: bitstring,valid_2: bool,cs1_3: cipherstate,cs2_3: cipherstate) = (if (not-caught-fail(v_187) && success?(is-true(success?(1-proj-7-tuple(v_187))))) then (if (not-caught-fail(v_188) && success?(is-true(success?(1-proj-3-tuple(v_188))))) then (if not-caught-fail(v_189) then (if not-caught-fail(v_190) then (if not-caught-fail(v_192) then (if not-caught-fail(v_198) then (if not-caught-fail(v_205) then (if not-caught-fail(v_212) then (if (not-caught-fail(v_222) && success?(is-true(success?(1-proj-3-tuple(v_222))))) then (if not-caught-fail(v_223) then (if not-caught-fail(v_230) then (if (not-caught-fail(v_240) && success?(is-true(success?(1-proj-3-tuple(v_240))))) then (if ((3-proj-3-tuple(v_222) && 3-proj-3-tuple(v_240)) && (v_223 = getpublickey((if not-caught-fail(v_241) then keypairpack(validkey(v_241),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_242) then (if (not-caught-fail(v_250) && success?(is-true(success?(1-proj-3-tuple(v_250))))) then (v_242,2-proj-3-tuple(v_240),true,2-proj-3-tuple(v_250),3-proj-3-tuple(v_250)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {310}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_1);
        {311}insert statestore(alice,charlie,sid,statepack_c(hs_15,cs1_3,cs2_3))
    ) | (
        {313}!
        {332}get statestore(=alice,=charlie,=sid,statepack_c(hs_16: handshakestate,cs1_4: cipherstate,cs2_4: cipherstate)) in
        {314}let hs_17: handshakestate = handshakestatesetcs(hs_16,cs1_4) in
        {315}let v_251: bitstring = catch-fail(handshakestateunpack(hs_17)) in
        {316}let v_252: bitstring = catch-fail((empty,empty,empty)) in
        {317}let v_253: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_251))) in
        {318}let v_254: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_253))) in
        {319}let v_255: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_254),2-proj-2-tuple(v_254),3-proj-3-tuple(v_253),msg_c(alice,charlie,sid))) in
        {320}let v_256: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_253))) in
        {321}let v_257: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_254))) && success?(1-proj-3-tuple(v_253))) then (if (not-caught-fail(v_256) && success?(is-true(success?(1-proj-2-tuple(v_256))))) then cipherstatepack(1-proj-2-tuple(v_256),increment_nonce(2-proj-2-tuple(v_254))) else fail-any) else fail-any)) in
        {322}let v_258: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_253)) && success?(1-proj-3-tuple(v_253))) then (if (not-caught-fail(v_254) && success?(is-true(success?(1-proj-2-tuple(v_254))))) then (if not-caught-fail(v_255) then (if not-caught-fail(v_257) then (v_257,v_255) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {323}let v_259: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_258),2-proj-3-tuple(v_253),3-proj-3-tuple(v_253)))) in
        {324}let v_260: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_258)) && success?(symmetricstatepack(1-proj-2-tuple(v_258),2-proj-3-tuple(v_253),3-proj-3-tuple(v_253)))) then (if (not-caught-fail(v_259) && success?(is-true(success?(1-proj-3-tuple(v_259))))) then symmetricstatepack(1-proj-3-tuple(v_259),2-proj-3-tuple(v_259),hash(3-proj-3-tuple(v_259),2-proj-2-tuple(v_258))) else fail-any) else fail-any)) in
        {325}let v_261: bitstring = catch-fail((if success?(1-proj-7-tuple(v_251)) then (if (not-caught-fail(v_253) && success?(is-true(success?(1-proj-3-tuple(v_253))))) then (if (not-caught-fail(v_258) && success?(is-true(success?(1-proj-2-tuple(v_258))))) then (if not-caught-fail(v_260) then (v_260,2-proj-2-tuple(v_258)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {326}let v_262: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_261),2-proj-7-tuple(v_251),3-proj-7-tuple(v_251),4-proj-7-tuple(v_251),5-proj-7-tuple(v_251),6-proj-7-tuple(v_251),7-proj-7-tuple(v_251))) in
        {327}let v_263: bitstring = catch-fail(concat3(1-proj-3-tuple(v_252),2-proj-3-tuple(v_252),2-proj-2-tuple(v_261))) in
        {328}let (hs_18: handshakestate,message_c_1: bitstring) = (if (not-caught-fail(v_251) && success?(is-true(success?(1-proj-7-tuple(v_251))))) then (if (not-caught-fail(v_252) && success?(is-true(success?(1-proj-3-tuple(v_252))))) then (if (not-caught-fail(v_261) && success?(is-true(success?(1-proj-2-tuple(v_261))))) then (if not-caught-fail(v_262) then (if not-caught-fail(v_263) then (v_262,v_263) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {329}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {330}insert statestore(alice,charlie,sid,statepack_d(hs_18,handshakestategetcs(hs_18),cs2_4));
        {331}out(pub, message_c_1)
    ) | (
        {333}!
        {353}get statestore(=alice,=charlie,=sid,statepack_d(hs_19: handshakestate,cs1_5: cipherstate,cs2_5: cipherstate)) in
        {334}let hs_20: handshakestate = handshakestatesetcs(hs_19,cs2_5) in
        {335}in(pub, message_d_1: bitstring);
        {336}let v_264: bitstring = catch-fail(handshakestateunpack(hs_20)) in
        {337}let v_265: bitstring = catch-fail(deconcat3(message_d_1)) in
        {338}let v_266: bool = catch-fail(true) in
        {339}let v_267: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_264))) in
        {340}let v_268: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_267))) in
        {341}let v_269: aead = catch-fail(decrypt(1-proj-2-tuple(v_268),2-proj-2-tuple(v_268),3-proj-3-tuple(v_267),3-proj-3-tuple(v_265))) in
        {342}let v_270: bitstring = catch-fail(aeadunpack(v_269)) in
        {343}let v_271: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_267))) in
        {344}let v_272: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_268))) && success?(1-proj-3-tuple(v_267))) then (if (not-caught-fail(v_271) && success?(is-true(success?(1-proj-2-tuple(v_271))))) then cipherstatepack(1-proj-2-tuple(v_271),increment_nonce(2-proj-2-tuple(v_268))) else fail-any) else fail-any)) in
        {345}let v_273: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_265)) && (success?(3-proj-3-tuple(v_267)) && success?(1-proj-3-tuple(v_267)))) then (if (not-caught-fail(v_268) && success?(is-true(success?(1-proj-2-tuple(v_268))))) then (if not-caught-fail(v_269) then (if (not-caught-fail(v_270) && success?(is-true(success?(1-proj-3-tuple(v_270))))) then (if not-caught-fail(v_272) then (v_272,3-proj-3-tuple(v_270),1-proj-3-tuple(v_270)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {346}let v_274: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_273),2-proj-3-tuple(v_267),3-proj-3-tuple(v_267)))) in
        {347}let v_275: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_265)) && success?(symmetricstatepack(1-proj-3-tuple(v_273),2-proj-3-tuple(v_267),3-proj-3-tuple(v_267)))) then (if (not-caught-fail(v_274) && success?(is-true(success?(1-proj-3-tuple(v_274))))) then symmetricstatepack(1-proj-3-tuple(v_274),2-proj-3-tuple(v_274),hash(3-proj-3-tuple(v_274),3-proj-3-tuple(v_265))) else fail-any) else fail-any)) in
        {348}let v_276: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_265)) && success?(1-proj-7-tuple(v_264))) then (if (not-caught-fail(v_267) && success?(is-true(success?(1-proj-3-tuple(v_267))))) then (if (not-caught-fail(v_273) && success?(is-true(success?(1-proj-3-tuple(v_273))))) then (if not-caught-fail(v_275) then (v_275,2-proj-3-tuple(v_273),3-proj-3-tuple(v_273)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {349}let v_277: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_276),2-proj-7-tuple(v_264),3-proj-7-tuple(v_264),4-proj-7-tuple(v_264),5-proj-7-tuple(v_264),6-proj-7-tuple(v_264),7-proj-7-tuple(v_264))) in
        {350}let (hs_21: handshakestate,plaintext_d_1: bitstring,valid_3: bool) = (if (not-caught-fail(v_264) && success?(is-true(success?(1-proj-7-tuple(v_264))))) then (if (not-caught-fail(v_265) && success?(is-true(success?(1-proj-3-tuple(v_265))))) then (if not-caught-fail(v_266) then (if (not-caught-fail(v_276) && success?(is-true(success?(1-proj-3-tuple(v_276))))) then (if (v_266 && 3-proj-3-tuple(v_276)) then (if not-caught-fail(v_277) then (v_277,2-proj-3-tuple(v_276),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {351}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_1);
        {352}event RecvEnd(valid_3)
    ) | (
        {354}event LeakPsk(phase0,alice,charlie);
        {355}out(pub, key_psk(alice,charlie))
    ) | (
        {356}phase 1;
        {357}event LeakPsk(phase1,alice,charlie);
        {358}out(pub, key_psk(alice,charlie))
    ) | (
        {359}event LeakS(phase0,alice);
        {360}out(pub, key_s(alice))
    ) | (
        {361}phase 1;
        {362}event LeakS(phase1,alice);
        {363}out(pub, key_s(alice))
    )
) | (
    {364}let s_2: keypair = keypairpack(empty,empty) in
    {365}out(pub, getpublickey(s_2));
    (
        {366}let e_2: keypair = keypairpack(empty,empty) in
        {367}let rs_2: key = empty in
        {368}let re_2: key = empty in
        {369}let v_278: bitstring = catch-fail(hash(somename,empty)) in
        {370}let v_279: key = catch-fail(v_278) in
        {371}let v_280: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {372}let v_281: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_278) then (if not-caught-fail(v_279) then (if not-caught-fail(v_280) then symmetricstatepack(v_280,v_279,v_278) else fail-any) else fail-any) else fail-any))) in
        {373}let v_282: symmetricstate = catch-fail((if success?((if not-caught-fail(v_278) then (if not-caught-fail(v_279) then (if not-caught-fail(v_280) then symmetricstatepack(v_280,v_279,v_278) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_281) && success?(is-true(success?(1-proj-3-tuple(v_281))))) then symmetricstatepack(1-proj-3-tuple(v_281),2-proj-3-tuple(v_281),hash(3-proj-3-tuple(v_281),empty)) else fail-any) else fail-any)) in
        {374}let hs_22: handshakestate = (if not-caught-fail(v_282) then handshakestatepack(v_282,s_2,e_2,rs_2,re_2,key_psk(alice,bob),false) else fail-any) in
        {375}insert statestore(bob,alice,sid,statepack_a(hs_22))
    ) | (
        {423}get statestore(=bob,=alice,=sid,statepack_a(hs_23: handshakestate)) in
        {376}in(pub, message_a_2: bitstring);
        {377}let v_283: bitstring = catch-fail(handshakestateunpack(hs_23)) in
        {378}let v_284: bitstring = catch-fail(deconcat3(message_a_2)) in
        {379}let v_285: bool = catch-fail(true) in
        {380}let v_286: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_283))) in
        {381}let v_287: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_286),6-proj-7-tuple(v_283))) in
        {382}let v_288: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_286),6-proj-7-tuple(v_283))) in
        {383}let v_289: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_286),6-proj-7-tuple(v_283))) in
        {384}let v_290: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_283)) && success?(2-proj-3-tuple(v_286))) then (if not-caught-fail(v_287) then (if not-caught-fail(v_288) then (if not-caught-fail(v_289) then (v_287,v_288,v_289) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {385}let v_291: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_286),1-proj-3-tuple(v_290),3-proj-3-tuple(v_286)))) in
        {386}let v_292: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_290)) && success?(symmetricstatepack(1-proj-3-tuple(v_286),1-proj-3-tuple(v_290),3-proj-3-tuple(v_286)))) then (if (not-caught-fail(v_291) && success?(is-true(success?(1-proj-3-tuple(v_291))))) then symmetricstatepack(1-proj-3-tuple(v_291),2-proj-3-tuple(v_291),hash(3-proj-3-tuple(v_291),2-proj-3-tuple(v_290))) else fail-any) else fail-any))) in
        {387}let v_293: symmetricstate = catch-fail((if (success?(6-proj-7-tuple(v_283)) && success?(1-proj-7-tuple(v_283))) then (if (not-caught-fail(v_286) && success?(is-true(success?(1-proj-3-tuple(v_286))))) then (if (not-caught-fail(v_290) && success?(is-true(success?(1-proj-3-tuple(v_290))))) then (if (not-caught-fail(v_292) && success?(is-true(success?(1-proj-3-tuple(v_292))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_290)) then cipherstatepack(3-proj-3-tuple(v_290),minnonce) else fail-any),1-proj-3-tuple(v_290),3-proj-3-tuple(v_292)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {388}let v_294: key = catch-fail(1-proj-3-tuple(v_284)) in
        {389}let v_295: bitstring = catch-fail(symmetricstateunpack(v_293)) in
        {390}let v_296: symmetricstate = catch-fail((if (not-caught-fail(v_295) && success?(is-true(success?(1-proj-3-tuple(v_295))))) then symmetricstatepack(1-proj-3-tuple(v_295),2-proj-3-tuple(v_295),hash(3-proj-3-tuple(v_295),v_294)) else fail-any)) in
        {391}let v_297: bitstring = catch-fail(symmetricstateunpack(v_296)) in
        {392}let v_298: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_297),v_294)) in
        {393}let v_299: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_297),v_294)) in
        {394}let v_300: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_297),v_294)) in
        {395}let v_301: bitstring = catch-fail((if success?(2-proj-3-tuple(v_297)) then (if not-caught-fail(v_298) then (if not-caught-fail(v_299) then (if not-caught-fail(v_300) then (v_298,v_299,v_300) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {396}let v_302: symmetricstate = catch-fail((if (not-caught-fail(v_297) && success?(is-true(success?(1-proj-3-tuple(v_297))))) then (if (not-caught-fail(v_301) && success?(is-true(success?(1-proj-3-tuple(v_301))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_301)) then cipherstatepack(2-proj-3-tuple(v_301),minnonce) else fail-any),1-proj-3-tuple(v_301),3-proj-3-tuple(v_297)) else fail-any) else fail-any)) in
        {397}let v_303: bitstring = catch-fail(symmetricstateunpack(v_302)) in
        {398}let v_304: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_303))) in
        {399}let v_305: aead = catch-fail(decrypt(1-proj-2-tuple(v_304),2-proj-2-tuple(v_304),3-proj-3-tuple(v_303),2-proj-3-tuple(v_284))) in
        {400}let v_306: bitstring = catch-fail(aeadunpack(v_305)) in
        {401}let v_307: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_303))) in
        {402}let v_308: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_304))) && success?(1-proj-3-tuple(v_303))) then (if (not-caught-fail(v_307) && success?(is-true(success?(1-proj-2-tuple(v_307))))) then cipherstatepack(1-proj-2-tuple(v_307),increment_nonce(2-proj-2-tuple(v_304))) else fail-any) else fail-any)) in
        {403}let v_309: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_284)) && (success?(3-proj-3-tuple(v_303)) && success?(1-proj-3-tuple(v_303)))) then (if (not-caught-fail(v_304) && success?(is-true(success?(1-proj-2-tuple(v_304))))) then (if not-caught-fail(v_305) then (if (not-caught-fail(v_306) && success?(is-true(success?(1-proj-3-tuple(v_306))))) then (if not-caught-fail(v_308) then (v_308,3-proj-3-tuple(v_306),1-proj-3-tuple(v_306)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {404}let v_310: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_309),2-proj-3-tuple(v_303),3-proj-3-tuple(v_303)))) in
        {405}let v_311: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_284)) && success?(symmetricstatepack(1-proj-3-tuple(v_309),2-proj-3-tuple(v_303),3-proj-3-tuple(v_303)))) then (if (not-caught-fail(v_310) && success?(is-true(success?(1-proj-3-tuple(v_310))))) then symmetricstatepack(1-proj-3-tuple(v_310),2-proj-3-tuple(v_310),hash(3-proj-3-tuple(v_310),2-proj-3-tuple(v_284))) else fail-any) else fail-any)) in
        {406}let v_312: bitstring = catch-fail((if success?(2-proj-3-tuple(v_284)) then (if (not-caught-fail(v_303) && success?(is-true(success?(1-proj-3-tuple(v_303))))) then (if (not-caught-fail(v_309) && success?(is-true(success?(1-proj-3-tuple(v_309))))) then (if not-caught-fail(v_311) then (v_311,2-proj-3-tuple(v_309),3-proj-3-tuple(v_309)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {407}let v_313: key = catch-fail(2-proj-3-tuple(v_312)) in
        {408}let v_314: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_312))) in
        {409}let v_315: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_314))) in
        {410}let v_316: aead = catch-fail(decrypt(1-proj-2-tuple(v_315),2-proj-2-tuple(v_315),3-proj-3-tuple(v_314),3-proj-3-tuple(v_284))) in
        {411}let v_317: bitstring = catch-fail(aeadunpack(v_316)) in
        {412}let v_318: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_314))) in
        {413}let v_319: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_315))) && success?(1-proj-3-tuple(v_314))) then (if (not-caught-fail(v_318) && success?(is-true(success?(1-proj-2-tuple(v_318))))) then cipherstatepack(1-proj-2-tuple(v_318),increment_nonce(2-proj-2-tuple(v_315))) else fail-any) else fail-any)) in
        {414}let v_320: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_284)) && (success?(3-proj-3-tuple(v_314)) && success?(1-proj-3-tuple(v_314)))) then (if (not-caught-fail(v_315) && success?(is-true(success?(1-proj-2-tuple(v_315))))) then (if not-caught-fail(v_316) then (if (not-caught-fail(v_317) && success?(is-true(success?(1-proj-3-tuple(v_317))))) then (if not-caught-fail(v_319) then (v_319,3-proj-3-tuple(v_317),1-proj-3-tuple(v_317)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {415}let v_321: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_320),2-proj-3-tuple(v_314),3-proj-3-tuple(v_314)))) in
        {416}let v_322: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_284)) && success?(symmetricstatepack(1-proj-3-tuple(v_320),2-proj-3-tuple(v_314),3-proj-3-tuple(v_314)))) then (if (not-caught-fail(v_321) && success?(is-true(success?(1-proj-3-tuple(v_321))))) then symmetricstatepack(1-proj-3-tuple(v_321),2-proj-3-tuple(v_321),hash(3-proj-3-tuple(v_321),3-proj-3-tuple(v_284))) else fail-any) else fail-any)) in
        {417}let v_323: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_284)) && success?(1-proj-3-tuple(v_312))) then (if (not-caught-fail(v_314) && success?(is-true(success?(1-proj-3-tuple(v_314))))) then (if (not-caught-fail(v_320) && success?(is-true(success?(1-proj-3-tuple(v_320))))) then (if not-caught-fail(v_322) then (v_322,2-proj-3-tuple(v_320),3-proj-3-tuple(v_320)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {418}let v_324: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {419}let v_325: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_323),2-proj-7-tuple(v_283),3-proj-7-tuple(v_283),v_313,v_294,6-proj-7-tuple(v_283),7-proj-7-tuple(v_283))) in
        {420}let (hs_24: handshakestate,plaintext_a: bitstring,valid_4: bool) = (if (not-caught-fail(v_283) && success?(is-true(success?(1-proj-7-tuple(v_283))))) then (if (not-caught-fail(v_284) && success?(is-true(success?(1-proj-3-tuple(v_284))))) then (if not-caught-fail(v_285) then (if not-caught-fail(v_293) then (if not-caught-fail(v_294) then (if not-caught-fail(v_296) then (if not-caught-fail(v_302) then (if (not-caught-fail(v_312) && success?(is-true(success?(1-proj-3-tuple(v_312))))) then (if not-caught-fail(v_313) then (if (not-caught-fail(v_323) && success?(is-true(success?(1-proj-3-tuple(v_323))))) then (if ((3-proj-3-tuple(v_312) && 3-proj-3-tuple(v_323)) && (v_313 = getpublickey((if not-caught-fail(v_324) then keypairpack(validkey(v_324),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_325) then (v_325,2-proj-3-tuple(v_323),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {421}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {422}insert statestore(bob,alice,sid,statepack_b(hs_24))
    ) | (
        {492}get statestore(=bob,=alice,=sid,statepack_b(hs_25: handshakestate)) in
        {424}let v_326: bitstring = catch-fail(handshakestateunpack(hs_25)) in
        {425}let v_327: bitstring = catch-fail((empty,empty,empty)) in
        {426}let v_328: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {427}let v_329: keypair = catch-fail((if not-caught-fail(v_328) then keypairpack(validkey(v_328),key_e(bob,alice,sid)) else fail-any)) in
        {428}let v_330: bitstring = catch-fail(getpublickey(v_329)) in
        {429}let v_331: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_326))) in
        {430}let v_332: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_326)) then (if (not-caught-fail(v_331) && success?(is-true(success?(1-proj-3-tuple(v_331))))) then symmetricstatepack(1-proj-3-tuple(v_331),2-proj-3-tuple(v_331),hash(3-proj-3-tuple(v_331),v_330)) else fail-any) else fail-any)) in
        {431}let v_333: bitstring = catch-fail(symmetricstateunpack(v_332)) in
        {432}let v_334: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_333),getpublickey(v_329))) in
        {433}let v_335: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_333),getpublickey(v_329))) in
        {434}let v_336: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_333),getpublickey(v_329))) in
        {435}let v_337: bitstring = catch-fail((if (success?(getpublickey(v_329)) && success?(2-proj-3-tuple(v_333))) then (if not-caught-fail(v_334) then (if not-caught-fail(v_335) then (if not-caught-fail(v_336) then (v_334,v_335,v_336) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {436}let v_338: symmetricstate = catch-fail((if success?(getpublickey(v_329)) then (if (not-caught-fail(v_333) && success?(is-true(success?(1-proj-3-tuple(v_333))))) then (if (not-caught-fail(v_337) && success?(is-true(success?(1-proj-3-tuple(v_337))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_337)) then cipherstatepack(2-proj-3-tuple(v_337),minnonce) else fail-any),1-proj-3-tuple(v_337),3-proj-3-tuple(v_333)) else fail-any) else fail-any) else fail-any)) in
        {437}let v_339: bitstring = catch-fail(keypairunpack(v_329)) in
        {438}let v_340: bitstring = catch-fail(symmetricstateunpack(v_338)) in
        {439}let v_341: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_340),(if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_339) && success?(is-true(success?(1-proj-2-tuple(v_339))))) then dhexp(2-proj-2-tuple(v_339),5-proj-7-tuple(v_326)) else fail-any) else fail-any))) in
        {440}let v_342: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_340),(if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_339) && success?(is-true(success?(1-proj-2-tuple(v_339))))) then dhexp(2-proj-2-tuple(v_339),5-proj-7-tuple(v_326)) else fail-any) else fail-any))) in
        {441}let v_343: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_340),(if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_339) && success?(is-true(success?(1-proj-2-tuple(v_339))))) then dhexp(2-proj-2-tuple(v_339),5-proj-7-tuple(v_326)) else fail-any) else fail-any))) in
        {442}let v_344: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_339) && success?(is-true(success?(1-proj-2-tuple(v_339))))) then dhexp(2-proj-2-tuple(v_339),5-proj-7-tuple(v_326)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_340))) then (if not-caught-fail(v_341) then (if not-caught-fail(v_342) then (if not-caught-fail(v_343) then (v_341,v_342,v_343) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {443}let v_345: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_339) && success?(is-true(success?(1-proj-2-tuple(v_339))))) then dhexp(2-proj-2-tuple(v_339),5-proj-7-tuple(v_326)) else fail-any) else fail-any)) then (if (not-caught-fail(v_340) && success?(is-true(success?(1-proj-3-tuple(v_340))))) then (if (not-caught-fail(v_344) && success?(is-true(success?(1-proj-3-tuple(v_344))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_344)) then cipherstatepack(2-proj-3-tuple(v_344),minnonce) else fail-any),1-proj-3-tuple(v_344),3-proj-3-tuple(v_340)) else fail-any) else fail-any) else fail-any)) in
        {444}let v_346: bitstring = catch-fail(keypairunpack(v_329)) in
        {445}let v_347: bitstring = catch-fail(symmetricstateunpack(v_345)) in
        {446}let v_348: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_347),(if success?(4-proj-7-tuple(v_326)) then (if (not-caught-fail(v_346) && success?(is-true(success?(1-proj-2-tuple(v_346))))) then dhexp(2-proj-2-tuple(v_346),4-proj-7-tuple(v_326)) else fail-any) else fail-any))) in
        {447}let v_349: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_347),(if success?(4-proj-7-tuple(v_326)) then (if (not-caught-fail(v_346) && success?(is-true(success?(1-proj-2-tuple(v_346))))) then dhexp(2-proj-2-tuple(v_346),4-proj-7-tuple(v_326)) else fail-any) else fail-any))) in
        {448}let v_350: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_347),(if success?(4-proj-7-tuple(v_326)) then (if (not-caught-fail(v_346) && success?(is-true(success?(1-proj-2-tuple(v_346))))) then dhexp(2-proj-2-tuple(v_346),4-proj-7-tuple(v_326)) else fail-any) else fail-any))) in
        {449}let v_351: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_326)) then (if (not-caught-fail(v_346) && success?(is-true(success?(1-proj-2-tuple(v_346))))) then dhexp(2-proj-2-tuple(v_346),4-proj-7-tuple(v_326)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_347))) then (if not-caught-fail(v_348) then (if not-caught-fail(v_349) then (if not-caught-fail(v_350) then (v_348,v_349,v_350) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {450}let v_352: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_326)) then (if (not-caught-fail(v_346) && success?(is-true(success?(1-proj-2-tuple(v_346))))) then dhexp(2-proj-2-tuple(v_346),4-proj-7-tuple(v_326)) else fail-any) else fail-any)) then (if (not-caught-fail(v_347) && success?(is-true(success?(1-proj-3-tuple(v_347))))) then (if (not-caught-fail(v_351) && success?(is-true(success?(1-proj-3-tuple(v_351))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_351)) then cipherstatepack(2-proj-3-tuple(v_351),minnonce) else fail-any),1-proj-3-tuple(v_351),3-proj-3-tuple(v_347)) else fail-any) else fail-any) else fail-any)) in
        {451}let v_353: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {452}let v_354: keypair = catch-fail((if not-caught-fail(v_353) then keypairpack(validkey(v_353),key_s(bob)) else fail-any)) in
        {453}let v_355: bitstring = catch-fail(symmetricstateunpack(v_352)) in
        {454}let v_356: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_355))) in
        {455}let v_357: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_356),2-proj-2-tuple(v_356),3-proj-3-tuple(v_355),getpublickey(v_354))) in
        {456}let v_358: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_355))) in
        {457}let v_359: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_356))) && success?(1-proj-3-tuple(v_355))) then (if (not-caught-fail(v_358) && success?(is-true(success?(1-proj-2-tuple(v_358))))) then cipherstatepack(1-proj-2-tuple(v_358),increment_nonce(2-proj-2-tuple(v_356))) else fail-any) else fail-any)) in
        {458}let v_360: bitstring = catch-fail((if (success?(getpublickey(v_354)) && (success?(3-proj-3-tuple(v_355)) && success?(1-proj-3-tuple(v_355)))) then (if (not-caught-fail(v_356) && success?(is-true(success?(1-proj-2-tuple(v_356))))) then (if not-caught-fail(v_357) then (if not-caught-fail(v_359) then (v_359,v_357) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {459}let v_361: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_360),2-proj-3-tuple(v_355),3-proj-3-tuple(v_355)))) in
        {460}let v_362: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_360)) && success?(symmetricstatepack(1-proj-2-tuple(v_360),2-proj-3-tuple(v_355),3-proj-3-tuple(v_355)))) then (if (not-caught-fail(v_361) && success?(is-true(success?(1-proj-3-tuple(v_361))))) then symmetricstatepack(1-proj-3-tuple(v_361),2-proj-3-tuple(v_361),hash(3-proj-3-tuple(v_361),2-proj-2-tuple(v_360))) else fail-any) else fail-any)) in
        {461}let v_363: bitstring = catch-fail((if success?(getpublickey(v_354)) then (if (not-caught-fail(v_355) && success?(is-true(success?(1-proj-3-tuple(v_355))))) then (if (not-caught-fail(v_360) && success?(is-true(success?(1-proj-2-tuple(v_360))))) then (if not-caught-fail(v_362) then (v_362,2-proj-2-tuple(v_360)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {462}let v_364: bitstring = catch-fail(keypairunpack(v_354)) in
        {463}let v_365: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_363))) in
        {464}let v_366: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_365),(if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_364) && success?(is-true(success?(1-proj-2-tuple(v_364))))) then dhexp(2-proj-2-tuple(v_364),5-proj-7-tuple(v_326)) else fail-any) else fail-any))) in
        {465}let v_367: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_365),(if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_364) && success?(is-true(success?(1-proj-2-tuple(v_364))))) then dhexp(2-proj-2-tuple(v_364),5-proj-7-tuple(v_326)) else fail-any) else fail-any))) in
        {466}let v_368: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_365),(if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_364) && success?(is-true(success?(1-proj-2-tuple(v_364))))) then dhexp(2-proj-2-tuple(v_364),5-proj-7-tuple(v_326)) else fail-any) else fail-any))) in
        {467}let v_369: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_364) && success?(is-true(success?(1-proj-2-tuple(v_364))))) then dhexp(2-proj-2-tuple(v_364),5-proj-7-tuple(v_326)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_365))) then (if not-caught-fail(v_366) then (if not-caught-fail(v_367) then (if not-caught-fail(v_368) then (v_366,v_367,v_368) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {468}let v_370: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_326)) then (if (not-caught-fail(v_364) && success?(is-true(success?(1-proj-2-tuple(v_364))))) then dhexp(2-proj-2-tuple(v_364),5-proj-7-tuple(v_326)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_363))) then (if (not-caught-fail(v_365) && success?(is-true(success?(1-proj-3-tuple(v_365))))) then (if (not-caught-fail(v_369) && success?(is-true(success?(1-proj-3-tuple(v_369))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_369)) then cipherstatepack(2-proj-3-tuple(v_369),minnonce) else fail-any),1-proj-3-tuple(v_369),3-proj-3-tuple(v_365)) else fail-any) else fail-any) else fail-any)) in
        {469}let v_371: bitstring = catch-fail(symmetricstateunpack(v_370)) in
        {470}let v_372: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_371))) in
        {471}let v_373: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_372),2-proj-2-tuple(v_372),3-proj-3-tuple(v_371),msg_b(bob,alice,sid))) in
        {472}let v_374: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_371))) in
        {473}let v_375: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_372))) && success?(1-proj-3-tuple(v_371))) then (if (not-caught-fail(v_374) && success?(is-true(success?(1-proj-2-tuple(v_374))))) then cipherstatepack(1-proj-2-tuple(v_374),increment_nonce(2-proj-2-tuple(v_372))) else fail-any) else fail-any)) in
        {474}let v_376: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_371)) && success?(1-proj-3-tuple(v_371))) then (if (not-caught-fail(v_372) && success?(is-true(success?(1-proj-2-tuple(v_372))))) then (if not-caught-fail(v_373) then (if not-caught-fail(v_375) then (v_375,v_373) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {475}let v_377: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_376),2-proj-3-tuple(v_371),3-proj-3-tuple(v_371)))) in
        {476}let v_378: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_376)) && success?(symmetricstatepack(1-proj-2-tuple(v_376),2-proj-3-tuple(v_371),3-proj-3-tuple(v_371)))) then (if (not-caught-fail(v_377) && success?(is-true(success?(1-proj-3-tuple(v_377))))) then symmetricstatepack(1-proj-3-tuple(v_377),2-proj-3-tuple(v_377),hash(3-proj-3-tuple(v_377),2-proj-2-tuple(v_376))) else fail-any) else fail-any)) in
        {477}let v_379: bitstring = catch-fail((if (not-caught-fail(v_371) && success?(is-true(success?(1-proj-3-tuple(v_371))))) then (if (not-caught-fail(v_376) && success?(is-true(success?(1-proj-2-tuple(v_376))))) then (if not-caught-fail(v_378) then (v_378,2-proj-2-tuple(v_376)) else fail-any) else fail-any) else fail-any)) in
        {478}let v_380: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_379),v_354,v_329,4-proj-7-tuple(v_326),5-proj-7-tuple(v_326),6-proj-7-tuple(v_326),7-proj-7-tuple(v_326))) in
        {479}let v_381: bitstring = catch-fail(concat3(v_330,2-proj-2-tuple(v_363),2-proj-2-tuple(v_379))) in
        {480}let v_382: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_379))) in
        {481}let v_383: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_382),zero)) in
        {482}let v_384: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_382),zero)) in
        {483}let v_385: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_382),zero)) in
        {484}let v_386: bitstring = catch-fail((if success?(2-proj-3-tuple(v_382)) then (if not-caught-fail(v_383) then (if not-caught-fail(v_384) then (if not-caught-fail(v_385) then (v_383,v_384,v_385) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {485}let v_387: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_386)) then cipherstatepack(1-proj-3-tuple(v_386),minnonce) else fail-any)) in
        {486}let v_388: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_386)) then cipherstatepack(2-proj-3-tuple(v_386),minnonce) else fail-any)) in
        {487}let v_389: bitstring = catch-fail((if success?(1-proj-2-tuple(v_379)) then (if (not-caught-fail(v_382) && success?(is-true(success?(1-proj-3-tuple(v_382))))) then (if (not-caught-fail(v_386) && success?(is-true(success?(1-proj-3-tuple(v_386))))) then (if not-caught-fail(v_387) then (if not-caught-fail(v_388) then (1-proj-2-tuple(v_379),v_387,v_388) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {488}let (hs_26: handshakestate,message_b_2: bitstring,cs1_6: cipherstate,cs2_6: cipherstate) = (if (not-caught-fail(v_326) && success?(is-true(success?(1-proj-7-tuple(v_326))))) then (if (not-caught-fail(v_327) && success?(is-true(success?(1-proj-3-tuple(v_327))))) then (if not-caught-fail(v_329) then (if not-caught-fail(v_330) then (if not-caught-fail(v_332) then (if not-caught-fail(v_338) then (if not-caught-fail(v_345) then (if not-caught-fail(v_352) then (if not-caught-fail(v_354) then (if (not-caught-fail(v_363) && success?(is-true(success?(1-proj-2-tuple(v_363))))) then (if not-caught-fail(v_370) then (if (not-caught-fail(v_379) && success?(is-true(success?(1-proj-2-tuple(v_379))))) then (if not-caught-fail(v_380) then (if not-caught-fail(v_381) then (if (not-caught-fail(v_389) && success?(is-true(success?(1-proj-3-tuple(v_389))))) then (v_380,v_381,2-proj-3-tuple(v_389),3-proj-3-tuple(v_389)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {489}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {490}insert statestore(bob,alice,sid,statepack_c(hs_26,cs1_6,cs2_6));
        {491}out(pub, message_b_2)
    ) | (
        {493}!
        {513}get statestore(=bob,=alice,=sid,statepack_c(hs_27: handshakestate,cs1_7: cipherstate,cs2_7: cipherstate)) in
        {494}let hs_28: handshakestate = handshakestatesetcs(hs_27,cs1_7) in
        {495}in(pub, message_c_2: bitstring);
        {496}let v_390: bitstring = catch-fail(handshakestateunpack(hs_28)) in
        {497}let v_391: bitstring = catch-fail(deconcat3(message_c_2)) in
        {498}let v_392: bool = catch-fail(true) in
        {499}let v_393: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_390))) in
        {500}let v_394: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_393))) in
        {501}let v_395: aead = catch-fail(decrypt(1-proj-2-tuple(v_394),2-proj-2-tuple(v_394),3-proj-3-tuple(v_393),3-proj-3-tuple(v_391))) in
        {502}let v_396: bitstring = catch-fail(aeadunpack(v_395)) in
        {503}let v_397: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_393))) in
        {504}let v_398: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_394))) && success?(1-proj-3-tuple(v_393))) then (if (not-caught-fail(v_397) && success?(is-true(success?(1-proj-2-tuple(v_397))))) then cipherstatepack(1-proj-2-tuple(v_397),increment_nonce(2-proj-2-tuple(v_394))) else fail-any) else fail-any)) in
        {505}let v_399: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_391)) && (success?(3-proj-3-tuple(v_393)) && success?(1-proj-3-tuple(v_393)))) then (if (not-caught-fail(v_394) && success?(is-true(success?(1-proj-2-tuple(v_394))))) then (if not-caught-fail(v_395) then (if (not-caught-fail(v_396) && success?(is-true(success?(1-proj-3-tuple(v_396))))) then (if not-caught-fail(v_398) then (v_398,3-proj-3-tuple(v_396),1-proj-3-tuple(v_396)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {506}let v_400: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_399),2-proj-3-tuple(v_393),3-proj-3-tuple(v_393)))) in
        {507}let v_401: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_391)) && success?(symmetricstatepack(1-proj-3-tuple(v_399),2-proj-3-tuple(v_393),3-proj-3-tuple(v_393)))) then (if (not-caught-fail(v_400) && success?(is-true(success?(1-proj-3-tuple(v_400))))) then symmetricstatepack(1-proj-3-tuple(v_400),2-proj-3-tuple(v_400),hash(3-proj-3-tuple(v_400),3-proj-3-tuple(v_391))) else fail-any) else fail-any)) in
        {508}let v_402: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_391)) && success?(1-proj-7-tuple(v_390))) then (if (not-caught-fail(v_393) && success?(is-true(success?(1-proj-3-tuple(v_393))))) then (if (not-caught-fail(v_399) && success?(is-true(success?(1-proj-3-tuple(v_399))))) then (if not-caught-fail(v_401) then (v_401,2-proj-3-tuple(v_399),3-proj-3-tuple(v_399)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {509}let v_403: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_402),2-proj-7-tuple(v_390),3-proj-7-tuple(v_390),4-proj-7-tuple(v_390),5-proj-7-tuple(v_390),6-proj-7-tuple(v_390),7-proj-7-tuple(v_390))) in
        {510}let (hs_29: handshakestate,plaintext_c: bitstring,valid_5: bool) = (if (not-caught-fail(v_390) && success?(is-true(success?(1-proj-7-tuple(v_390))))) then (if (not-caught-fail(v_391) && success?(is-true(success?(1-proj-3-tuple(v_391))))) then (if not-caught-fail(v_392) then (if (not-caught-fail(v_402) && success?(is-true(success?(1-proj-3-tuple(v_402))))) then (if (v_392 && 3-proj-3-tuple(v_402)) then (if not-caught-fail(v_403) then (v_403,2-proj-3-tuple(v_402),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {511}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {512}insert statestore(bob,alice,sid,statepack_d(hs_29,handshakestategetcs(hs_29),cs2_7))
    ) | (
        {514}!
        {532}get statestore(=bob,=alice,=sid,statepack_d(hs_30: handshakestate,cs1_8: cipherstate,cs2_8: cipherstate)) in
        {515}let hs_31: handshakestate = handshakestatesetcs(hs_30,cs2_8) in
        {516}let v_404: bitstring = catch-fail(handshakestateunpack(hs_31)) in
        {517}let v_405: bitstring = catch-fail((empty,empty,empty)) in
        {518}let v_406: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_404))) in
        {519}let v_407: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_406))) in
        {520}let v_408: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_407),2-proj-2-tuple(v_407),3-proj-3-tuple(v_406),msg_d(bob,alice,sid))) in
        {521}let v_409: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_406))) in
        {522}let v_410: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_407))) && success?(1-proj-3-tuple(v_406))) then (if (not-caught-fail(v_409) && success?(is-true(success?(1-proj-2-tuple(v_409))))) then cipherstatepack(1-proj-2-tuple(v_409),increment_nonce(2-proj-2-tuple(v_407))) else fail-any) else fail-any)) in
        {523}let v_411: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_406)) && success?(1-proj-3-tuple(v_406))) then (if (not-caught-fail(v_407) && success?(is-true(success?(1-proj-2-tuple(v_407))))) then (if not-caught-fail(v_408) then (if not-caught-fail(v_410) then (v_410,v_408) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {524}let v_412: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_411),2-proj-3-tuple(v_406),3-proj-3-tuple(v_406)))) in
        {525}let v_413: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_411)) && success?(symmetricstatepack(1-proj-2-tuple(v_411),2-proj-3-tuple(v_406),3-proj-3-tuple(v_406)))) then (if (not-caught-fail(v_412) && success?(is-true(success?(1-proj-3-tuple(v_412))))) then symmetricstatepack(1-proj-3-tuple(v_412),2-proj-3-tuple(v_412),hash(3-proj-3-tuple(v_412),2-proj-2-tuple(v_411))) else fail-any) else fail-any)) in
        {526}let v_414: bitstring = catch-fail((if success?(1-proj-7-tuple(v_404)) then (if (not-caught-fail(v_406) && success?(is-true(success?(1-proj-3-tuple(v_406))))) then (if (not-caught-fail(v_411) && success?(is-true(success?(1-proj-2-tuple(v_411))))) then (if not-caught-fail(v_413) then (v_413,2-proj-2-tuple(v_411)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {527}let v_415: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_414),2-proj-7-tuple(v_404),3-proj-7-tuple(v_404),4-proj-7-tuple(v_404),5-proj-7-tuple(v_404),6-proj-7-tuple(v_404),7-proj-7-tuple(v_404))) in
        {528}let v_416: bitstring = catch-fail(concat3(1-proj-3-tuple(v_405),2-proj-3-tuple(v_405),2-proj-2-tuple(v_414))) in
        {529}let (hs_32: handshakestate,message_d_2: bitstring) = (if (not-caught-fail(v_404) && success?(is-true(success?(1-proj-7-tuple(v_404))))) then (if (not-caught-fail(v_405) && success?(is-true(success?(1-proj-3-tuple(v_405))))) then (if (not-caught-fail(v_414) && success?(is-true(success?(1-proj-2-tuple(v_414))))) then (if not-caught-fail(v_415) then (if not-caught-fail(v_416) then (v_415,v_416) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {530}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {531}out(pub, message_d_2)
    ) | (
        {533}event LeakPsk(phase0,alice,bob);
        {534}out(pub, key_psk(alice,bob))
    ) | (
        {535}phase 1;
        {536}event LeakPsk(phase1,alice,bob);
        {537}out(pub, key_psk(alice,bob))
    ) | (
        {538}event LeakS(phase0,bob);
        {539}out(pub, key_s(bob))
    ) | (
        {540}phase 1;
        {541}event LeakS(phase1,bob);
        {542}out(pub, key_s(bob))
    )
) | (
    {543}let s_3: keypair = keypairpack(empty,empty) in
    {544}out(pub, getpublickey(s_3));
    (
        {545}let e_3: keypair = keypairpack(empty,empty) in
        {546}let rs_3: key = empty in
        {547}let re_3: key = empty in
        {548}let v_417: bitstring = catch-fail(hash(somename,empty)) in
        {549}let v_418: key = catch-fail(v_417) in
        {550}let v_419: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {551}let v_420: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_417) then (if not-caught-fail(v_418) then (if not-caught-fail(v_419) then symmetricstatepack(v_419,v_418,v_417) else fail-any) else fail-any) else fail-any))) in
        {552}let v_421: symmetricstate = catch-fail((if success?((if not-caught-fail(v_417) then (if not-caught-fail(v_418) then (if not-caught-fail(v_419) then symmetricstatepack(v_419,v_418,v_417) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_420) && success?(is-true(success?(1-proj-3-tuple(v_420))))) then symmetricstatepack(1-proj-3-tuple(v_420),2-proj-3-tuple(v_420),hash(3-proj-3-tuple(v_420),empty)) else fail-any) else fail-any)) in
        {553}let hs_33: handshakestate = (if not-caught-fail(v_421) then handshakestatepack(v_421,s_3,e_3,rs_3,re_3,key_psk(charlie,bob),false) else fail-any) in
        {554}insert statestore(bob,charlie,sid,statepack_a(hs_33))
    ) | (
        {602}get statestore(=bob,=charlie,=sid,statepack_a(hs_34: handshakestate)) in
        {555}in(pub, message_a_3: bitstring);
        {556}let v_422: bitstring = catch-fail(handshakestateunpack(hs_34)) in
        {557}let v_423: bitstring = catch-fail(deconcat3(message_a_3)) in
        {558}let v_424: bool = catch-fail(true) in
        {559}let v_425: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_422))) in
        {560}let v_426: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_425),6-proj-7-tuple(v_422))) in
        {561}let v_427: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_425),6-proj-7-tuple(v_422))) in
        {562}let v_428: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_425),6-proj-7-tuple(v_422))) in
        {563}let v_429: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_422)) && success?(2-proj-3-tuple(v_425))) then (if not-caught-fail(v_426) then (if not-caught-fail(v_427) then (if not-caught-fail(v_428) then (v_426,v_427,v_428) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {564}let v_430: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_425),1-proj-3-tuple(v_429),3-proj-3-tuple(v_425)))) in
        {565}let v_431: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_429)) && success?(symmetricstatepack(1-proj-3-tuple(v_425),1-proj-3-tuple(v_429),3-proj-3-tuple(v_425)))) then (if (not-caught-fail(v_430) && success?(is-true(success?(1-proj-3-tuple(v_430))))) then symmetricstatepack(1-proj-3-tuple(v_430),2-proj-3-tuple(v_430),hash(3-proj-3-tuple(v_430),2-proj-3-tuple(v_429))) else fail-any) else fail-any))) in
        {566}let v_432: symmetricstate = catch-fail((if (success?(6-proj-7-tuple(v_422)) && success?(1-proj-7-tuple(v_422))) then (if (not-caught-fail(v_425) && success?(is-true(success?(1-proj-3-tuple(v_425))))) then (if (not-caught-fail(v_429) && success?(is-true(success?(1-proj-3-tuple(v_429))))) then (if (not-caught-fail(v_431) && success?(is-true(success?(1-proj-3-tuple(v_431))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_429)) then cipherstatepack(3-proj-3-tuple(v_429),minnonce) else fail-any),1-proj-3-tuple(v_429),3-proj-3-tuple(v_431)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {567}let v_433: key = catch-fail(1-proj-3-tuple(v_423)) in
        {568}let v_434: bitstring = catch-fail(symmetricstateunpack(v_432)) in
        {569}let v_435: symmetricstate = catch-fail((if (not-caught-fail(v_434) && success?(is-true(success?(1-proj-3-tuple(v_434))))) then symmetricstatepack(1-proj-3-tuple(v_434),2-proj-3-tuple(v_434),hash(3-proj-3-tuple(v_434),v_433)) else fail-any)) in
        {570}let v_436: bitstring = catch-fail(symmetricstateunpack(v_435)) in
        {571}let v_437: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_436),v_433)) in
        {572}let v_438: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_436),v_433)) in
        {573}let v_439: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_436),v_433)) in
        {574}let v_440: bitstring = catch-fail((if success?(2-proj-3-tuple(v_436)) then (if not-caught-fail(v_437) then (if not-caught-fail(v_438) then (if not-caught-fail(v_439) then (v_437,v_438,v_439) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {575}let v_441: symmetricstate = catch-fail((if (not-caught-fail(v_436) && success?(is-true(success?(1-proj-3-tuple(v_436))))) then (if (not-caught-fail(v_440) && success?(is-true(success?(1-proj-3-tuple(v_440))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_440)) then cipherstatepack(2-proj-3-tuple(v_440),minnonce) else fail-any),1-proj-3-tuple(v_440),3-proj-3-tuple(v_436)) else fail-any) else fail-any)) in
        {576}let v_442: bitstring = catch-fail(symmetricstateunpack(v_441)) in
        {577}let v_443: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_442))) in
        {578}let v_444: aead = catch-fail(decrypt(1-proj-2-tuple(v_443),2-proj-2-tuple(v_443),3-proj-3-tuple(v_442),2-proj-3-tuple(v_423))) in
        {579}let v_445: bitstring = catch-fail(aeadunpack(v_444)) in
        {580}let v_446: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_442))) in
        {581}let v_447: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_443))) && success?(1-proj-3-tuple(v_442))) then (if (not-caught-fail(v_446) && success?(is-true(success?(1-proj-2-tuple(v_446))))) then cipherstatepack(1-proj-2-tuple(v_446),increment_nonce(2-proj-2-tuple(v_443))) else fail-any) else fail-any)) in
        {582}let v_448: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_423)) && (success?(3-proj-3-tuple(v_442)) && success?(1-proj-3-tuple(v_442)))) then (if (not-caught-fail(v_443) && success?(is-true(success?(1-proj-2-tuple(v_443))))) then (if not-caught-fail(v_444) then (if (not-caught-fail(v_445) && success?(is-true(success?(1-proj-3-tuple(v_445))))) then (if not-caught-fail(v_447) then (v_447,3-proj-3-tuple(v_445),1-proj-3-tuple(v_445)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {583}let v_449: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_448),2-proj-3-tuple(v_442),3-proj-3-tuple(v_442)))) in
        {584}let v_450: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_423)) && success?(symmetricstatepack(1-proj-3-tuple(v_448),2-proj-3-tuple(v_442),3-proj-3-tuple(v_442)))) then (if (not-caught-fail(v_449) && success?(is-true(success?(1-proj-3-tuple(v_449))))) then symmetricstatepack(1-proj-3-tuple(v_449),2-proj-3-tuple(v_449),hash(3-proj-3-tuple(v_449),2-proj-3-tuple(v_423))) else fail-any) else fail-any)) in
        {585}let v_451: bitstring = catch-fail((if success?(2-proj-3-tuple(v_423)) then (if (not-caught-fail(v_442) && success?(is-true(success?(1-proj-3-tuple(v_442))))) then (if (not-caught-fail(v_448) && success?(is-true(success?(1-proj-3-tuple(v_448))))) then (if not-caught-fail(v_450) then (v_450,2-proj-3-tuple(v_448),3-proj-3-tuple(v_448)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {586}let v_452: key = catch-fail(2-proj-3-tuple(v_451)) in
        {587}let v_453: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_451))) in
        {588}let v_454: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_453))) in
        {589}let v_455: aead = catch-fail(decrypt(1-proj-2-tuple(v_454),2-proj-2-tuple(v_454),3-proj-3-tuple(v_453),3-proj-3-tuple(v_423))) in
        {590}let v_456: bitstring = catch-fail(aeadunpack(v_455)) in
        {591}let v_457: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_453))) in
        {592}let v_458: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_454))) && success?(1-proj-3-tuple(v_453))) then (if (not-caught-fail(v_457) && success?(is-true(success?(1-proj-2-tuple(v_457))))) then cipherstatepack(1-proj-2-tuple(v_457),increment_nonce(2-proj-2-tuple(v_454))) else fail-any) else fail-any)) in
        {593}let v_459: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_423)) && (success?(3-proj-3-tuple(v_453)) && success?(1-proj-3-tuple(v_453)))) then (if (not-caught-fail(v_454) && success?(is-true(success?(1-proj-2-tuple(v_454))))) then (if not-caught-fail(v_455) then (if (not-caught-fail(v_456) && success?(is-true(success?(1-proj-3-tuple(v_456))))) then (if not-caught-fail(v_458) then (v_458,3-proj-3-tuple(v_456),1-proj-3-tuple(v_456)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {594}let v_460: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_459),2-proj-3-tuple(v_453),3-proj-3-tuple(v_453)))) in
        {595}let v_461: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_423)) && success?(symmetricstatepack(1-proj-3-tuple(v_459),2-proj-3-tuple(v_453),3-proj-3-tuple(v_453)))) then (if (not-caught-fail(v_460) && success?(is-true(success?(1-proj-3-tuple(v_460))))) then symmetricstatepack(1-proj-3-tuple(v_460),2-proj-3-tuple(v_460),hash(3-proj-3-tuple(v_460),3-proj-3-tuple(v_423))) else fail-any) else fail-any)) in
        {596}let v_462: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_423)) && success?(1-proj-3-tuple(v_451))) then (if (not-caught-fail(v_453) && success?(is-true(success?(1-proj-3-tuple(v_453))))) then (if (not-caught-fail(v_459) && success?(is-true(success?(1-proj-3-tuple(v_459))))) then (if not-caught-fail(v_461) then (v_461,2-proj-3-tuple(v_459),3-proj-3-tuple(v_459)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {597}let v_463: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {598}let v_464: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_462),2-proj-7-tuple(v_422),3-proj-7-tuple(v_422),v_452,v_433,6-proj-7-tuple(v_422),7-proj-7-tuple(v_422))) in
        {599}let (hs_35: handshakestate,plaintext_a_1: bitstring,valid_6: bool) = (if (not-caught-fail(v_422) && success?(is-true(success?(1-proj-7-tuple(v_422))))) then (if (not-caught-fail(v_423) && success?(is-true(success?(1-proj-3-tuple(v_423))))) then (if not-caught-fail(v_424) then (if not-caught-fail(v_432) then (if not-caught-fail(v_433) then (if not-caught-fail(v_435) then (if not-caught-fail(v_441) then (if (not-caught-fail(v_451) && success?(is-true(success?(1-proj-3-tuple(v_451))))) then (if not-caught-fail(v_452) then (if (not-caught-fail(v_462) && success?(is-true(success?(1-proj-3-tuple(v_462))))) then (if ((3-proj-3-tuple(v_451) && 3-proj-3-tuple(v_462)) && (v_452 = getpublickey((if not-caught-fail(v_463) then keypairpack(validkey(v_463),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_464) then (v_464,2-proj-3-tuple(v_462),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {600}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1);
        {601}insert statestore(bob,charlie,sid,statepack_b(hs_35))
    ) | (
        {671}get statestore(=bob,=charlie,=sid,statepack_b(hs_36: handshakestate)) in
        {603}let v_465: bitstring = catch-fail(handshakestateunpack(hs_36)) in
        {604}let v_466: bitstring = catch-fail((empty,empty,empty)) in
        {605}let v_467: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {606}let v_468: keypair = catch-fail((if not-caught-fail(v_467) then keypairpack(validkey(v_467),key_e(bob,charlie,sid)) else fail-any)) in
        {607}let v_469: bitstring = catch-fail(getpublickey(v_468)) in
        {608}let v_470: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_465))) in
        {609}let v_471: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_465)) then (if (not-caught-fail(v_470) && success?(is-true(success?(1-proj-3-tuple(v_470))))) then symmetricstatepack(1-proj-3-tuple(v_470),2-proj-3-tuple(v_470),hash(3-proj-3-tuple(v_470),v_469)) else fail-any) else fail-any)) in
        {610}let v_472: bitstring = catch-fail(symmetricstateunpack(v_471)) in
        {611}let v_473: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_472),getpublickey(v_468))) in
        {612}let v_474: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_472),getpublickey(v_468))) in
        {613}let v_475: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_472),getpublickey(v_468))) in
        {614}let v_476: bitstring = catch-fail((if (success?(getpublickey(v_468)) && success?(2-proj-3-tuple(v_472))) then (if not-caught-fail(v_473) then (if not-caught-fail(v_474) then (if not-caught-fail(v_475) then (v_473,v_474,v_475) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {615}let v_477: symmetricstate = catch-fail((if success?(getpublickey(v_468)) then (if (not-caught-fail(v_472) && success?(is-true(success?(1-proj-3-tuple(v_472))))) then (if (not-caught-fail(v_476) && success?(is-true(success?(1-proj-3-tuple(v_476))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_476)) then cipherstatepack(2-proj-3-tuple(v_476),minnonce) else fail-any),1-proj-3-tuple(v_476),3-proj-3-tuple(v_472)) else fail-any) else fail-any) else fail-any)) in
        {616}let v_478: bitstring = catch-fail(keypairunpack(v_468)) in
        {617}let v_479: bitstring = catch-fail(symmetricstateunpack(v_477)) in
        {618}let v_480: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_479),(if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_478) && success?(is-true(success?(1-proj-2-tuple(v_478))))) then dhexp(2-proj-2-tuple(v_478),5-proj-7-tuple(v_465)) else fail-any) else fail-any))) in
        {619}let v_481: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_479),(if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_478) && success?(is-true(success?(1-proj-2-tuple(v_478))))) then dhexp(2-proj-2-tuple(v_478),5-proj-7-tuple(v_465)) else fail-any) else fail-any))) in
        {620}let v_482: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_479),(if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_478) && success?(is-true(success?(1-proj-2-tuple(v_478))))) then dhexp(2-proj-2-tuple(v_478),5-proj-7-tuple(v_465)) else fail-any) else fail-any))) in
        {621}let v_483: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_478) && success?(is-true(success?(1-proj-2-tuple(v_478))))) then dhexp(2-proj-2-tuple(v_478),5-proj-7-tuple(v_465)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_479))) then (if not-caught-fail(v_480) then (if not-caught-fail(v_481) then (if not-caught-fail(v_482) then (v_480,v_481,v_482) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {622}let v_484: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_478) && success?(is-true(success?(1-proj-2-tuple(v_478))))) then dhexp(2-proj-2-tuple(v_478),5-proj-7-tuple(v_465)) else fail-any) else fail-any)) then (if (not-caught-fail(v_479) && success?(is-true(success?(1-proj-3-tuple(v_479))))) then (if (not-caught-fail(v_483) && success?(is-true(success?(1-proj-3-tuple(v_483))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_483)) then cipherstatepack(2-proj-3-tuple(v_483),minnonce) else fail-any),1-proj-3-tuple(v_483),3-proj-3-tuple(v_479)) else fail-any) else fail-any) else fail-any)) in
        {623}let v_485: bitstring = catch-fail(keypairunpack(v_468)) in
        {624}let v_486: bitstring = catch-fail(symmetricstateunpack(v_484)) in
        {625}let v_487: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_486),(if success?(4-proj-7-tuple(v_465)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),4-proj-7-tuple(v_465)) else fail-any) else fail-any))) in
        {626}let v_488: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_486),(if success?(4-proj-7-tuple(v_465)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),4-proj-7-tuple(v_465)) else fail-any) else fail-any))) in
        {627}let v_489: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_486),(if success?(4-proj-7-tuple(v_465)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),4-proj-7-tuple(v_465)) else fail-any) else fail-any))) in
        {628}let v_490: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_465)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),4-proj-7-tuple(v_465)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_486))) then (if not-caught-fail(v_487) then (if not-caught-fail(v_488) then (if not-caught-fail(v_489) then (v_487,v_488,v_489) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {629}let v_491: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_465)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),4-proj-7-tuple(v_465)) else fail-any) else fail-any)) then (if (not-caught-fail(v_486) && success?(is-true(success?(1-proj-3-tuple(v_486))))) then (if (not-caught-fail(v_490) && success?(is-true(success?(1-proj-3-tuple(v_490))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_490)) then cipherstatepack(2-proj-3-tuple(v_490),minnonce) else fail-any),1-proj-3-tuple(v_490),3-proj-3-tuple(v_486)) else fail-any) else fail-any) else fail-any)) in
        {630}let v_492: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {631}let v_493: keypair = catch-fail((if not-caught-fail(v_492) then keypairpack(validkey(v_492),key_s(bob)) else fail-any)) in
        {632}let v_494: bitstring = catch-fail(symmetricstateunpack(v_491)) in
        {633}let v_495: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_494))) in
        {634}let v_496: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_495),2-proj-2-tuple(v_495),3-proj-3-tuple(v_494),getpublickey(v_493))) in
        {635}let v_497: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_494))) in
        {636}let v_498: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_495))) && success?(1-proj-3-tuple(v_494))) then (if (not-caught-fail(v_497) && success?(is-true(success?(1-proj-2-tuple(v_497))))) then cipherstatepack(1-proj-2-tuple(v_497),increment_nonce(2-proj-2-tuple(v_495))) else fail-any) else fail-any)) in
        {637}let v_499: bitstring = catch-fail((if (success?(getpublickey(v_493)) && (success?(3-proj-3-tuple(v_494)) && success?(1-proj-3-tuple(v_494)))) then (if (not-caught-fail(v_495) && success?(is-true(success?(1-proj-2-tuple(v_495))))) then (if not-caught-fail(v_496) then (if not-caught-fail(v_498) then (v_498,v_496) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {638}let v_500: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_499),2-proj-3-tuple(v_494),3-proj-3-tuple(v_494)))) in
        {639}let v_501: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_499)) && success?(symmetricstatepack(1-proj-2-tuple(v_499),2-proj-3-tuple(v_494),3-proj-3-tuple(v_494)))) then (if (not-caught-fail(v_500) && success?(is-true(success?(1-proj-3-tuple(v_500))))) then symmetricstatepack(1-proj-3-tuple(v_500),2-proj-3-tuple(v_500),hash(3-proj-3-tuple(v_500),2-proj-2-tuple(v_499))) else fail-any) else fail-any)) in
        {640}let v_502: bitstring = catch-fail((if success?(getpublickey(v_493)) then (if (not-caught-fail(v_494) && success?(is-true(success?(1-proj-3-tuple(v_494))))) then (if (not-caught-fail(v_499) && success?(is-true(success?(1-proj-2-tuple(v_499))))) then (if not-caught-fail(v_501) then (v_501,2-proj-2-tuple(v_499)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {641}let v_503: bitstring = catch-fail(keypairunpack(v_493)) in
        {642}let v_504: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_502))) in
        {643}let v_505: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_504),(if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-2-tuple(v_503))))) then dhexp(2-proj-2-tuple(v_503),5-proj-7-tuple(v_465)) else fail-any) else fail-any))) in
        {644}let v_506: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_504),(if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-2-tuple(v_503))))) then dhexp(2-proj-2-tuple(v_503),5-proj-7-tuple(v_465)) else fail-any) else fail-any))) in
        {645}let v_507: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_504),(if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-2-tuple(v_503))))) then dhexp(2-proj-2-tuple(v_503),5-proj-7-tuple(v_465)) else fail-any) else fail-any))) in
        {646}let v_508: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-2-tuple(v_503))))) then dhexp(2-proj-2-tuple(v_503),5-proj-7-tuple(v_465)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_504))) then (if not-caught-fail(v_505) then (if not-caught-fail(v_506) then (if not-caught-fail(v_507) then (v_505,v_506,v_507) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {647}let v_509: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_465)) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-2-tuple(v_503))))) then dhexp(2-proj-2-tuple(v_503),5-proj-7-tuple(v_465)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_502))) then (if (not-caught-fail(v_504) && success?(is-true(success?(1-proj-3-tuple(v_504))))) then (if (not-caught-fail(v_508) && success?(is-true(success?(1-proj-3-tuple(v_508))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_508)) then cipherstatepack(2-proj-3-tuple(v_508),minnonce) else fail-any),1-proj-3-tuple(v_508),3-proj-3-tuple(v_504)) else fail-any) else fail-any) else fail-any)) in
        {648}let v_510: bitstring = catch-fail(symmetricstateunpack(v_509)) in
        {649}let v_511: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_510))) in
        {650}let v_512: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_511),2-proj-2-tuple(v_511),3-proj-3-tuple(v_510),msg_b(bob,charlie,sid))) in
        {651}let v_513: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_510))) in
        {652}let v_514: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_511))) && success?(1-proj-3-tuple(v_510))) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then cipherstatepack(1-proj-2-tuple(v_513),increment_nonce(2-proj-2-tuple(v_511))) else fail-any) else fail-any)) in
        {653}let v_515: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_510)) && success?(1-proj-3-tuple(v_510))) then (if (not-caught-fail(v_511) && success?(is-true(success?(1-proj-2-tuple(v_511))))) then (if not-caught-fail(v_512) then (if not-caught-fail(v_514) then (v_514,v_512) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {654}let v_516: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_515),2-proj-3-tuple(v_510),3-proj-3-tuple(v_510)))) in
        {655}let v_517: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_515)) && success?(symmetricstatepack(1-proj-2-tuple(v_515),2-proj-3-tuple(v_510),3-proj-3-tuple(v_510)))) then (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-3-tuple(v_516))))) then symmetricstatepack(1-proj-3-tuple(v_516),2-proj-3-tuple(v_516),hash(3-proj-3-tuple(v_516),2-proj-2-tuple(v_515))) else fail-any) else fail-any)) in
        {656}let v_518: bitstring = catch-fail((if (not-caught-fail(v_510) && success?(is-true(success?(1-proj-3-tuple(v_510))))) then (if (not-caught-fail(v_515) && success?(is-true(success?(1-proj-2-tuple(v_515))))) then (if not-caught-fail(v_517) then (v_517,2-proj-2-tuple(v_515)) else fail-any) else fail-any) else fail-any)) in
        {657}let v_519: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_518),v_493,v_468,4-proj-7-tuple(v_465),5-proj-7-tuple(v_465),6-proj-7-tuple(v_465),7-proj-7-tuple(v_465))) in
        {658}let v_520: bitstring = catch-fail(concat3(v_469,2-proj-2-tuple(v_502),2-proj-2-tuple(v_518))) in
        {659}let v_521: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_518))) in
        {660}let v_522: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_521),zero)) in
        {661}let v_523: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_521),zero)) in
        {662}let v_524: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_521),zero)) in
        {663}let v_525: bitstring = catch-fail((if success?(2-proj-3-tuple(v_521)) then (if not-caught-fail(v_522) then (if not-caught-fail(v_523) then (if not-caught-fail(v_524) then (v_522,v_523,v_524) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {664}let v_526: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_525)) then cipherstatepack(1-proj-3-tuple(v_525),minnonce) else fail-any)) in
        {665}let v_527: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_525)) then cipherstatepack(2-proj-3-tuple(v_525),minnonce) else fail-any)) in
        {666}let v_528: bitstring = catch-fail((if success?(1-proj-2-tuple(v_518)) then (if (not-caught-fail(v_521) && success?(is-true(success?(1-proj-3-tuple(v_521))))) then (if (not-caught-fail(v_525) && success?(is-true(success?(1-proj-3-tuple(v_525))))) then (if not-caught-fail(v_526) then (if not-caught-fail(v_527) then (1-proj-2-tuple(v_518),v_526,v_527) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {667}let (hs_37: handshakestate,message_b_3: bitstring,cs1_9: cipherstate,cs2_9: cipherstate) = (if (not-caught-fail(v_465) && success?(is-true(success?(1-proj-7-tuple(v_465))))) then (if (not-caught-fail(v_466) && success?(is-true(success?(1-proj-3-tuple(v_466))))) then (if not-caught-fail(v_468) then (if not-caught-fail(v_469) then (if not-caught-fail(v_471) then (if not-caught-fail(v_477) then (if not-caught-fail(v_484) then (if not-caught-fail(v_491) then (if not-caught-fail(v_493) then (if (not-caught-fail(v_502) && success?(is-true(success?(1-proj-2-tuple(v_502))))) then (if not-caught-fail(v_509) then (if (not-caught-fail(v_518) && success?(is-true(success?(1-proj-2-tuple(v_518))))) then (if not-caught-fail(v_519) then (if not-caught-fail(v_520) then (if (not-caught-fail(v_528) && success?(is-true(success?(1-proj-3-tuple(v_528))))) then (v_519,v_520,2-proj-3-tuple(v_528),3-proj-3-tuple(v_528)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {668}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {669}insert statestore(bob,charlie,sid,statepack_c(hs_37,cs1_9,cs2_9));
        {670}out(pub, message_b_3)
    ) | (
        {672}!
        {692}get statestore(=bob,=charlie,=sid,statepack_c(hs_38: handshakestate,cs1_10: cipherstate,cs2_10: cipherstate)) in
        {673}let hs_39: handshakestate = handshakestatesetcs(hs_38,cs1_10) in
        {674}in(pub, message_c_3: bitstring);
        {675}let v_529: bitstring = catch-fail(handshakestateunpack(hs_39)) in
        {676}let v_530: bitstring = catch-fail(deconcat3(message_c_3)) in
        {677}let v_531: bool = catch-fail(true) in
        {678}let v_532: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_529))) in
        {679}let v_533: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_532))) in
        {680}let v_534: aead = catch-fail(decrypt(1-proj-2-tuple(v_533),2-proj-2-tuple(v_533),3-proj-3-tuple(v_532),3-proj-3-tuple(v_530))) in
        {681}let v_535: bitstring = catch-fail(aeadunpack(v_534)) in
        {682}let v_536: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_532))) in
        {683}let v_537: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_533))) && success?(1-proj-3-tuple(v_532))) then (if (not-caught-fail(v_536) && success?(is-true(success?(1-proj-2-tuple(v_536))))) then cipherstatepack(1-proj-2-tuple(v_536),increment_nonce(2-proj-2-tuple(v_533))) else fail-any) else fail-any)) in
        {684}let v_538: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_530)) && (success?(3-proj-3-tuple(v_532)) && success?(1-proj-3-tuple(v_532)))) then (if (not-caught-fail(v_533) && success?(is-true(success?(1-proj-2-tuple(v_533))))) then (if not-caught-fail(v_534) then (if (not-caught-fail(v_535) && success?(is-true(success?(1-proj-3-tuple(v_535))))) then (if not-caught-fail(v_537) then (v_537,3-proj-3-tuple(v_535),1-proj-3-tuple(v_535)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {685}let v_539: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_538),2-proj-3-tuple(v_532),3-proj-3-tuple(v_532)))) in
        {686}let v_540: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_530)) && success?(symmetricstatepack(1-proj-3-tuple(v_538),2-proj-3-tuple(v_532),3-proj-3-tuple(v_532)))) then (if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-3-tuple(v_539))))) then symmetricstatepack(1-proj-3-tuple(v_539),2-proj-3-tuple(v_539),hash(3-proj-3-tuple(v_539),3-proj-3-tuple(v_530))) else fail-any) else fail-any)) in
        {687}let v_541: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_530)) && success?(1-proj-7-tuple(v_529))) then (if (not-caught-fail(v_532) && success?(is-true(success?(1-proj-3-tuple(v_532))))) then (if (not-caught-fail(v_538) && success?(is-true(success?(1-proj-3-tuple(v_538))))) then (if not-caught-fail(v_540) then (v_540,2-proj-3-tuple(v_538),3-proj-3-tuple(v_538)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {688}let v_542: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_541),2-proj-7-tuple(v_529),3-proj-7-tuple(v_529),4-proj-7-tuple(v_529),5-proj-7-tuple(v_529),6-proj-7-tuple(v_529),7-proj-7-tuple(v_529))) in
        {689}let (hs_40: handshakestate,plaintext_c_1: bitstring,valid_7: bool) = (if (not-caught-fail(v_529) && success?(is-true(success?(1-proj-7-tuple(v_529))))) then (if (not-caught-fail(v_530) && success?(is-true(success?(1-proj-3-tuple(v_530))))) then (if not-caught-fail(v_531) then (if (not-caught-fail(v_541) && success?(is-true(success?(1-proj-3-tuple(v_541))))) then (if (v_531 && 3-proj-3-tuple(v_541)) then (if not-caught-fail(v_542) then (v_542,2-proj-3-tuple(v_541),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {690}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1);
        {691}insert statestore(bob,charlie,sid,statepack_d(hs_40,handshakestategetcs(hs_40),cs2_10))
    ) | (
        {693}!
        {711}get statestore(=bob,=charlie,=sid,statepack_d(hs_41: handshakestate,cs1_11: cipherstate,cs2_11: cipherstate)) in
        {694}let hs_42: handshakestate = handshakestatesetcs(hs_41,cs2_11) in
        {695}let v_543: bitstring = catch-fail(handshakestateunpack(hs_42)) in
        {696}let v_544: bitstring = catch-fail((empty,empty,empty)) in
        {697}let v_545: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_543))) in
        {698}let v_546: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_545))) in
        {699}let v_547: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_546),2-proj-2-tuple(v_546),3-proj-3-tuple(v_545),msg_d(bob,charlie,sid))) in
        {700}let v_548: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_545))) in
        {701}let v_549: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_546))) && success?(1-proj-3-tuple(v_545))) then (if (not-caught-fail(v_548) && success?(is-true(success?(1-proj-2-tuple(v_548))))) then cipherstatepack(1-proj-2-tuple(v_548),increment_nonce(2-proj-2-tuple(v_546))) else fail-any) else fail-any)) in
        {702}let v_550: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_545)) && success?(1-proj-3-tuple(v_545))) then (if (not-caught-fail(v_546) && success?(is-true(success?(1-proj-2-tuple(v_546))))) then (if not-caught-fail(v_547) then (if not-caught-fail(v_549) then (v_549,v_547) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {703}let v_551: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_550),2-proj-3-tuple(v_545),3-proj-3-tuple(v_545)))) in
        {704}let v_552: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_550)) && success?(symmetricstatepack(1-proj-2-tuple(v_550),2-proj-3-tuple(v_545),3-proj-3-tuple(v_545)))) then (if (not-caught-fail(v_551) && success?(is-true(success?(1-proj-3-tuple(v_551))))) then symmetricstatepack(1-proj-3-tuple(v_551),2-proj-3-tuple(v_551),hash(3-proj-3-tuple(v_551),2-proj-2-tuple(v_550))) else fail-any) else fail-any)) in
        {705}let v_553: bitstring = catch-fail((if success?(1-proj-7-tuple(v_543)) then (if (not-caught-fail(v_545) && success?(is-true(success?(1-proj-3-tuple(v_545))))) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then (if not-caught-fail(v_552) then (v_552,2-proj-2-tuple(v_550)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {706}let v_554: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_553),2-proj-7-tuple(v_543),3-proj-7-tuple(v_543),4-proj-7-tuple(v_543),5-proj-7-tuple(v_543),6-proj-7-tuple(v_543),7-proj-7-tuple(v_543))) in
        {707}let v_555: bitstring = catch-fail(concat3(1-proj-3-tuple(v_544),2-proj-3-tuple(v_544),2-proj-2-tuple(v_553))) in
        {708}let (hs_43: handshakestate,message_d_3: bitstring) = (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-7-tuple(v_543))))) then (if (not-caught-fail(v_544) && success?(is-true(success?(1-proj-3-tuple(v_544))))) then (if (not-caught-fail(v_553) && success?(is-true(success?(1-proj-2-tuple(v_553))))) then (if not-caught-fail(v_554) then (if not-caught-fail(v_555) then (v_554,v_555) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {709}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {710}out(pub, message_d_3)
    ) | (
        {712}event LeakPsk(phase0,charlie,bob);
        {713}out(pub, key_psk(charlie,bob))
    ) | (
        {714}phase 1;
        {715}event LeakPsk(phase1,charlie,bob);
        {716}out(pub, key_psk(charlie,bob))
    ) | (
        {717}event LeakS(phase0,bob);
        {718}out(pub, key_s(bob))
    ) | (
        {719}phase 1;
        {720}event LeakS(phase1,bob);
        {721}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)); not event(RecvEnd(true)) in process 0.
Completing...
200 rules inserted. The rule base contains 200 rules. 302 rules in the queue.
400 rules inserted. The rule base contains 399 rules. 231 rules in the queue.
600 rules inserted. The rule base contains 592 rules. 139 rules in the queue.
800 rules inserted. The rule base contains 778 rules. 172 rules in the queue.
1000 rules inserted. The rule base contains 978 rules. 280 rules in the queue.
1200 rules inserted. The rule base contains 1160 rules. 252 rules in the queue.
1400 rules inserted. The rule base contains 1354 rules. 302 rules in the queue.
1600 rules inserted. The rule base contains 1508 rules. 362 rules in the queue.
1800 rules inserted. The rule base contains 1708 rules. 424 rules in the queue.
2000 rules inserted. The rule base contains 1901 rules. 438 rules in the queue.
2200 rules inserted. The rule base contains 2037 rules. 436 rules in the queue.
2400 rules inserted. The rule base contains 2187 rules. 439 rules in the queue.
2600 rules inserted. The rule base contains 2364 rules. 422 rules in the queue.
2800 rules inserted. The rule base contains 2530 rules. 418 rules in the queue.
3000 rules inserted. The rule base contains 2636 rules. 430 rules in the queue.
3200 rules inserted. The rule base contains 2696 rules. 434 rules in the queue.
3400 rules inserted. The rule base contains 2840 rules. 470 rules in the queue.
3600 rules inserted. The rule base contains 2993 rules. 487 rules in the queue.
3800 rules inserted. The rule base contains 3145 rules. 482 rules in the queue.
4000 rules inserted. The rule base contains 3226 rules. 474 rules in the queue.
4200 rules inserted. The rule base contains 3334 rules. 464 rules in the queue.
4400 rules inserted. The rule base contains 3460 rules. 465 rules in the queue.
4600 rules inserted. The rule base contains 3568 rules. 459 rules in the queue.
4800 rules inserted. The rule base contains 3685 rules. 449 rules in the queue.
5000 rules inserted. The rule base contains 3841 rules. 429 rules in the queue.
5200 rules inserted. The rule base contains 4002 rules. 407 rules in the queue.
5400 rules inserted. The rule base contains 4177 rules. 411 rules in the queue.
5600 rules inserted. The rule base contains 4361 rules. 421 rules in the queue.
5800 rules inserted. The rule base contains 4505 rules. 449 rules in the queue.
6000 rules inserted. The rule base contains 4663 rules. 477 rules in the queue.
6200 rules inserted. The rule base contains 4803 rules. 554 rules in the queue.
6400 rules inserted. The rule base contains 4962 rules. 705 rules in the queue.
6600 rules inserted. The rule base contains 5135 rules. 760 rules in the queue.
6800 rules inserted. The rule base contains 5291 rules. 772 rules in the queue.
7000 rules inserted. The rule base contains 5474 rules. 973 rules in the queue.
7200 rules inserted. The rule base contains 5674 rules. 1126 rules in the queue.
7400 rules inserted. The rule base contains 5855 rules. 1433 rules in the queue.
7600 rules inserted. The rule base contains 6031 rules. 1408 rules in the queue.
7800 rules inserted. The rule base contains 6224 rules. 1702 rules in the queue.
8000 rules inserted. The rule base contains 6403 rules. 2065 rules in the queue.
8200 rules inserted. The rule base contains 6589 rules. 2274 rules in the queue.
8400 rules inserted. The rule base contains 6775 rules. 2445 rules in the queue.
8600 rules inserted. The rule base contains 6975 rules. 2799 rules in the queue.
8800 rules inserted. The rule base contains 7156 rules. 3003 rules in the queue.
9000 rules inserted. The rule base contains 7335 rules. 3060 rules in the queue.
9200 rules inserted. The rule base contains 7507 rules. 2995 rules in the queue.
9400 rules inserted. The rule base contains 7689 rules. 2957 rules in the queue.
9600 rules inserted. The rule base contains 7863 rules. 2976 rules in the queue.
9800 rules inserted. The rule base contains 7994 rules. 3353 rules in the queue.
10000 rules inserted. The rule base contains 8168 rules. 3310 rules in the queue.
10200 rules inserted. The rule base contains 8343 rules. 3341 rules in the queue.
10400 rules inserted. The rule base contains 8473 rules. 3619 rules in the queue.
10600 rules inserted. The rule base contains 8604 rules. 3697 rules in the queue.
10800 rules inserted. The rule base contains 8774 rules. 3891 rules in the queue.
11000 rules inserted. The rule base contains 8951 rules. 3820 rules in the queue.
11200 rules inserted. The rule base contains 9132 rules. 3766 rules in the queue.
11400 rules inserted. The rule base contains 9304 rules. 3712 rules in the queue.
11600 rules inserted. The rule base contains 9484 rules. 3677 rules in the queue.
11800 rules inserted. The rule base contains 9643 rules. 3727 rules in the queue.
12000 rules inserted. The rule base contains 9836 rules. 3758 rules in the queue.
12200 rules inserted. The rule base contains 10028 rules. 3886 rules in the queue.
12400 rules inserted. The rule base contains 10219 rules. 3942 rules in the queue.
12600 rules inserted. The rule base contains 10293 rules. 3929 rules in the queue.
12800 rules inserted. The rule base contains 10301 rules. 3921 rules in the queue.
13000 rules inserted. The rule base contains 10319 rules. 3903 rules in the queue.
13200 rules inserted. The rule base contains 10496 rules. 4277 rules in the queue.
13400 rules inserted. The rule base contains 10684 rules. 4300 rules in the queue.
13600 rules inserted. The rule base contains 10739 rules. 4280 rules in the queue.
13800 rules inserted. The rule base contains 10742 rules. 4277 rules in the queue.
14000 rules inserted. The rule base contains 10760 rules. 4293 rules in the queue.
14200 rules inserted. The rule base contains 10932 rules. 4568 rules in the queue.
14400 rules inserted. The rule base contains 11117 rules. 4566 rules in the queue.
14600 rules inserted. The rule base contains 11316 rules. 4974 rules in the queue.
14800 rules inserted. The rule base contains 11512 rules. 5238 rules in the queue.
15000 rules inserted. The rule base contains 11707 rules. 5303 rules in the queue.
15200 rules inserted. The rule base contains 11898 rules. 5360 rules in the queue.
15400 rules inserted. The rule base contains 12031 rules. 5377 rules in the queue.
15600 rules inserted. The rule base contains 12190 rules. 5396 rules in the queue.
15800 rules inserted. The rule base contains 12363 rules. 5365 rules in the queue.
16000 rules inserted. The rule base contains 12558 rules. 5290 rules in the queue.
16200 rules inserted. The rule base contains 12756 rules. 5292 rules in the queue.
16400 rules inserted. The rule base contains 12929 rules. 5299 rules in the queue.
16600 rules inserted. The rule base contains 12939 rules. 5337 rules in the queue.
16800 rules inserted. The rule base contains 12982 rules. 5395 rules in the queue.
17000 rules inserted. The rule base contains 13152 rules. 5323 rules in the queue.
17200 rules inserted. The rule base contains 13332 rules. 5298 rules in the queue.
17400 rules inserted. The rule base contains 13523 rules. 5264 rules in the queue.
17600 rules inserted. The rule base contains 13723 rules. 5274 rules in the queue.
17800 rules inserted. The rule base contains 13734 rules. 5313 rules in the queue.
18000 rules inserted. The rule base contains 13750 rules. 5361 rules in the queue.
18200 rules inserted. The rule base contains 13860 rules. 5375 rules in the queue.
18400 rules inserted. The rule base contains 14036 rules. 5278 rules in the queue.
18600 rules inserted. The rule base contains 14216 rules. 5218 rules in the queue.
18800 rules inserted. The rule base contains 14414 rules. 5243 rules in the queue.
19000 rules inserted. The rule base contains 14589 rules. 5150 rules in the queue.
19200 rules inserted. The rule base contains 14764 rules. 5062 rules in the queue.
19400 rules inserted. The rule base contains 14938 rules. 4976 rules in the queue.
19600 rules inserted. The rule base contains 15124 rules. 4926 rules in the queue.
19800 rules inserted. The rule base contains 15324 rules. 4883 rules in the queue.
20000 rules inserted. The rule base contains 15522 rules. 4898 rules in the queue.
20200 rules inserted. The rule base contains 15722 rules. 4855 rules in the queue.
20400 rules inserted. The rule base contains 15915 rules. 4886 rules in the queue.
20600 rules inserted. The rule base contains 15987 rules. 4918 rules in the queue.
20800 rules inserted. The rule base contains 16090 rules. 4987 rules in the queue.
21000 rules inserted. The rule base contains 16172 rules. 5000 rules in the queue.
21200 rules inserted. The rule base contains 16297 rules. 5019 rules in the queue.
21400 rules inserted. The rule base contains 16419 rules. 5012 rules in the queue.
21600 rules inserted. The rule base contains 16471 rules. 4991 rules in the queue.
21800 rules inserted. The rule base contains 16479 rules. 4957 rules in the queue.
22000 rules inserted. The rule base contains 16499 rules. 4896 rules in the queue.
22200 rules inserted. The rule base contains 16665 rules. 5027 rules in the queue.
22400 rules inserted. The rule base contains 16769 rules. 5024 rules in the queue.
22600 rules inserted. The rule base contains 16885 rules. 5011 rules in the queue.
22800 rules inserted. The rule base contains 16896 rules. 4928 rules in the queue.
23000 rules inserted. The rule base contains 16901 rules. 4888 rules in the queue.
23200 rules inserted. The rule base contains 16925 rules. 4832 rules in the queue.
23400 rules inserted. The rule base contains 17125 rules. 4962 rules in the queue.
23600 rules inserted. The rule base contains 17228 rules. 4966 rules in the queue.
23800 rules inserted. The rule base contains 17403 rules. 5048 rules in the queue.
24000 rules inserted. The rule base contains 17603 rules. 5183 rules in the queue.
24200 rules inserted. The rule base contains 17694 rules. 5214 rules in the queue.
24400 rules inserted. The rule base contains 17787 rules. 5208 rules in the queue.
24600 rules inserted. The rule base contains 17894 rules. 5190 rules in the queue.
24800 rules inserted. The rule base contains 18008 rules. 5187 rules in the queue.
25000 rules inserted. The rule base contains 18080 rules. 5163 rules in the queue.
25200 rules inserted. The rule base contains 18168 rules. 5253 rules in the queue.
25400 rules inserted. The rule base contains 18261 rules. 5333 rules in the queue.
25600 rules inserted. The rule base contains 18373 rules. 5333 rules in the queue.
25800 rules inserted. The rule base contains 18506 rules. 5312 rules in the queue.
26000 rules inserted. The rule base contains 18606 rules. 5268 rules in the queue.
26200 rules inserted. The rule base contains 18634 rules. 5254 rules in the queue.
26400 rules inserted. The rule base contains 18678 rules. 5232 rules in the queue.
26600 rules inserted. The rule base contains 18878 rules. 5189 rules in the queue.
26800 rules inserted. The rule base contains 19010 rules. 5165 rules in the queue.
27000 rules inserted. The rule base contains 19125 rules. 5142 rules in the queue.
27200 rules inserted. The rule base contains 19155 rules. 5133 rules in the queue.
27400 rules inserted. The rule base contains 19197 rules. 5121 rules in the queue.
27600 rules inserted. The rule base contains 19235 rules. 5109 rules in the queue.
27800 rules inserted. The rule base contains 19435 rules. 5059 rules in the queue.
28000 rules inserted. The rule base contains 19584 rules. 5040 rules in the queue.
28200 rules inserted. The rule base contains 19693 rules. 5021 rules in the queue.
28400 rules inserted. The rule base contains 19893 rules. 4964 rules in the queue.
28600 rules inserted. The rule base contains 20093 rules. 4941 rules in the queue.
28800 rules inserted. The rule base contains 20289 rules. 4921 rules in the queue.
29000 rules inserted. The rule base contains 20367 rules. 4907 rules in the queue.
29200 rules inserted. The rule base contains 20483 rules. 4873 rules in the queue.
29400 rules inserted. The rule base contains 20599 rules. 4813 rules in the queue.
29600 rules inserted. The rule base contains 20690 rules. 4780 rules in the queue.
29800 rules inserted. The rule base contains 20770 rules. 4854 rules in the queue.
30000 rules inserted. The rule base contains 20920 rules. 4870 rules in the queue.
30200 rules inserted. The rule base contains 21037 rules. 4940 rules in the queue.
30400 rules inserted. The rule base contains 21159 rules. 4968 rules in the queue.
30600 rules inserted. The rule base contains 21288 rules. 4958 rules in the queue.
30800 rules inserted. The rule base contains 21397 rules. 4932 rules in the queue.
31000 rules inserted. The rule base contains 21473 rules. 4904 rules in the queue.
31200 rules inserted. The rule base contains 21559 rules. 4864 rules in the queue.
31400 rules inserted. The rule base contains 21648 rules. 4871 rules in the queue.
31600 rules inserted. The rule base contains 21760 rules. 4876 rules in the queue.
31800 rules inserted. The rule base contains 21875 rules. 4844 rules in the queue.
32000 rules inserted. The rule base contains 21936 rules. 4826 rules in the queue.
32200 rules inserted. The rule base contains 22022 rules. 4792 rules in the queue.
32400 rules inserted. The rule base contains 22132 rules. 4765 rules in the queue.
32600 rules inserted. The rule base contains 22220 rules. 4784 rules in the queue.
32800 rules inserted. The rule base contains 22350 rules. 4787 rules in the queue.
33000 rules inserted. The rule base contains 22432 rules. 4789 rules in the queue.
33200 rules inserted. The rule base contains 22500 rules. 4776 rules in the queue.
33400 rules inserted. The rule base contains 22602 rules. 4774 rules in the queue.
33600 rules inserted. The rule base contains 22699 rules. 4773 rules in the queue.
33800 rules inserted. The rule base contains 22813 rules. 4740 rules in the queue.
34000 rules inserted. The rule base contains 22871 rules. 4711 rules in the queue.
34200 rules inserted. The rule base contains 22950 rules. 4769 rules in the queue.
34400 rules inserted. The rule base contains 23048 rules. 4759 rules in the queue.
34600 rules inserted. The rule base contains 23179 rules. 4806 rules in the queue.
34800 rules inserted. The rule base contains 23275 rules. 4786 rules in the queue.
35000 rules inserted. The rule base contains 23460 rules. 4792 rules in the queue.
35200 rules inserted. The rule base contains 23649 rules. 4834 rules in the queue.
35400 rules inserted. The rule base contains 23811 rules. 4824 rules in the queue.
35600 rules inserted. The rule base contains 23909 rules. 4750 rules in the queue.
35800 rules inserted. The rule base contains 24036 rules. 4684 rules in the queue.
36000 rules inserted. The rule base contains 24158 rules. 4663 rules in the queue.
36200 rules inserted. The rule base contains 24337 rules. 4723 rules in the queue.
36400 rules inserted. The rule base contains 24457 rules. 4662 rules in the queue.
36600 rules inserted. The rule base contains 24580 rules. 4572 rules in the queue.
36800 rules inserted. The rule base contains 24720 rules. 4499 rules in the queue.
37000 rules inserted. The rule base contains 24835 rules. 4476 rules in the queue.
37200 rules inserted. The rule base contains 24999 rules. 4523 rules in the queue.
37400 rules inserted. The rule base contains 25129 rules. 4467 rules in the queue.
37600 rules inserted. The rule base contains 25209 rules. 4410 rules in the queue.
37800 rules inserted. The rule base contains 25353 rules. 4436 rules in the queue.
38000 rules inserted. The rule base contains 25546 rules. 4527 rules in the queue.
38200 rules inserted. The rule base contains 25731 rules. 4536 rules in the queue.
38400 rules inserted. The rule base contains 25829 rules. 4490 rules in the queue.
38600 rules inserted. The rule base contains 25915 rules. 4509 rules in the queue.
38800 rules inserted. The rule base contains 26018 rules. 4473 rules in the queue.
39000 rules inserted. The rule base contains 26110 rules. 4464 rules in the queue.
39200 rules inserted. The rule base contains 26211 rules. 4432 rules in the queue.
39400 rules inserted. The rule base contains 26319 rules. 4395 rules in the queue.
39600 rules inserted. The rule base contains 26519 rules. 4446 rules in the queue.
39800 rules inserted. The rule base contains 26719 rules. 4486 rules in the queue.
40000 rules inserted. The rule base contains 26847 rules. 4431 rules in the queue.
40200 rules inserted. The rule base contains 26948 rules. 4353 rules in the queue.
40400 rules inserted. The rule base contains 27072 rules. 4356 rules in the queue.
40600 rules inserted. The rule base contains 27272 rules. 4386 rules in the queue.
40800 rules inserted. The rule base contains 27428 rules. 4327 rules in the queue.
41000 rules inserted. The rule base contains 27560 rules. 4229 rules in the queue.
41200 rules inserted. The rule base contains 27648 rules. 4175 rules in the queue.
41400 rules inserted. The rule base contains 27835 rules. 4211 rules in the queue.
41600 rules inserted. The rule base contains 27977 rules. 4201 rules in the queue.
41800 rules inserted. The rule base contains 28040 rules. 4183 rules in the queue.
42000 rules inserted. The rule base contains 28117 rules. 4189 rules in the queue.
42200 rules inserted. The rule base contains 28317 rules. 4240 rules in the queue.
42400 rules inserted. The rule base contains 28517 rules. 4280 rules in the queue.
42600 rules inserted. The rule base contains 28715 rules. 4329 rules in the queue.
42800 rules inserted. The rule base contains 28788 rules. 4271 rules in the queue.
43000 rules inserted. The rule base contains 28903 rules. 4282 rules in the queue.
43200 rules inserted. The rule base contains 28996 rules. 4213 rules in the queue.
43400 rules inserted. The rule base contains 29088 rules. 4200 rules in the queue.
43600 rules inserted. The rule base contains 29192 rules. 4192 rules in the queue.
43800 rules inserted. The rule base contains 29392 rules. 4198 rules in the queue.
44000 rules inserted. The rule base contains 29592 rules. 4202 rules in the queue.
44200 rules inserted. The rule base contains 29770 rules. 4228 rules in the queue.
44400 rules inserted. The rule base contains 29928 rules. 4295 rules in the queue.
44600 rules inserted. The rule base contains 30120 rules. 4295 rules in the queue.
44800 rules inserted. The rule base contains 30320 rules. 4298 rules in the queue.
45000 rules inserted. The rule base contains 30491 rules. 4358 rules in the queue.
45200 rules inserted. The rule base contains 30688 rules. 4406 rules in the queue.
45400 rules inserted. The rule base contains 30872 rules. 4406 rules in the queue.
45600 rules inserted. The rule base contains 31072 rules. 4424 rules in the queue.
45800 rules inserted. The rule base contains 31249 rules. 4450 rules in the queue.
46000 rules inserted. The rule base contains 31388 rules. 4466 rules in the queue.
46200 rules inserted. The rule base contains 31568 rules. 4453 rules in the queue.
46400 rules inserted. The rule base contains 31768 rules. 4459 rules in the queue.
46600 rules inserted. The rule base contains 31968 rules. 4470 rules in the queue.
46800 rules inserted. The rule base contains 32168 rules. 4481 rules in the queue.
47000 rules inserted. The rule base contains 32294 rules. 4501 rules in the queue.
47200 rules inserted. The rule base contains 32399 rules. 4459 rules in the queue.
47400 rules inserted. The rule base contains 32441 rules. 4380 rules in the queue.
47600 rules inserted. The rule base contains 32496 rules. 4391 rules in the queue.
47800 rules inserted. The rule base contains 32671 rules. 4426 rules in the queue.
48000 rules inserted. The rule base contains 32871 rules. 4454 rules in the queue.
48200 rules inserted. The rule base contains 33071 rules. 4481 rules in the queue.
48400 rules inserted. The rule base contains 33151 rules. 4480 rules in the queue.
48600 rules inserted. The rule base contains 33351 rules. 4527 rules in the queue.
48800 rules inserted. The rule base contains 33551 rules. 4547 rules in the queue.
49000 rules inserted. The rule base contains 33751 rules. 4564 rules in the queue.
49200 rules inserted. The rule base contains 33891 rules. 4573 rules in the queue.
49400 rules inserted. The rule base contains 34031 rules. 4594 rules in the queue.
49600 rules inserted. The rule base contains 34231 rules. 4613 rules in the queue.
49800 rules inserted. The rule base contains 34431 rules. 4641 rules in the queue.
50000 rules inserted. The rule base contains 34631 rules. 4673 rules in the queue.
50200 rules inserted. The rule base contains 34802 rules. 4725 rules in the queue.
50400 rules inserted. The rule base contains 34953 rules. 4727 rules in the queue.
50600 rules inserted. The rule base contains 35153 rules. 4782 rules in the queue.
50800 rules inserted. The rule base contains 35353 rules. 4814 rules in the queue.
51000 rules inserted. The rule base contains 35553 rules. 4851 rules in the queue.
51200 rules inserted. The rule base contains 35753 rules. 4887 rules in the queue.
51400 rules inserted. The rule base contains 35890 rules. 4935 rules in the queue.
51600 rules inserted. The rule base contains 35961 rules. 4908 rules in the queue.
51800 rules inserted. The rule base contains 36015 rules. 4869 rules in the queue.
52000 rules inserted. The rule base contains 36112 rules. 4864 rules in the queue.
52200 rules inserted. The rule base contains 36312 rules. 4916 rules in the queue.
52400 rules inserted. The rule base contains 36512 rules. 4976 rules in the queue.
52600 rules inserted. The rule base contains 36712 rules. 5015 rules in the queue.
52800 rules inserted. The rule base contains 36812 rules. 4976 rules in the queue.
53000 rules inserted. The rule base contains 37012 rules. 4981 rules in the queue.
53200 rules inserted. The rule base contains 37212 rules. 5000 rules in the queue.
53400 rules inserted. The rule base contains 37412 rules. 5051 rules in the queue.
53600 rules inserted. The rule base contains 37612 rules. 5093 rules in the queue.
53800 rules inserted. The rule base contains 37632 rules. 5017 rules in the queue.
54000 rules inserted. The rule base contains 37832 rules. 5023 rules in the queue.
54200 rules inserted. The rule base contains 38032 rules. 5044 rules in the queue.
54400 rules inserted. The rule base contains 38232 rules. 5101 rules in the queue.
54600 rules inserted. The rule base contains 38432 rules. 5128 rules in the queue.
54800 rules inserted. The rule base contains 38606 rules. 5134 rules in the queue.
55000 rules inserted. The rule base contains 38754 rules. 5141 rules in the queue.
55200 rules inserted. The rule base contains 38954 rules. 5183 rules in the queue.
55400 rules inserted. The rule base contains 39154 rules. 5241 rules in the queue.
55600 rules inserted. The rule base contains 39354 rules. 5295 rules in the queue.
55800 rules inserted. The rule base contains 39554 rules. 5357 rules in the queue.
56000 rules inserted. The rule base contains 39754 rules. 5413 rules in the queue.
56200 rules inserted. The rule base contains 39872 rules. 5467 rules in the queue.
56400 rules inserted. The rule base contains 39995 rules. 5459 rules in the queue.
56600 rules inserted. The rule base contains 40152 rules. 5339 rules in the queue.
56800 rules inserted. The rule base contains 40343 rules. 5228 rules in the queue.
57000 rules inserted. The rule base contains 40543 rules. 5254 rules in the queue.
57200 rules inserted. The rule base contains 40741 rules. 5291 rules in the queue.
57400 rules inserted. The rule base contains 40937 rules. 5323 rules in the queue.
57600 rules inserted. The rule base contains 41137 rules. 5359 rules in the queue.
57800 rules inserted. The rule base contains 41313 rules. 5397 rules in the queue.
58000 rules inserted. The rule base contains 41513 rules. 5441 rules in the queue.
58200 rules inserted. The rule base contains 41713 rules. 5465 rules in the queue.
58400 rules inserted. The rule base contains 41911 rules. 5507 rules in the queue.
58600 rules inserted. The rule base contains 42107 rules. 5537 rules in the queue.
58800 rules inserted. The rule base contains 42259 rules. 5570 rules in the queue.
59000 rules inserted. The rule base contains 42459 rules. 5613 rules in the queue.
59200 rules inserted. The rule base contains 42659 rules. 5639 rules in the queue.
59400 rules inserted. The rule base contains 42853 rules. 5677 rules in the queue.
59600 rules inserted. The rule base contains 43053 rules. 5726 rules in the queue.
59800 rules inserted. The rule base contains 43251 rules. 5767 rules in the queue.
60000 rules inserted. The rule base contains 43393 rules. 5814 rules in the queue.
60200 rules inserted. The rule base contains 43563 rules. 5844 rules in the queue.
60400 rules inserted. The rule base contains 43763 rules. 5867 rules in the queue.
60600 rules inserted. The rule base contains 43963 rules. 5903 rules in the queue.
60800 rules inserted. The rule base contains 44157 rules. 5937 rules in the queue.
61000 rules inserted. The rule base contains 44357 rules. 5967 rules in the queue.
61200 rules inserted. The rule base contains 44557 rules. 5991 rules in the queue.
61400 rules inserted. The rule base contains 44737 rules. 6047 rules in the queue.
61600 rules inserted. The rule base contains 44791 rules. 6141 rules in the queue.
61800 rules inserted. The rule base contains 44849 rules. 6183 rules in the queue.
62000 rules inserted. The rule base contains 44935 rules. 6131 rules in the queue.
62200 rules inserted. The rule base contains 45131 rules. 6159 rules in the queue.
62400 rules inserted. The rule base contains 45328 rules. 6187 rules in the queue.
62600 rules inserted. The rule base contains 45522 rules. 6207 rules in the queue.
62800 rules inserted. The rule base contains 45720 rules. 6223 rules in the queue.
63000 rules inserted. The rule base contains 45912 rules. 6270 rules in the queue.
63200 rules inserted. The rule base contains 46104 rules. 6345 rules in the queue.
63400 rules inserted. The rule base contains 46304 rules. 6406 rules in the queue.
63600 rules inserted. The rule base contains 46500 rules. 6430 rules in the queue.
63800 rules inserted. The rule base contains 46697 rules. 6455 rules in the queue.
64000 rules inserted. The rule base contains 46891 rules. 6478 rules in the queue.
64200 rules inserted. The rule base contains 47073 rules. 6541 rules in the queue.
64400 rules inserted. The rule base contains 47273 rules. 6588 rules in the queue.
64600 rules inserted. The rule base contains 47473 rules. 6648 rules in the queue.
64800 rules inserted. The rule base contains 47669 rules. 6683 rules in the queue.
65000 rules inserted. The rule base contains 47860 rules. 6706 rules in the queue.
65200 rules inserted. The rule base contains 48056 rules. 6733 rules in the queue.
65400 rules inserted. The rule base contains 48256 rules. 6793 rules in the queue.
65600 rules inserted. The rule base contains 48418 rules. 6851 rules in the queue.
65800 rules inserted. The rule base contains 48567 rules. 6910 rules in the queue.
66000 rules inserted. The rule base contains 48736 rules. 6947 rules in the queue.
66200 rules inserted. The rule base contains 48924 rules. 6970 rules in the queue.
66400 rules inserted. The rule base contains 49122 rules. 7001 rules in the queue.
66600 rules inserted. The rule base contains 49319 rules. 7029 rules in the queue.
66800 rules inserted. The rule base contains 49505 rules. 7047 rules in the queue.
67000 rules inserted. The rule base contains 49701 rules. 7075 rules in the queue.
67200 rules inserted. The rule base contains 49893 rules. 7097 rules in the queue.
67400 rules inserted. The rule base contains 50038 rules. 7155 rules in the queue.
67600 rules inserted. The rule base contains 50145 rules. 7189 rules in the queue.
67800 rules inserted. The rule base contains 50233 rules. 7257 rules in the queue.
68000 rules inserted. The rule base contains 50267 rules. 7230 rules in the queue.
68200 rules inserted. The rule base contains 50459 rules. 7239 rules in the queue.
68400 rules inserted. The rule base contains 50655 rules. 7242 rules in the queue.
68600 rules inserted. The rule base contains 50847 rules. 7257 rules in the queue.
68800 rules inserted. The rule base contains 51032 rules. 7270 rules in the queue.
69000 rules inserted. The rule base contains 51225 rules. 7277 rules in the queue.
69200 rules inserted. The rule base contains 51425 rules. 7318 rules in the queue.
69400 rules inserted. The rule base contains 51617 rules. 7371 rules in the queue.
69600 rules inserted. The rule base contains 51817 rules. 7397 rules in the queue.
69800 rules inserted. The rule base contains 52011 rules. 7423 rules in the queue.
70000 rules inserted. The rule base contains 52205 rules. 7428 rules in the queue.
70200 rules inserted. The rule base contains 52397 rules. 7440 rules in the queue.
70400 rules inserted. The rule base contains 52583 rules. 7447 rules in the queue.
70600 rules inserted. The rule base contains 52777 rules. 7470 rules in the queue.
70800 rules inserted. The rule base contains 52969 rules. 7533 rules in the queue.
71000 rules inserted. The rule base contains 53169 rules. 7561 rules in the queue.
71200 rules inserted. The rule base contains 53363 rules. 7611 rules in the queue.
71400 rules inserted. The rule base contains 53557 rules. 7632 rules in the queue.
71600 rules inserted. The rule base contains 53744 rules. 7657 rules in the queue.
71800 rules inserted. The rule base contains 53932 rules. 7690 rules in the queue.
72000 rules inserted. The rule base contains 54132 rules. 7722 rules in the queue.
72200 rules inserted. The rule base contains 54332 rules. 7749 rules in the queue.
72400 rules inserted. The rule base contains 54488 rules. 7774 rules in the queue.
72600 rules inserted. The rule base contains 54644 rules. 7796 rules in the queue.
72800 rules inserted. The rule base contains 54792 rules. 7830 rules in the queue.
73000 rules inserted. The rule base contains 54985 rules. 7857 rules in the queue.
73200 rules inserted. The rule base contains 55177 rules. 7888 rules in the queue.
73400 rules inserted. The rule base contains 55369 rules. 7904 rules in the queue.
73600 rules inserted. The rule base contains 55556 rules. 7930 rules in the queue.
73800 rules inserted. The rule base contains 55748 rules. 7959 rules in the queue.
74000 rules inserted. The rule base contains 55946 rules. 7986 rules in the queue.
74200 rules inserted. The rule base contains 56140 rules. 8015 rules in the queue.
74400 rules inserted. The rule base contains 56340 rules. 8076 rules in the queue.
74600 rules inserted. The rule base contains 56414 rules. 8015 rules in the queue.
74800 rules inserted. The rule base contains 56506 rules. 8061 rules in the queue.
75000 rules inserted. The rule base contains 56608 rules. 7993 rules in the queue.
75200 rules inserted. The rule base contains 56746 rules. 7945 rules in the queue.
75400 rules inserted. The rule base contains 56902 rules. 7945 rules in the queue.
75600 rules inserted. The rule base contains 57093 rules. 7968 rules in the queue.
75800 rules inserted. The rule base contains 57263 rules. 7952 rules in the queue.
76000 rules inserted. The rule base contains 57408 rules. 7948 rules in the queue.
76200 rules inserted. The rule base contains 57574 rules. 7940 rules in the queue.
76400 rules inserted. The rule base contains 57751 rules. 7937 rules in the queue.
76600 rules inserted. The rule base contains 57941 rules. 7956 rules in the queue.
76800 rules inserted. The rule base contains 58139 rules. 7980 rules in the queue.
77000 rules inserted. The rule base contains 58335 rules. 8021 rules in the queue.
77200 rules inserted. The rule base contains 58493 rules. 8000 rules in the queue.
77400 rules inserted. The rule base contains 58662 rules. 7993 rules in the queue.
77600 rules inserted. The rule base contains 58815 rules. 7980 rules in the queue.
77800 rules inserted. The rule base contains 58990 rules. 7971 rules in the queue.
78000 rules inserted. The rule base contains 59165 rules. 7968 rules in the queue.
78200 rules inserted. The rule base contains 59359 rules. 7986 rules in the queue.
78400 rules inserted. The rule base contains 59553 rules. 8011 rules in the queue.
78600 rules inserted. The rule base contains 59744 rules. 8057 rules in the queue.
78800 rules inserted. The rule base contains 59903 rules. 8067 rules in the queue.
79000 rules inserted. The rule base contains 60072 rules. 8072 rules in the queue.
79200 rules inserted. The rule base contains 60219 rules. 8073 rules in the queue.
79400 rules inserted. The rule base contains 60400 rules. 8091 rules in the queue.
79600 rules inserted. The rule base contains 60594 rules. 8116 rules in the queue.
79800 rules inserted. The rule base contains 60765 rules. 8141 rules in the queue.
80000 rules inserted. The rule base contains 60920 rules. 8164 rules in the queue.
80200 rules inserted. The rule base contains 61084 rules. 8187 rules in the queue.
80400 rules inserted. The rule base contains 61210 rules. 8213 rules in the queue.
80600 rules inserted. The rule base contains 61354 rules. 8235 rules in the queue.
80800 rules inserted. The rule base contains 61490 rules. 8250 rules in the queue.
81000 rules inserted. The rule base contains 61680 rules. 8275 rules in the queue.
81200 rules inserted. The rule base contains 61850 rules. 8279 rules in the queue.
81400 rules inserted. The rule base contains 61975 rules. 8270 rules in the queue.
81600 rules inserted. The rule base contains 62142 rules. 8285 rules in the queue.
81800 rules inserted. The rule base contains 62278 rules. 8278 rules in the queue.
82000 rules inserted. The rule base contains 62469 rules. 8306 rules in the queue.
82200 rules inserted. The rule base contains 62621 rules. 8328 rules in the queue.
82400 rules inserted. The rule base contains 62703 rules. 8220 rules in the queue.
82600 rules inserted. The rule base contains 62810 rules. 8216 rules in the queue.
82800 rules inserted. The rule base contains 62940 rules. 8180 rules in the queue.
83000 rules inserted. The rule base contains 63075 rules. 8181 rules in the queue.
83200 rules inserted. The rule base contains 63265 rules. 8176 rules in the queue.
83400 rules inserted. The rule base contains 63455 rules. 8183 rules in the queue.
83600 rules inserted. The rule base contains 63621 rules. 8182 rules in the queue.
83800 rules inserted. The rule base contains 63773 rules. 8174 rules in the queue.
84000 rules inserted. The rule base contains 63958 rules. 8194 rules in the queue.
84200 rules inserted. The rule base contains 64142 rules. 8213 rules in the queue.
84400 rules inserted. The rule base contains 64337 rules. 8230 rules in the queue.
84600 rules inserted. The rule base contains 64535 rules. 8237 rules in the queue.
84800 rules inserted. The rule base contains 64692 rules. 8238 rules in the queue.
85000 rules inserted. The rule base contains 64858 rules. 8238 rules in the queue.
85200 rules inserted. The rule base contains 65048 rules. 8252 rules in the queue.
85400 rules inserted. The rule base contains 65200 rules. 8241 rules in the queue.
85600 rules inserted. The rule base contains 65386 rules. 8254 rules in the queue.
85800 rules inserted. The rule base contains 65539 rules. 8266 rules in the queue.
86000 rules inserted. The rule base contains 65733 rules. 8292 rules in the queue.
86200 rules inserted. The rule base contains 65929 rules. 8316 rules in the queue.
86400 rules inserted. The rule base contains 66089 rules. 8329 rules in the queue.
86600 rules inserted. The rule base contains 66249 rules. 8329 rules in the queue.
86800 rules inserted. The rule base contains 66439 rules. 8343 rules in the queue.
87000 rules inserted. The rule base contains 66614 rules. 8350 rules in the queue.
87200 rules inserted. The rule base contains 66792 rules. 8361 rules in the queue.
87400 rules inserted. The rule base contains 66988 rules. 8384 rules in the queue.
87600 rules inserted. The rule base contains 67182 rules. 8409 rules in the queue.
87800 rules inserted. The rule base contains 67325 rules. 8426 rules in the queue.
88000 rules inserted. The rule base contains 67470 rules. 8422 rules in the queue.
88200 rules inserted. The rule base contains 67614 rules. 8424 rules in the queue.
88400 rules inserted. The rule base contains 67750 rules. 8424 rules in the queue.
88600 rules inserted. The rule base contains 67906 rules. 8440 rules in the queue.
88800 rules inserted. The rule base contains 68045 rules. 8443 rules in the queue.
89000 rules inserted. The rule base contains 68230 rules. 8447 rules in the queue.
89200 rules inserted. The rule base contains 68419 rules. 8454 rules in the queue.
89400 rules inserted. The rule base contains 68580 rules. 8456 rules in the queue.
89600 rules inserted. The rule base contains 68741 rules. 8454 rules in the queue.
89800 rules inserted. The rule base contains 68878 rules. 8450 rules in the queue.
90000 rules inserted. The rule base contains 69063 rules. 8453 rules in the queue.
90200 rules inserted. The rule base contains 69215 rules. 8464 rules in the queue.
90400 rules inserted. The rule base contains 69279 rules. 8441 rules in the queue.
90600 rules inserted. The rule base contains 69367 rules. 8386 rules in the queue.
90800 rules inserted. The rule base contains 69491 rules. 8363 rules in the queue.
91000 rules inserted. The rule base contains 69676 rules. 8348 rules in the queue.
91200 rules inserted. The rule base contains 69864 rules. 8353 rules in the queue.
91400 rules inserted. The rule base contains 70055 rules. 8353 rules in the queue.
91600 rules inserted. The rule base contains 70237 rules. 8339 rules in the queue.
91800 rules inserted. The rule base contains 70411 rules. 8318 rules in the queue.
92000 rules inserted. The rule base contains 70601 rules. 8334 rules in the queue.
92200 rules inserted. The rule base contains 70779 rules. 8372 rules in the queue.
92400 rules inserted. The rule base contains 70941 rules. 8386 rules in the queue.
92600 rules inserted. The rule base contains 71115 rules. 8410 rules in the queue.
92800 rules inserted. The rule base contains 71267 rules. 8417 rules in the queue.
93000 rules inserted. The rule base contains 71447 rules. 8409 rules in the queue.
93200 rules inserted. The rule base contains 71637 rules. 8409 rules in the queue.
93400 rules inserted. The rule base contains 71820 rules. 8404 rules in the queue.
93600 rules inserted. The rule base contains 71994 rules. 8388 rules in the queue.
93800 rules inserted. The rule base contains 72194 rules. 8431 rules in the queue.
94000 rules inserted. The rule base contains 72337 rules. 8442 rules in the queue.
94200 rules inserted. The rule base contains 72500 rules. 8465 rules in the queue.
94400 rules inserted. The rule base contains 72668 rules. 8477 rules in the queue.
94600 rules inserted. The rule base contains 72829 rules. 8482 rules in the queue.
94800 rules inserted. The rule base contains 73020 rules. 8493 rules in the queue.
95000 rules inserted. The rule base contains 73210 rules. 8483 rules in the queue.
95200 rules inserted. The rule base contains 73375 rules. 8475 rules in the queue.
95400 rules inserted. The rule base contains 73522 rules. 8483 rules in the queue.
95600 rules inserted. The rule base contains 73689 rules. 8498 rules in the queue.
95800 rules inserted. The rule base contains 73817 rules. 8511 rules in the queue.
96000 rules inserted. The rule base contains 73950 rules. 8529 rules in the queue.
96200 rules inserted. The rule base contains 74052 rules. 8547 rules in the queue.
96400 rules inserted. The rule base contains 74152 rules. 8540 rules in the queue.
96600 rules inserted. The rule base contains 74328 rules. 8592 rules in the queue.
96800 rules inserted. The rule base contains 74511 rules. 8631 rules in the queue.
97000 rules inserted. The rule base contains 74698 rules. 8652 rules in the queue.
97200 rules inserted. The rule base contains 74886 rules. 8662 rules in the queue.
97400 rules inserted. The rule base contains 75075 rules. 8660 rules in the queue.
97600 rules inserted. The rule base contains 75259 rules. 8640 rules in the queue.
97800 rules inserted. The rule base contains 75433 rules. 8629 rules in the queue.
98000 rules inserted. The rule base contains 75603 rules. 8592 rules in the queue.
98200 rules inserted. The rule base contains 75790 rules. 8599 rules in the queue.
98400 rules inserted. The rule base contains 75924 rules. 8604 rules in the queue.
98600 rules inserted. The rule base contains 76021 rules. 8639 rules in the queue.
98800 rules inserted. The rule base contains 76096 rules. 8662 rules in the queue.
99000 rules inserted. The rule base contains 76246 rules. 8650 rules in the queue.
99200 rules inserted. The rule base contains 76423 rules. 8670 rules in the queue.
99400 rules inserted. The rule base contains 76597 rules. 8692 rules in the queue.
99600 rules inserted. The rule base contains 76770 rules. 8707 rules in the queue.
99800 rules inserted. The rule base contains 76924 rules. 8711 rules in the queue.
100000 rules inserted. The rule base contains 77088 rules. 8737 rules in the queue.
100200 rules inserted. The rule base contains 77236 rules. 8777 rules in the queue.
100400 rules inserted. The rule base contains 77390 rules. 8779 rules in the queue.
100600 rules inserted. The rule base contains 77557 rules. 8779 rules in the queue.
100800 rules inserted. The rule base contains 77714 rules. 8784 rules in the queue.
101000 rules inserted. The rule base contains 77869 rules. 8794 rules in the queue.
101200 rules inserted. The rule base contains 78044 rules. 8813 rules in the queue.
101400 rules inserted. The rule base contains 78231 rules. 8834 rules in the queue.
101600 rules inserted. The rule base contains 78383 rules. 8839 rules in the queue.
101800 rules inserted. The rule base contains 78546 rules. 8875 rules in the queue.
102000 rules inserted. The rule base contains 78700 rules. 8929 rules in the queue.
102200 rules inserted. The rule base contains 78856 rules. 8931 rules in the queue.
102400 rules inserted. The rule base contains 79016 rules. 8935 rules in the queue.
102600 rules inserted. The rule base contains 79184 rules. 8933 rules in the queue.
102800 rules inserted. The rule base contains 79325 rules. 8966 rules in the queue.
103000 rules inserted. The rule base contains 79502 rules. 8989 rules in the queue.
103200 rules inserted. The rule base contains 79688 rules. 9012 rules in the queue.
103400 rules inserted. The rule base contains 79838 rules. 8999 rules in the queue.
103600 rules inserted. The rule base contains 79991 rules. 9008 rules in the queue.
103800 rules inserted. The rule base contains 80130 rules. 8999 rules in the queue.
104000 rules inserted. The rule base contains 80296 rules. 9003 rules in the queue.
104200 rules inserted. The rule base contains 80393 rules. 9002 rules in the queue.
104400 rules inserted. The rule base contains 80490 rules. 9005 rules in the queue.
104600 rules inserted. The rule base contains 80605 rules. 9007 rules in the queue.
104800 rules inserted. The rule base contains 80728 rules. 9028 rules in the queue.
105000 rules inserted. The rule base contains 80898 rules. 9054 rules in the queue.
105200 rules inserted. The rule base contains 81078 rules. 9069 rules in the queue.
105400 rules inserted. The rule base contains 81243 rules. 9084 rules in the queue.
105600 rules inserted. The rule base contains 81412 rules. 9119 rules in the queue.
105800 rules inserted. The rule base contains 81583 rules. 9150 rules in the queue.
106000 rules inserted. The rule base contains 81762 rules. 9145 rules in the queue.
106200 rules inserted. The rule base contains 81912 rules. 9146 rules in the queue.
106400 rules inserted. The rule base contains 82076 rules. 9114 rules in the queue.
106600 rules inserted. The rule base contains 82234 rules. 9141 rules in the queue.
106800 rules inserted. The rule base contains 82338 rules. 9121 rules in the queue.
107000 rules inserted. The rule base contains 82451 rules. 9171 rules in the queue.
107200 rules inserted. The rule base contains 82539 rules. 9168 rules in the queue.
107400 rules inserted. The rule base contains 82645 rules. 9158 rules in the queue.
107600 rules inserted. The rule base contains 82763 rules. 9132 rules in the queue.
107800 rules inserted. The rule base contains 82883 rules. 9137 rules in the queue.
108000 rules inserted. The rule base contains 83001 rules. 9136 rules in the queue.
108200 rules inserted. The rule base contains 83120 rules. 9118 rules in the queue.
108400 rules inserted. The rule base contains 83238 rules. 9111 rules in the queue.
108600 rules inserted. The rule base contains 83406 rules. 9127 rules in the queue.
108800 rules inserted. The rule base contains 83588 rules. 9152 rules in the queue.
109000 rules inserted. The rule base contains 83774 rules. 9140 rules in the queue.
109200 rules inserted. The rule base contains 83962 rules. 9131 rules in the queue.
109400 rules inserted. The rule base contains 84093 rules. 9147 rules in the queue.
109600 rules inserted. The rule base contains 84231 rules. 9111 rules in the queue.
109800 rules inserted. The rule base contains 84372 rules. 9120 rules in the queue.
110000 rules inserted. The rule base contains 84516 rules. 9112 rules in the queue.
110200 rules inserted. The rule base contains 84648 rules. 9105 rules in the queue.
110400 rules inserted. The rule base contains 84815 rules. 9121 rules in the queue.
110600 rules inserted. The rule base contains 84969 rules. 9148 rules in the queue.
110800 rules inserted. The rule base contains 85153 rules. 9144 rules in the queue.
111000 rules inserted. The rule base contains 85322 rules. 9167 rules in the queue.
111200 rules inserted. The rule base contains 85510 rules. 9157 rules in the queue.
111400 rules inserted. The rule base contains 85604 rules. 9167 rules in the queue.
111600 rules inserted. The rule base contains 85751 rules. 9138 rules in the queue.
111800 rules inserted. The rule base contains 85910 rules. 9152 rules in the queue.
112000 rules inserted. The rule base contains 86053 rules. 9129 rules in the queue.
112200 rules inserted. The rule base contains 86178 rules. 9124 rules in the queue.
112400 rules inserted. The rule base contains 86313 rules. 9110 rules in the queue.
112600 rules inserted. The rule base contains 86499 rules. 9121 rules in the queue.
112800 rules inserted. The rule base contains 86637 rules. 9110 rules in the queue.
113000 rules inserted. The rule base contains 86778 rules. 9104 rules in the queue.
113200 rules inserted. The rule base contains 86958 rules. 9101 rules in the queue.
113400 rules inserted. The rule base contains 87038 rules. 9111 rules in the queue.
113600 rules inserted. The rule base contains 87193 rules. 9073 rules in the queue.
113800 rules inserted. The rule base contains 87329 rules. 9033 rules in the queue.
114000 rules inserted. The rule base contains 87497 rules. 8959 rules in the queue.
114200 rules inserted. The rule base contains 87599 rules. 8942 rules in the queue.
114400 rules inserted. The rule base contains 87711 rules. 8939 rules in the queue.
114600 rules inserted. The rule base contains 87823 rules. 8935 rules in the queue.
114800 rules inserted. The rule base contains 87942 rules. 8902 rules in the queue.
115000 rules inserted. The rule base contains 88049 rules. 8873 rules in the queue.
115200 rules inserted. The rule base contains 88149 rules. 8859 rules in the queue.
115400 rules inserted. The rule base contains 88215 rules. 8837 rules in the queue.
115600 rules inserted. The rule base contains 88306 rules. 8822 rules in the queue.
115800 rules inserted. The rule base contains 88286 rules. 8754 rules in the queue.
116000 rules inserted. The rule base contains 88361 rules. 8708 rules in the queue.
116200 rules inserted. The rule base contains 88493 rules. 8676 rules in the queue.
116400 rules inserted. The rule base contains 88624 rules. 8663 rules in the queue.
116600 rules inserted. The rule base contains 88747 rules. 8641 rules in the queue.
116800 rules inserted. The rule base contains 88870 rules. 8595 rules in the queue.
117000 rules inserted. The rule base contains 89015 rules. 8579 rules in the queue.
117200 rules inserted. The rule base contains 89207 rules. 8595 rules in the queue.
117400 rules inserted. The rule base contains 89362 rules. 8619 rules in the queue.
117600 rules inserted. The rule base contains 89518 rules. 8636 rules in the queue.
117800 rules inserted. The rule base contains 89682 rules. 8650 rules in the queue.
118000 rules inserted. The rule base contains 89781 rules. 8628 rules in the queue.
118200 rules inserted. The rule base contains 89919 rules. 8613 rules in the queue.
118400 rules inserted. The rule base contains 90070 rules. 8602 rules in the queue.
118600 rules inserted. The rule base contains 90198 rules. 8567 rules in the queue.
118800 rules inserted. The rule base contains 90368 rules. 8564 rules in the queue.
119000 rules inserted. The rule base contains 90548 rules. 8600 rules in the queue.
119200 rules inserted. The rule base contains 90714 rules. 8632 rules in the queue.
119400 rules inserted. The rule base contains 90864 rules. 8649 rules in the queue.
119600 rules inserted. The rule base contains 91018 rules. 8676 rules in the queue.
119800 rules inserted. The rule base contains 91139 rules. 8641 rules in the queue.
120000 rules inserted. The rule base contains 91264 rules. 8634 rules in the queue.
120200 rules inserted. The rule base contains 91397 rules. 8638 rules in the queue.
120400 rules inserted. The rule base contains 91540 rules. 8614 rules in the queue.
120600 rules inserted. The rule base contains 91650 rules. 8585 rules in the queue.
120800 rules inserted. The rule base contains 91756 rules. 8610 rules in the queue.
121000 rules inserted. The rule base contains 91918 rules. 8612 rules in the queue.
121200 rules inserted. The rule base contains 92057 rules. 8619 rules in the queue.
121400 rules inserted. The rule base contains 92205 rules. 8639 rules in the queue.
121600 rules inserted. The rule base contains 92350 rules. 8653 rules in the queue.
121800 rules inserted. The rule base contains 92459 rules. 8636 rules in the queue.
122000 rules inserted. The rule base contains 92580 rules. 8614 rules in the queue.
122200 rules inserted. The rule base contains 92738 rules. 8579 rules in the queue.
122400 rules inserted. The rule base contains 92866 rules. 8582 rules in the queue.
122600 rules inserted. The rule base contains 92986 rules. 8612 rules in the queue.
122800 rules inserted. The rule base contains 93109 rules. 8643 rules in the queue.
123000 rules inserted. The rule base contains 93229 rules. 8599 rules in the queue.
123200 rules inserted. The rule base contains 93352 rules. 8556 rules in the queue.
123400 rules inserted. The rule base contains 93443 rules. 8498 rules in the queue.
123600 rules inserted. The rule base contains 93572 rules. 8428 rules in the queue.
123800 rules inserted. The rule base contains 93703 rules. 8380 rules in the queue.
124000 rules inserted. The rule base contains 93680 rules. 8308 rules in the queue.
124200 rules inserted. The rule base contains 93855 rules. 8283 rules in the queue.
124400 rules inserted. The rule base contains 94007 rules. 8267 rules in the queue.
124600 rules inserted. The rule base contains 94158 rules. 8272 rules in the queue.
124800 rules inserted. The rule base contains 94305 rules. 8258 rules in the queue.
125000 rules inserted. The rule base contains 94464 rules. 8239 rules in the queue.
125200 rules inserted. The rule base contains 94664 rules. 8270 rules in the queue.
125400 rules inserted. The rule base contains 94779 rules. 8250 rules in the queue.
125600 rules inserted. The rule base contains 94859 rules. 8230 rules in the queue.
125800 rules inserted. The rule base contains 94928 rules. 8214 rules in the queue.
126000 rules inserted. The rule base contains 94994 rules. 8166 rules in the queue.
126200 rules inserted. The rule base contains 95135 rules. 8155 rules in the queue.
126400 rules inserted. The rule base contains 95270 rules. 8144 rules in the queue.
126600 rules inserted. The rule base contains 95405 rules. 8125 rules in the queue.
126800 rules inserted. The rule base contains 95605 rules. 8156 rules in the queue.
127000 rules inserted. The rule base contains 95777 rules. 8155 rules in the queue.
127200 rules inserted. The rule base contains 95869 rules. 8128 rules in the queue.
127400 rules inserted. The rule base contains 95956 rules. 8100 rules in the queue.
127600 rules inserted. The rule base contains 96039 rules. 8071 rules in the queue.
127800 rules inserted. The rule base contains 96098 rules. 7997 rules in the queue.
128000 rules inserted. The rule base contains 96249 rules. 7994 rules in the queue.
128200 rules inserted. The rule base contains 96381 rules. 7986 rules in the queue.
128400 rules inserted. The rule base contains 96509 rules. 7948 rules in the queue.
128600 rules inserted. The rule base contains 96563 rules. 7909 rules in the queue.
128800 rules inserted. The rule base contains 96645 rules. 7884 rules in the queue.
129000 rules inserted. The rule base contains 96703 rules. 7861 rules in the queue.
129200 rules inserted. The rule base contains 96772 rules. 7841 rules in the queue.
129400 rules inserted. The rule base contains 96833 rules. 7822 rules in the queue.
129600 rules inserted. The rule base contains 96842 rules. 7737 rules in the queue.
129800 rules inserted. The rule base contains 97022 rules. 7714 rules in the queue.
130000 rules inserted. The rule base contains 97204 rules. 7697 rules in the queue.
130200 rules inserted. The rule base contains 97387 rules. 7728 rules in the queue.
130400 rules inserted. The rule base contains 97545 rules. 7759 rules in the queue.
130600 rules inserted. The rule base contains 97712 rules. 7779 rules in the queue.
130800 rules inserted. The rule base contains 97870 rules. 7730 rules in the queue.
131000 rules inserted. The rule base contains 98021 rules. 7715 rules in the queue.
131200 rules inserted. The rule base contains 98180 rules. 7669 rules in the queue.
131400 rules inserted. The rule base contains 98247 rules. 7576 rules in the queue.
131600 rules inserted. The rule base contains 98378 rules. 7530 rules in the queue.
131800 rules inserted. The rule base contains 98539 rules. 7499 rules in the queue.
132000 rules inserted. The rule base contains 98645 rules. 7463 rules in the queue.
132200 rules inserted. The rule base contains 98734 rules. 7407 rules in the queue.
132400 rules inserted. The rule base contains 98867 rules. 7359 rules in the queue.
132600 rules inserted. The rule base contains 99039 rules. 7386 rules in the queue.
132800 rules inserted. The rule base contains 99181 rules. 7389 rules in the queue.
133000 rules inserted. The rule base contains 99278 rules. 7354 rules in the queue.
133200 rules inserted. The rule base contains 99379 rules. 7316 rules in the queue.
133400 rules inserted. The rule base contains 99483 rules. 7277 rules in the queue.
133600 rules inserted. The rule base contains 99603 rules. 7256 rules in the queue.
133800 rules inserted. The rule base contains 99690 rules. 7200 rules in the queue.
134000 rules inserted. The rule base contains 99823 rules. 7177 rules in the queue.
134200 rules inserted. The rule base contains 99997 rules. 7203 rules in the queue.
134400 rules inserted. The rule base contains 100068 rules. 7205 rules in the queue.
134600 rules inserted. The rule base contains 100177 rules. 7183 rules in the queue.
134800 rules inserted. The rule base contains 100303 rules. 7165 rules in the queue.
135000 rules inserted. The rule base contains 100391 rules. 7131 rules in the queue.
135200 rules inserted. The rule base contains 100528 rules. 7134 rules in the queue.
135400 rules inserted. The rule base contains 100659 rules. 7138 rules in the queue.
135600 rules inserted. The rule base contains 100763 rules. 7067 rules in the queue.
135800 rules inserted. The rule base contains 100892 rules. 7042 rules in the queue.
136000 rules inserted. The rule base contains 100985 rules. 7020 rules in the queue.
136200 rules inserted. The rule base contains 101075 rules. 6998 rules in the queue.
136400 rules inserted. The rule base contains 101165 rules. 6954 rules in the queue.
136600 rules inserted. The rule base contains 101254 rules. 6906 rules in the queue.
136800 rules inserted. The rule base contains 101316 rules. 6864 rules in the queue.
137000 rules inserted. The rule base contains 101500 rules. 6892 rules in the queue.
137200 rules inserted. The rule base contains 101685 rules. 6888 rules in the queue.
137400 rules inserted. The rule base contains 101870 rules. 6921 rules in the queue.
137600 rules inserted. The rule base contains 102025 rules. 6923 rules in the queue.
137800 rules inserted. The rule base contains 102177 rules. 6906 rules in the queue.
138000 rules inserted. The rule base contains 102333 rules. 6812 rules in the queue.
138200 rules inserted. The rule base contains 102509 rules. 6760 rules in the queue.
138400 rules inserted. The rule base contains 102628 rules. 6703 rules in the queue.
138600 rules inserted. The rule base contains 102728 rules. 6650 rules in the queue.
138800 rules inserted. The rule base contains 102886 rules. 6595 rules in the queue.
139000 rules inserted. The rule base contains 103040 rules. 6597 rules in the queue.
139200 rules inserted. The rule base contains 103179 rules. 6575 rules in the queue.
139400 rules inserted. The rule base contains 103333 rules. 6598 rules in the queue.
139600 rules inserted. The rule base contains 103472 rules. 6620 rules in the queue.
139800 rules inserted. The rule base contains 103666 rules. 6640 rules in the queue.
140000 rules inserted. The rule base contains 103857 rules. 6608 rules in the queue.
140200 rules inserted. The rule base contains 103978 rules. 6607 rules in the queue.
140400 rules inserted. The rule base contains 104134 rules. 6561 rules in the queue.
140600 rules inserted. The rule base contains 104278 rules. 6538 rules in the queue.
140800 rules inserted. The rule base contains 104425 rules. 6536 rules in the queue.
141000 rules inserted. The rule base contains 104578 rules. 6559 rules in the queue.
141200 rules inserted. The rule base contains 104646 rules. 6574 rules in the queue.
141400 rules inserted. The rule base contains 104840 rules. 6587 rules in the queue.
141600 rules inserted. The rule base contains 105029 rules. 6580 rules in the queue.
141800 rules inserted. The rule base contains 105219 rules. 6586 rules in the queue.
142000 rules inserted. The rule base contains 105317 rules. 6573 rules in the queue.
142200 rules inserted. The rule base contains 105459 rules. 6534 rules in the queue.
142400 rules inserted. The rule base contains 105607 rules. 6467 rules in the queue.
142600 rules inserted. The rule base contains 105800 rules. 6447 rules in the queue.
142800 rules inserted. The rule base contains 105992 rules. 6438 rules in the queue.
143000 rules inserted. The rule base contains 106178 rules. 6440 rules in the queue.
143200 rules inserted. The rule base contains 106364 rules. 6416 rules in the queue.
143400 rules inserted. The rule base contains 106551 rules. 6393 rules in the queue.
143600 rules inserted. The rule base contains 106665 rules. 6366 rules in the queue.
143800 rules inserted. The rule base contains 106843 rules. 6294 rules in the queue.
144000 rules inserted. The rule base contains 107020 rules. 6241 rules in the queue.
144200 rules inserted. The rule base contains 107196 rules. 6177 rules in the queue.
144400 rules inserted. The rule base contains 107372 rules. 6140 rules in the queue.
144600 rules inserted. The rule base contains 107541 rules. 6097 rules in the queue.
144800 rules inserted. The rule base contains 107681 rules. 6069 rules in the queue.
145000 rules inserted. The rule base contains 107755 rules. 6193 rules in the queue.
145200 rules inserted. The rule base contains 107900 rules. 6130 rules in the queue.
145400 rules inserted. The rule base contains 108070 rules. 6111 rules in the queue.
145600 rules inserted. The rule base contains 108242 rules. 6097 rules in the queue.
145800 rules inserted. The rule base contains 108342 rules. 6105 rules in the queue.
146000 rules inserted. The rule base contains 108463 rules. 6125 rules in the queue.
146200 rules inserted. The rule base contains 108648 rules. 6110 rules in the queue.
146400 rules inserted. The rule base contains 108821 rules. 6052 rules in the queue.
146600 rules inserted. The rule base contains 108940 rules. 6008 rules in the queue.
146800 rules inserted. The rule base contains 109087 rules. 5971 rules in the queue.
147000 rules inserted. The rule base contains 109257 rules. 5942 rules in the queue.
147200 rules inserted. The rule base contains 109359 rules. 5950 rules in the queue.
147400 rules inserted. The rule base contains 109471 rules. 5966 rules in the queue.
147600 rules inserted. The rule base contains 109565 rules. 5964 rules in the queue.
147800 rules inserted. The rule base contains 109751 rules. 5926 rules in the queue.
148000 rules inserted. The rule base contains 109940 rules. 5934 rules in the queue.
148200 rules inserted. The rule base contains 109816 rules. 5901 rules in the queue.
148400 rules inserted. The rule base contains 109941 rules. 5810 rules in the queue.
148600 rules inserted. The rule base contains 110118 rules. 5767 rules in the queue.
148800 rules inserted. The rule base contains 110304 rules. 5707 rules in the queue.
149000 rules inserted. The rule base contains 110494 rules. 5679 rules in the queue.
149200 rules inserted. The rule base contains 110675 rules. 5700 rules in the queue.
149400 rules inserted. The rule base contains 110817 rules. 5610 rules in the queue.
149600 rules inserted. The rule base contains 110953 rules. 5490 rules in the queue.
149800 rules inserted. The rule base contains 110570 rules. 5404 rules in the queue.
150000 rules inserted. The rule base contains 110752 rules. 5320 rules in the queue.
150200 rules inserted. The rule base contains 110941 rules. 5273 rules in the queue.
150400 rules inserted. The rule base contains 111128 rules. 5201 rules in the queue.
150600 rules inserted. The rule base contains 111328 rules. 5185 rules in the queue.
150800 rules inserted. The rule base contains 111323 rules. 5094 rules in the queue.
151000 rules inserted. The rule base contains 111390 rules. 5942 rules in the queue.
151200 rules inserted. The rule base contains 111448 rules. 5920 rules in the queue.
151400 rules inserted. The rule base contains 111459 rules. 5921 rules in the queue.
151600 rules inserted. The rule base contains 111548 rules. 5921 rules in the queue.
151800 rules inserted. The rule base contains 111642 rules. 5919 rules in the queue.
152000 rules inserted. The rule base contains 111819 rules. 5856 rules in the queue.
152200 rules inserted. The rule base contains 111999 rules. 5828 rules in the queue.
152400 rules inserted. The rule base contains 112047 rules. 6207 rules in the queue.
152600 rules inserted. The rule base contains 112095 rules. 6203 rules in the queue.
152800 rules inserted. The rule base contains 112155 rules. 6203 rules in the queue.
153000 rules inserted. The rule base contains 112241 rules. 6203 rules in the queue.
153200 rules inserted. The rule base contains 112317 rules. 6199 rules in the queue.
153400 rules inserted. The rule base contains 112499 rules. 6141 rules in the queue.
153600 rules inserted. The rule base contains 112685 rules. 6070 rules in the queue.
153800 rules inserted. The rule base contains 112850 rules. 6028 rules in the queue.
154000 rules inserted. The rule base contains 112831 rules. 5993 rules in the queue.
154200 rules inserted. The rule base contains 112930 rules. 5938 rules in the queue.
154400 rules inserted. The rule base contains 113111 rules. 5890 rules in the queue.
154600 rules inserted. The rule base contains 113298 rules. 5834 rules in the queue.
154800 rules inserted. The rule base contains 113474 rules. 5779 rules in the queue.
155000 rules inserted. The rule base contains 113403 rules. 5909 rules in the queue.
155200 rules inserted. The rule base contains 113459 rules. 5871 rules in the queue.
155400 rules inserted. The rule base contains 113491 rules. 5841 rules in the queue.
155600 rules inserted. The rule base contains 113491 rules. 5841 rules in the queue.
155800 rules inserted. The rule base contains 113480 rules. 5790 rules in the queue.
156000 rules inserted. The rule base contains 113666 rules. 5808 rules in the queue.
156200 rules inserted. The rule base contains 113830 rules. 5830 rules in the queue.
156400 rules inserted. The rule base contains 114014 rules. 5806 rules in the queue.
156600 rules inserted. The rule base contains 114174 rules. 5806 rules in the queue.
156800 rules inserted. The rule base contains 114242 rules. 5760 rules in the queue.
157000 rules inserted. The rule base contains 114258 rules. 5757 rules in the queue.
157200 rules inserted. The rule base contains 114299 rules. 5782 rules in the queue.
157400 rules inserted. The rule base contains 114447 rules. 5842 rules in the queue.
157600 rules inserted. The rule base contains 114574 rules. 5859 rules in the queue.
157800 rules inserted. The rule base contains 114758 rules. 5801 rules in the queue.
158000 rules inserted. The rule base contains 114914 rules. 5752 rules in the queue.
158200 rules inserted. The rule base contains 115110 rules. 5725 rules in the queue.
158400 rules inserted. The rule base contains 115272 rules. 5707 rules in the queue.
158600 rules inserted. The rule base contains 115300 rules. 5687 rules in the queue.
158800 rules inserted. The rule base contains 115359 rules. 5719 rules in the queue.
159000 rules inserted. The rule base contains 115507 rules. 5779 rules in the queue.
159200 rules inserted. The rule base contains 115631 rules. 5775 rules in the queue.
159400 rules inserted. The rule base contains 115823 rules. 5645 rules in the queue.
159600 rules inserted. The rule base contains 116013 rules. 5587 rules in the queue.
159800 rules inserted. The rule base contains 111583 rules. 6148 rules in the queue.
160000 rules inserted. The rule base contains 111627 rules. 6129 rules in the queue.
160200 rules inserted. The rule base contains 111819 rules. 6078 rules in the queue.
160400 rules inserted. The rule base contains 112010 rules. 6016 rules in the queue.
160600 rules inserted. The rule base contains 105553 rules. 5860 rules in the queue.
160800 rules inserted. The rule base contains 104768 rules. 7360 rules in the queue.
161000 rules inserted. The rule base contains 104783 rules. 7351 rules in the queue.
161200 rules inserted. The rule base contains 104785 rules. 7352 rules in the queue.
161400 rules inserted. The rule base contains 104787 rules. 7367 rules in the queue.
161600 rules inserted. The rule base contains 104889 rules. 7391 rules in the queue.
161800 rules inserted. The rule base contains 104909 rules. 7385 rules in the queue.
162000 rules inserted. The rule base contains 104925 rules. 7459 rules in the queue.
162200 rules inserted. The rule base contains 104925 rules. 7459 rules in the queue.
162400 rules inserted. The rule base contains 104937 rules. 7540 rules in the queue.
162600 rules inserted. The rule base contains 104963 rules. 7586 rules in the queue.
162800 rules inserted. The rule base contains 105018 rules. 7616 rules in the queue.
163000 rules inserted. The rule base contains 105188 rules. 7669 rules in the queue.
163200 rules inserted. The rule base contains 105355 rules. 7710 rules in the queue.
163400 rules inserted. The rule base contains 105487 rules. 7718 rules in the queue.
163600 rules inserted. The rule base contains 105534 rules. 7734 rules in the queue.
163800 rules inserted. The rule base contains 105566 rules. 7740 rules in the queue.
164000 rules inserted. The rule base contains 105562 rules. 7738 rules in the queue.
164200 rules inserted. The rule base contains 105602 rules. 7822 rules in the queue.
164400 rules inserted. The rule base contains 105722 rules. 7866 rules in the queue.
164600 rules inserted. The rule base contains 105892 rules. 7915 rules in the queue.
164800 rules inserted. The rule base contains 106057 rules. 7967 rules in the queue.
165000 rules inserted. The rule base contains 106120 rules. 7937 rules in the queue.
165200 rules inserted. The rule base contains 106065 rules. 7877 rules in the queue.
165400 rules inserted. The rule base contains 106196 rules. 7875 rules in the queue.
165600 rules inserted. The rule base contains 106326 rules. 7875 rules in the queue.
165800 rules inserted. The rule base contains 105703 rules. 7782 rules in the queue.
166000 rules inserted. The rule base contains 105719 rules. 7658 rules in the queue.
166200 rules inserted. The rule base contains 105729 rules. 7609 rules in the queue.
166400 rules inserted. The rule base contains 105792 rules. 7573 rules in the queue.
166600 rules inserted. The rule base contains 105974 rules. 7577 rules in the queue.
166800 rules inserted. The rule base contains 106174 rules. 7549 rules in the queue.
167000 rules inserted. The rule base contains 106352 rules. 7592 rules in the queue.
167200 rules inserted. The rule base contains 106481 rules. 7608 rules in the queue.
167400 rules inserted. The rule base contains 106665 rules. 7610 rules in the queue.
167600 rules inserted. The rule base contains 106865 rules. 7600 rules in the queue.
167800 rules inserted. The rule base contains 107063 rules. 7578 rules in the queue.
168000 rules inserted. The rule base contains 105910 rules. 7579 rules in the queue.
168200 rules inserted. The rule base contains 105915 rules. 7577 rules in the queue.
168400 rules inserted. The rule base contains 105916 rules. 7435 rules in the queue.
168600 rules inserted. The rule base contains 105930 rules. 7127 rules in the queue.
168800 rules inserted. The rule base contains 106098 rules. 7133 rules in the queue.
169000 rules inserted. The rule base contains 106121 rules. 7121 rules in the queue.
169200 rules inserted. The rule base contains 106167 rules. 7122 rules in the queue.
169400 rules inserted. The rule base contains 106204 rules. 7137 rules in the queue.
169600 rules inserted. The rule base contains 106194 rules. 7095 rules in the queue.
169800 rules inserted. The rule base contains 106198 rules. 7039 rules in the queue.
170000 rules inserted. The rule base contains 106202 rules. 7048 rules in the queue.
170200 rules inserted. The rule base contains 106271 rules. 7027 rules in the queue.
170400 rules inserted. The rule base contains 106422 rules. 7028 rules in the queue.
170600 rules inserted. The rule base contains 106568 rules. 7012 rules in the queue.
170800 rules inserted. The rule base contains 106686 rules. 7006 rules in the queue.
171000 rules inserted. The rule base contains 106728 rules. 6996 rules in the queue.
171200 rules inserted. The rule base contains 106786 rules. 6996 rules in the queue.
171400 rules inserted. The rule base contains 106792 rules. 6954 rules in the queue.
171600 rules inserted. The rule base contains 106796 rules. 6967 rules in the queue.
171800 rules inserted. The rule base contains 106869 rules. 6946 rules in the queue.
172000 rules inserted. The rule base contains 107018 rules. 6946 rules in the queue.
172200 rules inserted. The rule base contains 107164 rules. 6932 rules in the queue.
172400 rules inserted. The rule base contains 107280 rules. 6925 rules in the queue.
172600 rules inserted. The rule base contains 107251 rules. 6936 rules in the queue.
172800 rules inserted. The rule base contains 107251 rules. 6936 rules in the queue.
173000 rules inserted. The rule base contains 107208 rules. 6924 rules in the queue.
173200 rules inserted. The rule base contains 107212 rules. 6917 rules in the queue.
173400 rules inserted. The rule base contains 107173 rules. 6970 rules in the queue.
173600 rules inserted. The rule base contains 107278 rules. 6969 rules in the queue.
173800 rules inserted. The rule base contains 107311 rules. 6958 rules in the queue.
174000 rules inserted. The rule base contains 107343 rules. 6948 rules in the queue.
174200 rules inserted. The rule base contains 107410 rules. 6925 rules in the queue.
174400 rules inserted. The rule base contains 107410 rules. 6925 rules in the queue.
174600 rules inserted. The rule base contains 107358 rules. 7005 rules in the queue.
174800 rules inserted. The rule base contains 107358 rules. 7005 rules in the queue.
175000 rules inserted. The rule base contains 107320 rules. 7078 rules in the queue.
175200 rules inserted. The rule base contains 107309 rules. 7075 rules in the queue.
175400 rules inserted. The rule base contains 107310 rules. 7076 rules in the queue.
175600 rules inserted. The rule base contains 107312 rules. 7076 rules in the queue.
175800 rules inserted. The rule base contains 107350 rules. 7060 rules in the queue.
176000 rules inserted. The rule base contains 107340 rules. 7038 rules in the queue.
176200 rules inserted. The rule base contains 107338 rules. 7052 rules in the queue.
176400 rules inserted. The rule base contains 107352 rules. 7040 rules in the queue.
176600 rules inserted. The rule base contains 107322 rules. 7031 rules in the queue.
176800 rules inserted. The rule base contains 107351 rules. 7029 rules in the queue.
177000 rules inserted. The rule base contains 107368 rules. 6992 rules in the queue.
177200 rules inserted. The rule base contains 107444 rules. 6961 rules in the queue.
177400 rules inserted. The rule base contains 107551 rules. 6929 rules in the queue.
177600 rules inserted. The rule base contains 107674 rules. 6907 rules in the queue.
177800 rules inserted. The rule base contains 107696 rules. 6878 rules in the queue.
178000 rules inserted. The rule base contains 107724 rules. 6884 rules in the queue.
178200 rules inserted. The rule base contains 107706 rules. 6870 rules in the queue.
178400 rules inserted. The rule base contains 107731 rules. 6862 rules in the queue.
178600 rules inserted. The rule base contains 107794 rules. 6843 rules in the queue.
178800 rules inserted. The rule base contains 107911 rules. 6808 rules in the queue.
179000 rules inserted. The rule base contains 108021 rules. 6786 rules in the queue.
179200 rules inserted. The rule base contains 108053 rules. 6788 rules in the queue.
179400 rules inserted. The rule base contains 108122 rules. 6787 rules in the queue.
179600 rules inserted. The rule base contains 99303 rules. 6723 rules in the queue.
179800 rules inserted. The rule base contains 99403 rules. 6749 rules in the queue.
180000 rules inserted. The rule base contains 99407 rules. 6749 rules in the queue.
180200 rules inserted. The rule base contains 99537 rules. 6743 rules in the queue.
180400 rules inserted. The rule base contains 99595 rules. 6720 rules in the queue.
180600 rules inserted. The rule base contains 99604 rules. 6715 rules in the queue.
180800 rules inserted. The rule base contains 99661 rules. 6687 rules in the queue.
181000 rules inserted. The rule base contains 99677 rules. 6679 rules in the queue.
181200 rules inserted. The rule base contains 99763 rules. 6765 rules in the queue.
181400 rules inserted. The rule base contains 99763 rules. 6765 rules in the queue.
181600 rules inserted. The rule base contains 99767 rules. 6757 rules in the queue.
181800 rules inserted. The rule base contains 82039 rules. 6734 rules in the queue.
182000 rules inserted. The rule base contains 82178 rules. 6710 rules in the queue.
182200 rules inserted. The rule base contains 82308 rules. 6670 rules in the queue.
182400 rules inserted. The rule base contains 82474 rules. 6668 rules in the queue.
182600 rules inserted. The rule base contains 82479 rules. 6662 rules in the queue.
182800 rules inserted. The rule base contains 82505 rules. 6642 rules in the queue.
183000 rules inserted. The rule base contains 82511 rules. 6632 rules in the queue.
183200 rules inserted. The rule base contains 82504 rules. 6609 rules in the queue.
183400 rules inserted. The rule base contains 82618 rules. 6515 rules in the queue.
183600 rules inserted. The rule base contains 82745 rules. 6388 rules in the queue.
183800 rules inserted. The rule base contains 82820 rules. 6339 rules in the queue.
184000 rules inserted. The rule base contains 82841 rules. 6332 rules in the queue.
184200 rules inserted. The rule base contains 82897 rules. 6323 rules in the queue.
184400 rules inserted. The rule base contains 82927 rules. 6317 rules in the queue.
184600 rules inserted. The rule base contains 82908 rules. 6302 rules in the queue.
184800 rules inserted. The rule base contains 82995 rules. 6236 rules in the queue.
185000 rules inserted. The rule base contains 83096 rules. 6140 rules in the queue.
185200 rules inserted. The rule base contains 83135 rules. 6130 rules in the queue.
185400 rules inserted. The rule base contains 83173 rules. 6121 rules in the queue.
185600 rules inserted. The rule base contains 83197 rules. 6120 rules in the queue.
185800 rules inserted. The rule base contains 83197 rules. 6107 rules in the queue.
186000 rules inserted. The rule base contains 82282 rules. 6062 rules in the queue.
186200 rules inserted. The rule base contains 82361 rules. 5978 rules in the queue.
186400 rules inserted. The rule base contains 82363 rules. 5975 rules in the queue.
186600 rules inserted. The rule base contains 82381 rules. 5982 rules in the queue.
186800 rules inserted. The rule base contains 82333 rules. 5931 rules in the queue.
187000 rules inserted. The rule base contains 82303 rules. 5907 rules in the queue.
187200 rules inserted. The rule base contains 82277 rules. 5857 rules in the queue.
187400 rules inserted. The rule base contains 82285 rules. 5855 rules in the queue.
187600 rules inserted. The rule base contains 82291 rules. 5849 rules in the queue.
187800 rules inserted. The rule base contains 82291 rules. 5849 rules in the queue.
188000 rules inserted. The rule base contains 82325 rules. 5825 rules in the queue.
188200 rules inserted. The rule base contains 80593 rules. 5798 rules in the queue.
188400 rules inserted. The rule base contains 80661 rules. 5651 rules in the queue.
188600 rules inserted. The rule base contains 80786 rules. 5493 rules in the queue.
188800 rules inserted. The rule base contains 80850 rules. 5376 rules in the queue.
189000 rules inserted. The rule base contains 80959 rules. 5276 rules in the queue.
189200 rules inserted. The rule base contains 81028 rules. 5201 rules in the queue.
189400 rules inserted. The rule base contains 81144 rules. 5081 rules in the queue.
189600 rules inserted. The rule base contains 81193 rules. 5025 rules in the queue.
189800 rules inserted. The rule base contains 81244 rules. 5019 rules in the queue.
190000 rules inserted. The rule base contains 81301 rules. 5030 rules in the queue.
190200 rules inserted. The rule base contains 81354 rules. 5030 rules in the queue.
190400 rules inserted. The rule base contains 81436 rules. 4986 rules in the queue.
190600 rules inserted. The rule base contains 81513 rules. 4979 rules in the queue.
190800 rules inserted. The rule base contains 81591 rules. 4919 rules in the queue.
191000 rules inserted. The rule base contains 81637 rules. 4931 rules in the queue.
191200 rules inserted. The rule base contains 81691 rules. 4938 rules in the queue.
191400 rules inserted. The rule base contains 81805 rules. 4910 rules in the queue.
191600 rules inserted. The rule base contains 81788 rules. 4885 rules in the queue.
191800 rules inserted. The rule base contains 81735 rules. 4858 rules in the queue.
192000 rules inserted. The rule base contains 81809 rules. 4843 rules in the queue.
192200 rules inserted. The rule base contains 81859 rules. 4799 rules in the queue.
192400 rules inserted. The rule base contains 81883 rules. 4792 rules in the queue.
192600 rules inserted. The rule base contains 81780 rules. 4805 rules in the queue.
192800 rules inserted. The rule base contains 81802 rules. 4784 rules in the queue.
193000 rules inserted. The rule base contains 81833 rules. 4790 rules in the queue.
193200 rules inserted. The rule base contains 81817 rules. 4770 rules in the queue.
193400 rules inserted. The rule base contains 81748 rules. 4770 rules in the queue.
193600 rules inserted. The rule base contains 81777 rules. 4765 rules in the queue.
193800 rules inserted. The rule base contains 81784 rules. 4762 rules in the queue.
194000 rules inserted. The rule base contains 81867 rules. 4705 rules in the queue.
194200 rules inserted. The rule base contains 81911 rules. 4638 rules in the queue.
194400 rules inserted. The rule base contains 81960 rules. 4580 rules in the queue.
194600 rules inserted. The rule base contains 82014 rules. 4664 rules in the queue.
194800 rules inserted. The rule base contains 82120 rules. 4655 rules in the queue.
195000 rules inserted. The rule base contains 82234 rules. 4654 rules in the queue.
195200 rules inserted. The rule base contains 82420 rules. 4509 rules in the queue.
195400 rules inserted. The rule base contains 82533 rules. 4371 rules in the queue.
195600 rules inserted. The rule base contains 82591 rules. 4434 rules in the queue.
195800 rules inserted. The rule base contains 82698 rules. 4424 rules in the queue.
196000 rules inserted. The rule base contains 82809 rules. 4426 rules in the queue.
196200 rules inserted. The rule base contains 82981 rules. 4287 rules in the queue.
196400 rules inserted. The rule base contains 82938 rules. 4247 rules in the queue.
196600 rules inserted. The rule base contains 82782 rules. 4291 rules in the queue.
196800 rules inserted. The rule base contains 82941 rules. 4136 rules in the queue.
197000 rules inserted. The rule base contains 82969 rules. 4074 rules in the queue.
197200 rules inserted. The rule base contains 82846 rules. 4035 rules in the queue.
197400 rules inserted. The rule base contains 82978 rules. 3884 rules in the queue.
197600 rules inserted. The rule base contains 83029 rules. 3772 rules in the queue.
197800 rules inserted. The rule base contains 82998 rules. 3710 rules in the queue.
198000 rules inserted. The rule base contains 83126 rules. 3584 rules in the queue.
198200 rules inserted. The rule base contains 83170 rules. 3479 rules in the queue.
198400 rules inserted. The rule base contains 82913 rules. 3443 rules in the queue.
198600 rules inserted. The rule base contains 82883 rules. 3381 rules in the queue.
198800 rules inserted. The rule base contains 82928 rules. 3322 rules in the queue.
199000 rules inserted. The rule base contains 83050 rules. 3316 rules in the queue.
199200 rules inserted. The rule base contains 83177 rules. 3309 rules in the queue.
199400 rules inserted. The rule base contains 83330 rules. 3295 rules in the queue.
199600 rules inserted. The rule base contains 83355 rules. 3240 rules in the queue.
199800 rules inserted. The rule base contains 83479 rules. 3234 rules in the queue.
200000 rules inserted. The rule base contains 83606 rules. 3226 rules in the queue.
200200 rules inserted. The rule base contains 83755 rules. 3211 rules in the queue.
200400 rules inserted. The rule base contains 83847 rules. 3067 rules in the queue.
200600 rules inserted. The rule base contains 83825 rules. 2962 rules in the queue.
200800 rules inserted. The rule base contains 83875 rules. 2974 rules in the queue.
201000 rules inserted. The rule base contains 84009 rules. 2807 rules in the queue.
201200 rules inserted. The rule base contains 84043 rules. 2756 rules in the queue.
201400 rules inserted. The rule base contains 84187 rules. 2594 rules in the queue.
201600 rules inserted. The rule base contains 84247 rules. 2554 rules in the queue.
201800 rules inserted. The rule base contains 84137 rules. 2638 rules in the queue.
202000 rules inserted. The rule base contains 84194 rules. 2573 rules in the queue.
202200 rules inserted. The rule base contains 84324 rules. 2558 rules in the queue.
202400 rules inserted. The rule base contains 84421 rules. 2547 rules in the queue.
202600 rules inserted. The rule base contains 84539 rules. 2564 rules in the queue.
202800 rules inserted. The rule base contains 84627 rules. 2539 rules in the queue.
203000 rules inserted. The rule base contains 84734 rules. 2531 rules in the queue.
203200 rules inserted. The rule base contains 84848 rules. 2524 rules in the queue.
203400 rules inserted. The rule base contains 84791 rules. 2515 rules in the queue.
203600 rules inserted. The rule base contains 84880 rules. 2506 rules in the queue.
203800 rules inserted. The rule base contains 85005 rules. 2479 rules in the queue.
204000 rules inserted. The rule base contains 85011 rules. 2409 rules in the queue.
204200 rules inserted. The rule base contains 85052 rules. 2350 rules in the queue.
204400 rules inserted. The rule base contains 85178 rules. 2260 rules in the queue.
204600 rules inserted. The rule base contains 85295 rules. 2183 rules in the queue.
204800 rules inserted. The rule base contains 85410 rules. 2125 rules in the queue.
205000 rules inserted. The rule base contains 85527 rules. 2072 rules in the queue.
205200 rules inserted. The rule base contains 85631 rules. 2058 rules in the queue.
205400 rules inserted. The rule base contains 85751 rules. 2001 rules in the queue.
205600 rules inserted. The rule base contains 85868 rules. 1942 rules in the queue.
205800 rules inserted. The rule base contains 85482 rules. 1909 rules in the queue.
206000 rules inserted. The rule base contains 85299 rules. 1917 rules in the queue.
206200 rules inserted. The rule base contains 85381 rules. 1866 rules in the queue.
206400 rules inserted. The rule base contains 84969 rules. 1792 rules in the queue.
206600 rules inserted. The rule base contains 84853 rules. 1804 rules in the queue.
206800 rules inserted. The rule base contains 84991 rules. 1735 rules in the queue.
207000 rules inserted. The rule base contains 85122 rules. 1703 rules in the queue.
207200 rules inserted. The rule base contains 85226 rules. 1697 rules in the queue.
207400 rules inserted. The rule base contains 85372 rules. 1633 rules in the queue.
207600 rules inserted. The rule base contains 85123 rules. 1628 rules in the queue.
207800 rules inserted. The rule base contains 84831 rules. 1657 rules in the queue.
208000 rules inserted. The rule base contains 84977 rules. 1636 rules in the queue.
208200 rules inserted. The rule base contains 83982 rules. 1556 rules in the queue.
208400 rules inserted. The rule base contains 84158 rules. 1479 rules in the queue.
208600 rules inserted. The rule base contains 84306 rules. 1422 rules in the queue.
208800 rules inserted. The rule base contains 84479 rules. 1367 rules in the queue.
209000 rules inserted. The rule base contains 84647 rules. 1261 rules in the queue.
209200 rules inserted. The rule base contains 84693 rules. 1328 rules in the queue.
209400 rules inserted. The rule base contains 84842 rules. 1374 rules in the queue.
209600 rules inserted. The rule base contains 84961 rules. 1414 rules in the queue.
209800 rules inserted. The rule base contains 85012 rules. 1427 rules in the queue.
210000 rules inserted. The rule base contains 85146 rules. 1331 rules in the queue.
210200 rules inserted. The rule base contains 85278 rules. 1273 rules in the queue.
210400 rules inserted. The rule base contains 85371 rules. 1216 rules in the queue.
210600 rules inserted. The rule base contains 85451 rules. 1167 rules in the queue.
210800 rules inserted. The rule base contains 85617 rules. 1151 rules in the queue.
211000 rules inserted. The rule base contains 85751 rules. 1174 rules in the queue.
211200 rules inserted. The rule base contains 85891 rules. 1242 rules in the queue.
211400 rules inserted. The rule base contains 85969 rules. 1207 rules in the queue.
211600 rules inserted. The rule base contains 86050 rules. 1130 rules in the queue.
211800 rules inserted. The rule base contains 86200 rules. 1069 rules in the queue.
212000 rules inserted. The rule base contains 86302 rules. 1041 rules in the queue.
212200 rules inserted. The rule base contains 86482 rules. 958 rules in the queue.
212400 rules inserted. The rule base contains 86591 rules. 972 rules in the queue.
212600 rules inserted. The rule base contains 86689 rules. 982 rules in the queue.
212800 rules inserted. The rule base contains 86725 rules. 1063 rules in the queue.
213000 rules inserted. The rule base contains 86833 rules. 1076 rules in the queue.
213200 rules inserted. The rule base contains 86875 rules. 1076 rules in the queue.
213400 rules inserted. The rule base contains 86512 rules. 1109 rules in the queue.
213600 rules inserted. The rule base contains 86109 rules. 1146 rules in the queue.
213800 rules inserted. The rule base contains 86163 rules. 1245 rules in the queue.
214000 rules inserted. The rule base contains 86281 rules. 1279 rules in the queue.
214200 rules inserted. The rule base contains 86427 rules. 1375 rules in the queue.
214400 rules inserted. The rule base contains 86471 rules. 1320 rules in the queue.
214600 rules inserted. The rule base contains 86536 rules. 1275 rules in the queue.
214800 rules inserted. The rule base contains 86586 rules. 1344 rules in the queue.
215000 rules inserted. The rule base contains 86672 rules. 1373 rules in the queue.
215200 rules inserted. The rule base contains 86746 rules. 1378 rules in the queue.
215400 rules inserted. The rule base contains 86944 rules. 1471 rules in the queue.
215600 rules inserted. The rule base contains 81674 rules. 1477 rules in the queue.
215800 rules inserted. The rule base contains 76370 rules. 1510 rules in the queue.
216000 rules inserted. The rule base contains 76428 rules. 1555 rules in the queue.
216200 rules inserted. The rule base contains 76475 rules. 1573 rules in the queue.
216400 rules inserted. The rule base contains 76583 rules. 1570 rules in the queue.
216600 rules inserted. The rule base contains 76700 rules. 1583 rules in the queue.
216800 rules inserted. The rule base contains 76889 rules. 1646 rules in the queue.
217000 rules inserted. The rule base contains 76801 rules. 1516 rules in the queue.
217200 rules inserted. The rule base contains 76811 rules. 1712 rules in the queue.
217400 rules inserted. The rule base contains 76874 rules. 1734 rules in the queue.
217600 rules inserted. The rule base contains 76978 rules. 1752 rules in the queue.
217800 rules inserted. The rule base contains 77094 rules. 1757 rules in the queue.
218000 rules inserted. The rule base contains 77262 rules. 1808 rules in the queue.
218200 rules inserted. The rule base contains 77462 rules. 1808 rules in the queue.
218400 rules inserted. The rule base contains 77608 rules. 1785 rules in the queue.
218600 rules inserted. The rule base contains 77661 rules. 1779 rules in the queue.
218800 rules inserted. The rule base contains 77677 rules. 1852 rules in the queue.
219000 rules inserted. The rule base contains 77702 rules. 1793 rules in the queue.
219200 rules inserted. The rule base contains 77759 rules. 1758 rules in the queue.
219400 rules inserted. The rule base contains 77824 rules. 1776 rules in the queue.
219600 rules inserted. The rule base contains 77943 rules. 1904 rules in the queue.
219800 rules inserted. The rule base contains 78114 rules. 1930 rules in the queue.
220000 rules inserted. The rule base contains 78248 rules. 1942 rules in the queue.
220200 rules inserted. The rule base contains 78292 rules. 1957 rules in the queue.
220400 rules inserted. The rule base contains 78243 rules. 2002 rules in the queue.
220600 rules inserted. The rule base contains 78206 rules. 1952 rules in the queue.
220800 rules inserted. The rule base contains 78262 rules. 1892 rules in the queue.
221000 rules inserted. The rule base contains 78384 rules. 1849 rules in the queue.
221200 rules inserted. The rule base contains 78278 rules. 1800 rules in the queue.
221400 rules inserted. The rule base contains 78284 rules. 1688 rules in the queue.
221600 rules inserted. The rule base contains 78371 rules. 1658 rules in the queue.
221800 rules inserted. The rule base contains 78385 rules. 1656 rules in the queue.
222000 rules inserted. The rule base contains 78393 rules. 1744 rules in the queue.
222200 rules inserted. The rule base contains 78487 rules. 1713 rules in the queue.
222400 rules inserted. The rule base contains 78627 rules. 1689 rules in the queue.
222600 rules inserted. The rule base contains 78705 rules. 1725 rules in the queue.
222800 rules inserted. The rule base contains 78840 rules. 1695 rules in the queue.
223000 rules inserted. The rule base contains 78968 rules. 1690 rules in the queue.
223200 rules inserted. The rule base contains 79043 rules. 1687 rules in the queue.
223400 rules inserted. The rule base contains 79041 rules. 1756 rules in the queue.
223600 rules inserted. The rule base contains 79073 rules. 1806 rules in the queue.
223800 rules inserted. The rule base contains 79190 rules. 1704 rules in the queue.
224000 rules inserted. The rule base contains 79332 rules. 1702 rules in the queue.
224200 rules inserted. The rule base contains 79467 rules. 1740 rules in the queue.
224400 rules inserted. The rule base contains 79585 rules. 1764 rules in the queue.
224600 rules inserted. The rule base contains 79651 rules. 1798 rules in the queue.
224800 rules inserted. The rule base contains 79705 rules. 1828 rules in the queue.
225000 rules inserted. The rule base contains 79746 rules. 1870 rules in the queue.
225200 rules inserted. The rule base contains 79761 rules. 1891 rules in the queue.
225400 rules inserted. The rule base contains 79890 rules. 1830 rules in the queue.
225600 rules inserted. The rule base contains 80032 rules. 1868 rules in the queue.
225800 rules inserted. The rule base contains 80116 rules. 1862 rules in the queue.
226000 rules inserted. The rule base contains 80251 rules. 1892 rules in the queue.
226200 rules inserted. The rule base contains 80302 rules. 1922 rules in the queue.
226400 rules inserted. The rule base contains 80366 rules. 1950 rules in the queue.
226600 rules inserted. The rule base contains 80443 rules. 1990 rules in the queue.
226800 rules inserted. The rule base contains 80453 rules. 2032 rules in the queue.
227000 rules inserted. The rule base contains 80483 rules. 2060 rules in the queue.
227200 rules inserted. The rule base contains 80624 rules. 2061 rules in the queue.
227400 rules inserted. The rule base contains 80747 rules. 2079 rules in the queue.
227600 rules inserted. The rule base contains 80884 rules. 2092 rules in the queue.
227800 rules inserted. The rule base contains 81000 rules. 2139 rules in the queue.
228000 rules inserted. The rule base contains 81105 rules. 2192 rules in the queue.
228200 rules inserted. The rule base contains 81149 rules. 2257 rules in the queue.
228400 rules inserted. The rule base contains 81163 rules. 2307 rules in the queue.
228600 rules inserted. The rule base contains 81202 rules. 2347 rules in the queue.
228800 rules inserted. The rule base contains 81272 rules. 2387 rules in the queue.
229000 rules inserted. The rule base contains 81276 rules. 2422 rules in the queue.
229200 rules inserted. The rule base contains 81410 rules. 2449 rules in the queue.
229400 rules inserted. The rule base contains 81558 rules. 2488 rules in the queue.
229600 rules inserted. The rule base contains 81682 rules. 2523 rules in the queue.
229800 rules inserted. The rule base contains 81811 rules. 2551 rules in the queue.
230000 rules inserted. The rule base contains 81929 rules. 2578 rules in the queue.
230200 rules inserted. The rule base contains 82016 rules. 2606 rules in the queue.
230400 rules inserted. The rule base contains 82021 rules. 2660 rules in the queue.
230600 rules inserted. The rule base contains 82051 rules. 2716 rules in the queue.
230800 rules inserted. The rule base contains 82101 rules. 2769 rules in the queue.
231000 rules inserted. The rule base contains 82129 rules. 2825 rules in the queue.
231200 rules inserted. The rule base contains 82210 rules. 2885 rules in the queue.
231400 rules inserted. The rule base contains 82203 rules. 2944 rules in the queue.
231600 rules inserted. The rule base contains 82322 rules. 3015 rules in the queue.
231800 rules inserted. The rule base contains 82467 rules. 3074 rules in the queue.
232000 rules inserted. The rule base contains 82600 rules. 3110 rules in the queue.
232200 rules inserted. The rule base contains 82728 rules. 3138 rules in the queue.
232400 rules inserted. The rule base contains 82829 rules. 3137 rules in the queue.
232600 rules inserted. The rule base contains 82900 rules. 3131 rules in the queue.
232800 rules inserted. The rule base contains 82991 rules. 3133 rules in the queue.
233000 rules inserted. The rule base contains 83011 rules. 3144 rules in the queue.
233200 rules inserted. The rule base contains 83034 rules. 3161 rules in the queue.
233400 rules inserted. The rule base contains 83097 rules. 3230 rules in the queue.
233600 rules inserted. The rule base contains 83101 rules. 3282 rules in the queue.
233800 rules inserted. The rule base contains 83134 rules. 3358 rules in the queue.
234000 rules inserted. The rule base contains 83189 rules. 3417 rules in the queue.
234200 rules inserted. The rule base contains 83169 rules. 3465 rules in the queue.
234400 rules inserted. The rule base contains 83257 rules. 3494 rules in the queue.
234600 rules inserted. The rule base contains 83385 rules. 3529 rules in the queue.
234800 rules inserted. The rule base contains 83507 rules. 3589 rules in the queue.
235000 rules inserted. The rule base contains 83596 rules. 3649 rules in the queue.
235200 rules inserted. The rule base contains 83706 rules. 3727 rules in the queue.
235400 rules inserted. The rule base contains 83812 rules. 3766 rules in the queue.
235600 rules inserted. The rule base contains 83908 rules. 3802 rules in the queue.
235800 rules inserted. The rule base contains 83993 rules. 3834 rules in the queue.
236000 rules inserted. The rule base contains 83970 rules. 3835 rules in the queue.
236200 rules inserted. The rule base contains 84084 rules. 3866 rules in the queue.
236400 rules inserted. The rule base contains 84056 rules. 3858 rules in the queue.
236600 rules inserted. The rule base contains 84091 rules. 3896 rules in the queue.
236800 rules inserted. The rule base contains 84107 rules. 3884 rules in the queue.
237000 rules inserted. The rule base contains 84126 rules. 3882 rules in the queue.
237200 rules inserted. The rule base contains 84175 rules. 3918 rules in the queue.
237400 rules inserted. The rule base contains 84190 rules. 3910 rules in the queue.
237600 rules inserted. The rule base contains 84230 rules. 3918 rules in the queue.
237800 rules inserted. The rule base contains 84316 rules. 3924 rules in the queue.
238000 rules inserted. The rule base contains 84426 rules. 3915 rules in the queue.
238200 rules inserted. The rule base contains 84549 rules. 3969 rules in the queue.
238400 rules inserted. The rule base contains 84625 rules. 4033 rules in the queue.
238600 rules inserted. The rule base contains 84711 rules. 4085 rules in the queue.
238800 rules inserted. The rule base contains 84817 rules. 4110 rules in the queue.
239000 rules inserted. The rule base contains 84946 rules. 4122 rules in the queue.
239200 rules inserted. The rule base contains 85045 rules. 4133 rules in the queue.
239400 rules inserted. The rule base contains 85132 rules. 4141 rules in the queue.
239600 rules inserted. The rule base contains 85107 rules. 4156 rules in the queue.
239800 rules inserted. The rule base contains 85219 rules. 4156 rules in the queue.
240000 rules inserted. The rule base contains 85193 rules. 4177 rules in the queue.
240200 rules inserted. The rule base contains 85271 rules. 4182 rules in the queue.
240400 rules inserted. The rule base contains 85287 rules. 4179 rules in the queue.
240600 rules inserted. The rule base contains 85256 rules. 4166 rules in the queue.
240800 rules inserted. The rule base contains 85316 rules. 4175 rules in the queue.
241000 rules inserted. The rule base contains 85330 rules. 4174 rules in the queue.
241200 rules inserted. The rule base contains 85314 rules. 4169 rules in the queue.
241400 rules inserted. The rule base contains 85342 rules. 4182 rules in the queue.
241600 rules inserted. The rule base contains 85446 rules. 4208 rules in the queue.
241800 rules inserted. The rule base contains 85569 rules. 4236 rules in the queue.
242000 rules inserted. The rule base contains 85651 rules. 4248 rules in the queue.
242200 rules inserted. The rule base contains 85690 rules. 4213 rules in the queue.
242400 rules inserted. The rule base contains 85761 rules. 4223 rules in the queue.
242600 rules inserted. The rule base contains 85843 rules. 4208 rules in the queue.
242800 rules inserted. The rule base contains 85934 rules. 4240 rules in the queue.
243000 rules inserted. The rule base contains 86032 rules. 4277 rules in the queue.
243200 rules inserted. The rule base contains 86122 rules. 4315 rules in the queue.
243400 rules inserted. The rule base contains 86183 rules. 4347 rules in the queue.
243600 rules inserted. The rule base contains 86224 rules. 4385 rules in the queue.
243800 rules inserted. The rule base contains 86250 rules. 4420 rules in the queue.
244000 rules inserted. The rule base contains 86267 rules. 4402 rules in the queue.
244200 rules inserted. The rule base contains 86324 rules. 4398 rules in the queue.
244400 rules inserted. The rule base contains 86304 rules. 4366 rules in the queue.
244600 rules inserted. The rule base contains 86334 rules. 4337 rules in the queue.
244800 rules inserted. The rule base contains 86393 rules. 4332 rules in the queue.
245000 rules inserted. The rule base contains 86351 rules. 4303 rules in the queue.
245200 rules inserted. The rule base contains 86387 rules. 4297 rules in the queue.
245400 rules inserted. The rule base contains 86433 rules. 4300 rules in the queue.
245600 rules inserted. The rule base contains 86562 rules. 4304 rules in the queue.
245800 rules inserted. The rule base contains 86683 rules. 4314 rules in the queue.
246000 rules inserted. The rule base contains 86778 rules. 4336 rules in the queue.
246200 rules inserted. The rule base contains 86801 rules. 4332 rules in the queue.
246400 rules inserted. The rule base contains 86867 rules. 4351 rules in the queue.
246600 rules inserted. The rule base contains 86948 rules. 4362 rules in the queue.
246800 rules inserted. The rule base contains 87024 rules. 4375 rules in the queue.
247000 rules inserted. The rule base contains 87155 rules. 4386 rules in the queue.
247200 rules inserted. The rule base contains 87286 rules. 4401 rules in the queue.
247400 rules inserted. The rule base contains 87387 rules. 4429 rules in the queue.
247600 rules inserted. The rule base contains 87409 rules. 4449 rules in the queue.
247800 rules inserted. The rule base contains 87452 rules. 4485 rules in the queue.
248000 rules inserted. The rule base contains 87557 rules. 4509 rules in the queue.
248200 rules inserted. The rule base contains 87460 rules. 4515 rules in the queue.
248400 rules inserted. The rule base contains 87548 rules. 4514 rules in the queue.
248600 rules inserted. The rule base contains 87531 rules. 4501 rules in the queue.
248800 rules inserted. The rule base contains 87596 rules. 4485 rules in the queue.
249000 rules inserted. The rule base contains 87676 rules. 4493 rules in the queue.
249200 rules inserted. The rule base contains 87630 rules. 4475 rules in the queue.
249400 rules inserted. The rule base contains 87670 rules. 4512 rules in the queue.
249600 rules inserted. The rule base contains 87745 rules. 4544 rules in the queue.
249800 rules inserted. The rule base contains 87882 rules. 4597 rules in the queue.
250000 rules inserted. The rule base contains 87989 rules. 4604 rules in the queue.
250200 rules inserted. The rule base contains 88073 rules. 4591 rules in the queue.
250400 rules inserted. The rule base contains 88171 rules. 4560 rules in the queue.
250600 rules inserted. The rule base contains 88245 rules. 4534 rules in the queue.
250800 rules inserted. The rule base contains 88343 rules. 4528 rules in the queue.
251000 rules inserted. The rule base contains 88414 rules. 4529 rules in the queue.
251200 rules inserted. The rule base contains 88534 rules. 4527 rules in the queue.
251400 rules inserted. The rule base contains 88648 rules. 4540 rules in the queue.
251600 rules inserted. The rule base contains 88770 rules. 4571 rules in the queue.
251800 rules inserted. The rule base contains 88818 rules. 4593 rules in the queue.
252000 rules inserted. The rule base contains 88838 rules. 4616 rules in the queue.
252200 rules inserted. The rule base contains 88998 rules. 4635 rules in the queue.
252400 rules inserted. The rule base contains 88916 rules. 4660 rules in the queue.
252600 rules inserted. The rule base contains 88954 rules. 4646 rules in the queue.
252800 rules inserted. The rule base contains 89030 rules. 4657 rules in the queue.
253000 rules inserted. The rule base contains 88962 rules. 4679 rules in the queue.
253200 rules inserted. The rule base contains 89096 rules. 4680 rules in the queue.
253400 rules inserted. The rule base contains 89017 rules. 4686 rules in the queue.
253600 rules inserted. The rule base contains 89055 rules. 4710 rules in the queue.
253800 rules inserted. The rule base contains 89096 rules. 4748 rules in the queue.
254000 rules inserted. The rule base contains 89233 rules. 4780 rules in the queue.
254200 rules inserted. The rule base contains 89400 rules. 4804 rules in the queue.
254400 rules inserted. The rule base contains 89555 rules. 4821 rules in the queue.
254600 rules inserted. The rule base contains 89638 rules. 4828 rules in the queue.
254800 rules inserted. The rule base contains 89703 rules. 4843 rules in the queue.
255000 rules inserted. The rule base contains 89771 rules. 4836 rules in the queue.
255200 rules inserted. The rule base contains 89871 rules. 4885 rules in the queue.
255400 rules inserted. The rule base contains 89934 rules. 4879 rules in the queue.
255600 rules inserted. The rule base contains 90038 rules. 4839 rules in the queue.
255800 rules inserted. The rule base contains 90139 rules. 4823 rules in the queue.
256000 rules inserted. The rule base contains 90230 rules. 4877 rules in the queue.
256200 rules inserted. The rule base contains 90381 rules. 4900 rules in the queue.
256400 rules inserted. The rule base contains 90256 rules. 4919 rules in the queue.
256600 rules inserted. The rule base contains 90421 rules. 4954 rules in the queue.
256800 rules inserted. The rule base contains 90439 rules. 4973 rules in the queue.
257000 rules inserted. The rule base contains 90439 rules. 4983 rules in the queue.
257200 rules inserted. The rule base contains 90553 rules. 5000 rules in the queue.
257400 rules inserted. The rule base contains 90514 rules. 5008 rules in the queue.
257600 rules inserted. The rule base contains 90586 rules. 5015 rules in the queue.
257800 rules inserted. The rule base contains 90670 rules. 5026 rules in the queue.
258000 rules inserted. The rule base contains 90645 rules. 5047 rules in the queue.
258200 rules inserted. The rule base contains 90695 rules. 5073 rules in the queue.
258400 rules inserted. The rule base contains 90734 rules. 5106 rules in the queue.
258600 rules inserted. The rule base contains 90856 rules. 5139 rules in the queue.
258800 rules inserted. The rule base contains 91011 rules. 5167 rules in the queue.
259000 rules inserted. The rule base contains 91177 rules. 5187 rules in the queue.
259200 rules inserted. The rule base contains 91322 rules. 5203 rules in the queue.
259400 rules inserted. The rule base contains 91439 rules. 5222 rules in the queue.
259600 rules inserted. The rule base contains 91568 rules. 5229 rules in the queue.
259800 rules inserted. The rule base contains 91682 rules. 5252 rules in the queue.
260000 rules inserted. The rule base contains 91831 rules. 5271 rules in the queue.
260200 rules inserted. The rule base contains 91900 rules. 5269 rules in the queue.
260400 rules inserted. The rule base contains 91979 rules. 5271 rules in the queue.
260600 rules inserted. The rule base contains 92077 rules. 5310 rules in the queue.
260800 rules inserted. The rule base contains 92240 rules. 5333 rules in the queue.
261000 rules inserted. The rule base contains 92399 rules. 5355 rules in the queue.
261200 rules inserted. The rule base contains 92235 rules. 5377 rules in the queue.
261400 rules inserted. The rule base contains 92394 rules. 5397 rules in the queue.
261600 rules inserted. The rule base contains 92542 rules. 5417 rules in the queue.
261800 rules inserted. The rule base contains 92443 rules. 5434 rules in the queue.
262000 rules inserted. The rule base contains 92465 rules. 5446 rules in the queue.
262200 rules inserted. The rule base contains 92604 rules. 5462 rules in the queue.
262400 rules inserted. The rule base contains 92534 rules. 5448 rules in the queue.
262600 rules inserted. The rule base contains 92684 rules. 5475 rules in the queue.
262800 rules inserted. The rule base contains 92664 rules. 5483 rules in the queue.
263000 rules inserted. The rule base contains 92678 rules. 5508 rules in the queue.
263200 rules inserted. The rule base contains 92728 rules. 5545 rules in the queue.
263400 rules inserted. The rule base contains 92773 rules. 5583 rules in the queue.
263600 rules inserted. The rule base contains 92887 rules. 5631 rules in the queue.
263800 rules inserted. The rule base contains 93036 rules. 5661 rules in the queue.
264000 rules inserted. The rule base contains 93195 rules. 5691 rules in the queue.
264200 rules inserted. The rule base contains 93297 rules. 5702 rules in the queue.
264400 rules inserted. The rule base contains 93465 rules. 5729 rules in the queue.
264600 rules inserted. The rule base contains 93626 rules. 5721 rules in the queue.
264800 rules inserted. The rule base contains 93748 rules. 5745 rules in the queue.
265000 rules inserted. The rule base contains 93886 rules. 5756 rules in the queue.
265200 rules inserted. The rule base contains 93960 rules. 5746 rules in the queue.
265400 rules inserted. The rule base contains 94048 rules. 5703 rules in the queue.
265600 rules inserted. The rule base contains 94125 rules. 5660 rules in the queue.
265800 rules inserted. The rule base contains 94202 rules. 5644 rules in the queue.
266000 rules inserted. The rule base contains 94357 rules. 5626 rules in the queue.
266200 rules inserted. The rule base contains 94535 rules. 5609 rules in the queue.
266400 rules inserted. The rule base contains 94338 rules. 5628 rules in the queue.
266600 rules inserted. The rule base contains 94482 rules. 5602 rules in the queue.
266800 rules inserted. The rule base contains 94658 rules. 5577 rules in the queue.
267000 rules inserted. The rule base contains 94526 rules. 5594 rules in the queue.
267200 rules inserted. The rule base contains 94536 rules. 5594 rules in the queue.
267400 rules inserted. The rule base contains 94693 rules. 5621 rules in the queue.
267600 rules inserted. The rule base contains 94676 rules. 5642 rules in the queue.
267800 rules inserted. The rule base contains 94740 rules. 5642 rules in the queue.
268000 rules inserted. The rule base contains 94834 rules. 5660 rules in the queue.
268200 rules inserted. The rule base contains 94770 rules. 5667 rules in the queue.
268400 rules inserted. The rule base contains 94858 rules. 5684 rules in the queue.
268600 rules inserted. The rule base contains 94874 rules. 5710 rules in the queue.
268800 rules inserted. The rule base contains 94937 rules. 5735 rules in the queue.
269000 rules inserted. The rule base contains 95027 rules. 5748 rules in the queue.
269200 rules inserted. The rule base contains 95186 rules. 5773 rules in the queue.
269400 rules inserted. The rule base contains 95354 rules. 5791 rules in the queue.
269600 rules inserted. The rule base contains 95495 rules. 5830 rules in the queue.
269800 rules inserted. The rule base contains 95601 rules. 5847 rules in the queue.
270000 rules inserted. The rule base contains 95759 rules. 5881 rules in the queue.
270200 rules inserted. The rule base contains 95902 rules. 5898 rules in the queue.
270400 rules inserted. The rule base contains 95985 rules. 5923 rules in the queue.
270600 rules inserted. The rule base contains 96128 rules. 5953 rules in the queue.
270800 rules inserted. The rule base contains 96235 rules. 5986 rules in the queue.
271000 rules inserted. The rule base contains 96317 rules. 5981 rules in the queue.
271200 rules inserted. The rule base contains 96381 rules. 5950 rules in the queue.
271400 rules inserted. The rule base contains 96535 rules. 5974 rules in the queue.
271600 rules inserted. The rule base contains 96705 rules. 5989 rules in the queue.
271800 rules inserted. The rule base contains 96670 rules. 5971 rules in the queue.
272000 rules inserted. The rule base contains 96679 rules. 5976 rules in the queue.
272200 rules inserted. The rule base contains 96851 rules. 5995 rules in the queue.
272400 rules inserted. The rule base contains 96805 rules. 5972 rules in the queue.
272600 rules inserted. The rule base contains 96834 rules. 5977 rules in the queue.
272800 rules inserted. The rule base contains 96898 rules. 5965 rules in the queue.
273000 rules inserted. The rule base contains 97055 rules. 5948 rules in the queue.
273200 rules inserted. The rule base contains 96942 rules. 5956 rules in the queue.
273400 rules inserted. The rule base contains 97094 rules. 5936 rules in the queue.
273600 rules inserted. The rule base contains 97073 rules. 5938 rules in the queue.
273800 rules inserted. The rule base contains 97126 rules. 5934 rules in the queue.
274000 rules inserted. The rule base contains 97228 rules. 5914 rules in the queue.
274200 rules inserted. The rule base contains 97206 rules. 5921 rules in the queue.
274400 rules inserted. The rule base contains 97308 rules. 5904 rules in the queue.
274600 rules inserted. The rule base contains 97328 rules. 5891 rules in the queue.
274800 rules inserted. The rule base contains 97456 rules. 5866 rules in the queue.
275000 rules inserted. The rule base contains 97615 rules. 5851 rules in the queue.
275200 rules inserted. The rule base contains 97751 rules. 5820 rules in the queue.
275400 rules inserted. The rule base contains 97907 rules. 5812 rules in the queue.
275600 rules inserted. The rule base contains 98033 rules. 5833 rules in the queue.
275800 rules inserted. The rule base contains 98173 rules. 5861 rules in the queue.
276000 rules inserted. The rule base contains 98337 rules. 5884 rules in the queue.
276200 rules inserted. The rule base contains 98446 rules. 5911 rules in the queue.
276400 rules inserted. The rule base contains 98583 rules. 5938 rules in the queue.
276600 rules inserted. The rule base contains 98718 rules. 5969 rules in the queue.
276800 rules inserted. The rule base contains 98775 rules. 5931 rules in the queue.
277000 rules inserted. The rule base contains 98825 rules. 5897 rules in the queue.
277200 rules inserted. The rule base contains 98923 rules. 5910 rules in the queue.
277400 rules inserted. The rule base contains 99051 rules. 5915 rules in the queue.
277600 rules inserted. The rule base contains 99104 rules. 5940 rules in the queue.
277800 rules inserted. The rule base contains 99092 rules. 5948 rules in the queue.
278000 rules inserted. The rule base contains 99217 rules. 5941 rules in the queue.
278200 rules inserted. The rule base contains 99215 rules. 5971 rules in the queue.
278400 rules inserted. The rule base contains 99305 rules. 5971 rules in the queue.
278600 rules inserted. The rule base contains 99372 rules. 5982 rules in the queue.
278800 rules inserted. The rule base contains 99489 rules. 5985 rules in the queue.
279000 rules inserted. The rule base contains 99419 rules. 5981 rules in the queue.
279200 rules inserted. The rule base contains 99587 rules. 6000 rules in the queue.
279400 rules inserted. The rule base contains 99548 rules. 5983 rules in the queue.
279600 rules inserted. The rule base contains 99550 rules. 5985 rules in the queue.
279800 rules inserted. The rule base contains 99614 rules. 5981 rules in the queue.
280000 rules inserted. The rule base contains 99739 rules. 5990 rules in the queue.
280200 rules inserted. The rule base contains 99806 rules. 5984 rules in the queue.
280400 rules inserted. The rule base contains 99902 rules. 6000 rules in the queue.
280600 rules inserted. The rule base contains 100069 rules. 6043 rules in the queue.
280800 rules inserted. The rule base contains 100244 rules. 6058 rules in the queue.
281000 rules inserted. The rule base contains 100411 rules. 6073 rules in the queue.
281200 rules inserted. The rule base contains 100491 rules. 6053 rules in the queue.
281400 rules inserted. The rule base contains 100660 rules. 6033 rules in the queue.
281600 rules inserted. The rule base contains 100780 rules. 6013 rules in the queue.
281800 rules inserted. The rule base contains 100936 rules. 5989 rules in the queue.
282000 rules inserted. The rule base contains 101047 rules. 5970 rules in the queue.
282200 rules inserted. The rule base contains 101198 rules. 5949 rules in the queue.
282400 rules inserted. The rule base contains 101309 rules. 5919 rules in the queue.
282600 rules inserted. The rule base contains 101216 rules. 5856 rules in the queue.
282800 rules inserted. The rule base contains 101192 rules. 5827 rules in the queue.
283000 rules inserted. The rule base contains 101306 rules. 5793 rules in the queue.
283200 rules inserted. The rule base contains 101380 rules. 5773 rules in the queue.
283400 rules inserted. The rule base contains 101299 rules. 5772 rules in the queue.
283600 rules inserted. The rule base contains 101414 rules. 5720 rules in the queue.
283800 rules inserted. The rule base contains 101438 rules. 5709 rules in the queue.
284000 rules inserted. The rule base contains 101415 rules. 5703 rules in the queue.
284200 rules inserted. The rule base contains 101462 rules. 5700 rules in the queue.
284400 rules inserted. The rule base contains 101587 rules. 5696 rules in the queue.
284600 rules inserted. The rule base contains 101560 rules. 5715 rules in the queue.
284800 rules inserted. The rule base contains 101667 rules. 5704 rules in the queue.
285000 rules inserted. The rule base contains 101691 rules. 5728 rules in the queue.
285200 rules inserted. The rule base contains 101749 rules. 5724 rules in the queue.
285400 rules inserted. The rule base contains 101839 rules. 5723 rules in the queue.
285600 rules inserted. The rule base contains 101875 rules. 5719 rules in the queue.
285800 rules inserted. The rule base contains 101946 rules. 5716 rules in the queue.
286000 rules inserted. The rule base contains 101984 rules. 5728 rules in the queue.
286200 rules inserted. The rule base contains 102084 rules. 5741 rules in the queue.
286400 rules inserted. The rule base contains 102189 rules. 5757 rules in the queue.
286600 rules inserted. The rule base contains 102297 rules. 5770 rules in the queue.
286800 rules inserted. The rule base contains 102430 rules. 5788 rules in the queue.
287000 rules inserted. The rule base contains 102597 rules. 5825 rules in the queue.
287200 rules inserted. The rule base contains 102771 rules. 5839 rules in the queue.
287400 rules inserted. The rule base contains 102937 rules. 5879 rules in the queue.
287600 rules inserted. The rule base contains 103075 rules. 5882 rules in the queue.
287800 rules inserted. The rule base contains 103242 rules. 5902 rules in the queue.
288000 rules inserted. The rule base contains 103089 rules. 5850 rules in the queue.
288200 rules inserted. The rule base contains 102987 rules. 5769 rules in the queue.
288400 rules inserted. The rule base contains 103102 rules. 5714 rules in the queue.
288600 rules inserted. The rule base contains 103175 rules. 5668 rules in the queue.
288800 rules inserted. The rule base contains 103093 rules. 5649 rules in the queue.
289000 rules inserted. The rule base contains 103220 rules. 5580 rules in the queue.
289200 rules inserted. The rule base contains 103164 rules. 5555 rules in the queue.
289400 rules inserted. The rule base contains 103180 rules. 5506 rules in the queue.
289600 rules inserted. The rule base contains 103273 rules. 5452 rules in the queue.
289800 rules inserted. The rule base contains 103308 rules. 5447 rules in the queue.
290000 rules inserted. The rule base contains 103309 rules. 5423 rules in the queue.
290200 rules inserted. The rule base contains 103372 rules. 5394 rules in the queue.
290400 rules inserted. The rule base contains 103329 rules. 5382 rules in the queue.
290600 rules inserted. The rule base contains 103413 rules. 5355 rules in the queue.
290800 rules inserted. The rule base contains 103442 rules. 5327 rules in the queue.
291000 rules inserted. The rule base contains 103485 rules. 5301 rules in the queue.
291200 rules inserted. The rule base contains 103540 rules. 5245 rules in the queue.
291400 rules inserted. The rule base contains 103596 rules. 5229 rules in the queue.
291600 rules inserted. The rule base contains 103666 rules. 5192 rules in the queue.
291800 rules inserted. The rule base contains 103720 rules. 5179 rules in the queue.
292000 rules inserted. The rule base contains 103808 rules. 5194 rules in the queue.
292200 rules inserted. The rule base contains 103908 rules. 5209 rules in the queue.
292400 rules inserted. The rule base contains 104020 rules. 5234 rules in the queue.
292600 rules inserted. The rule base contains 104119 rules. 5248 rules in the queue.
292800 rules inserted. The rule base contains 104214 rules. 5259 rules in the queue.
293000 rules inserted. The rule base contains 104351 rules. 5243 rules in the queue.
293200 rules inserted. The rule base contains 104467 rules. 5216 rules in the queue.
293400 rules inserted. The rule base contains 102774 rules. 4620 rules in the queue.
293600 rules inserted. The rule base contains 102877 rules. 4603 rules in the queue.
293800 rules inserted. The rule base contains 102857 rules. 4558 rules in the queue.
294000 rules inserted. The rule base contains 102960 rules. 4501 rules in the queue.
294200 rules inserted. The rule base contains 102961 rules. 4440 rules in the queue.
294400 rules inserted. The rule base contains 103061 rules. 4394 rules in the queue.
294600 rules inserted. The rule base contains 103034 rules. 4361 rules in the queue.
294800 rules inserted. The rule base contains 103109 rules. 4317 rules in the queue.
295000 rules inserted. The rule base contains 103092 rules. 4276 rules in the queue.
295200 rules inserted. The rule base contains 103159 rules. 4212 rules in the queue.
295400 rules inserted. The rule base contains 103231 rules. 4147 rules in the queue.
295600 rules inserted. The rule base contains 103289 rules. 4078 rules in the queue.
295800 rules inserted. The rule base contains 103375 rules. 4026 rules in the queue.
296000 rules inserted. The rule base contains 103455 rules. 3988 rules in the queue.
296200 rules inserted. The rule base contains 103535 rules. 3954 rules in the queue.
296400 rules inserted. The rule base contains 103596 rules. 3922 rules in the queue.
296600 rules inserted. The rule base contains 103674 rules. 3922 rules in the queue.
296800 rules inserted. The rule base contains 103737 rules. 3895 rules in the queue.
297000 rules inserted. The rule base contains 103802 rules. 3878 rules in the queue.
297200 rules inserted. The rule base contains 103909 rules. 3830 rules in the queue.
297400 rules inserted. The rule base contains 104019 rules. 3781 rules in the queue.
297600 rules inserted. The rule base contains 99482 rules. 2689 rules in the queue.
297800 rules inserted. The rule base contains 99591 rules. 2638 rules in the queue.
298000 rules inserted. The rule base contains 99653 rules. 2581 rules in the queue.
298200 rules inserted. The rule base contains 99719 rules. 2516 rules in the queue.
298400 rules inserted. The rule base contains 98477 rules. 2457 rules in the queue.
298600 rules inserted. The rule base contains 98575 rules. 2421 rules in the queue.
298800 rules inserted. The rule base contains 98669 rules. 2394 rules in the queue.
299000 rules inserted. The rule base contains 98760 rules. 2354 rules in the queue.
299200 rules inserted. The rule base contains 98841 rules. 2315 rules in the queue.
299400 rules inserted. The rule base contains 98934 rules. 2284 rules in the queue.
299600 rules inserted. The rule base contains 99002 rules. 2231 rules in the queue.
299800 rules inserted. The rule base contains 99138 rules. 2145 rules in the queue.
300000 rules inserted. The rule base contains 99276 rules. 2057 rules in the queue.
300200 rules inserted. The rule base contains 99299 rules. 1956 rules in the queue.
300400 rules inserted. The rule base contains 99390 rules. 1870 rules in the queue.
300600 rules inserted. The rule base contains 99495 rules. 1819 rules in the queue.
300800 rules inserted. The rule base contains 99523 rules. 1719 rules in the queue.
301000 rules inserted. The rule base contains 99547 rules. 1624 rules in the queue.
301200 rules inserted. The rule base contains 99611 rules. 1604 rules in the queue.
301400 rules inserted. The rule base contains 99708 rules. 1561 rules in the queue.
301600 rules inserted. The rule base contains 99813 rules. 1581 rules in the queue.
301800 rules inserted. The rule base contains 99918 rules. 1496 rules in the queue.
302000 rules inserted. The rule base contains 100027 rules. 1399 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) && attacker(m) -> end(RecvMsg(bob,alice,stagepack_a(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. We assume as hypothesis that
attacker(m).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The event LeakS(phase0,alice) may be executed at {179}.
So the message key_s(alice) may be sent on channel pub at output {180}.
mess(pub,key_s(alice)).

6. By 4, the attacker may have the channel pub.
By 5, the message key_s(alice) may be sent on this channel.
So the attacker may obtain the message key_s(alice) by listening on this channel.
attacker(key_s(alice)).

7. By 6, the attacker may know key_s(alice).
By 3, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(alice),g).
attacker(dhexp_real(key_s(alice),g)).

8. By 7, the attacker may know dhexp_real(key_s(alice),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

9. The attacker has some term a_1.
attacker(a_1).

10. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

11. By 4, the attacker may have the channel pub.
By 10, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 11, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

16. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

17. By 16, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

18. By 17, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 9, the attacker may know a_1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1)).

19. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

20. By 14, the attacker may know hash(somename,empty).
By 11, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 9, the attacker may know a_1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1)).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 19, the attacker may know minnonce.
By 18, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 8, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).

23. By 18, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))))).

24. By 19, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

25. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 24, the attacker may know increment_nonce(minnonce).
By 23, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
By 2, the attacker may know m.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).

26. By 9, the attacker may know a_1.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
By 25, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
Using the function concat3 the attacker may obtain concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
attacker(concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

27. By 4, the attacker may have the channel pub.
By 26, the attacker may have the message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

28. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {423}.
The message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)) that may be sent on channel pub by 27 may be received at input {376}.
We have a_1 ≠ caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_1),m) may be executed at {421}.
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).

29. By 28, end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakPsk(phase0,alice,charlie)) && begin(SendMsg(alice,charlie,stagepack_a(sid_1),msg_a(alice,charlie,sid_1))) && attacker(m) -> end(RecvMsg(bob,alice,stagepack_a(sid_2),m))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

1. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. We assume as hypothesis that
attacker(m).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

5. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 4 may be read at get {243}.
The event SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2)) may be executed at {240}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on channel pub at output {242}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

6. By 3, the attacker may have the channel pub.
By 5, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

7. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).

9. The event LeakPsk(phase0,alice,charlie) may be executed at {354}.
So the message key_psk(alice,charlie) may be sent on channel pub at output {355}.
mess(pub,key_psk(alice,charlie)).

10. By 3, the attacker may have the channel pub.
By 9, the message key_psk(alice,charlie) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,charlie) by listening on this channel.
attacker(key_psk(alice,charlie)).

11. Using the function empty the attacker may obtain empty.
attacker(empty).

12. Using the function somename the attacker may obtain somename.
attacker(somename).

13. By 12, the attacker may know somename.
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

14. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).

15. By 13, the attacker may know hash(somename,empty).
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie)))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

18. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

19. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,charlie))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 18, the attacker may know minnonce.
By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

22. By 21, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

23. The attacker has some term a_1.
attacker(a_1).

24. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

25. By 3, the attacker may have the channel pub.
By 24, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

26. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

27. By 15, the attacker may know hash(hash(somename,empty),empty).
By 26, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

28. By 27, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 23, the attacker may know a_1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1)).

29. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know a_1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1)).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 18, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 22, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).

32. By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))))).

33. By 18, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

34. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
By 2, the attacker may know m.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).

35. By 23, the attacker may know a_1.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
Using the function concat3 the attacker may obtain concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
attacker(concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

36. By 3, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

37. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {423}.
The message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)) that may be sent on channel pub by 36 may be received at input {376}.
We have a_1 ≠ caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_1),m) may be executed at {421}.
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).

38. By 37, end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakPsk(phase0,alice,charlie)) && begin(SendMsg(alice,charlie,stagepack_a(sid_1),msg_a(alice,charlie,sid_1))) && attacker(m) -> end(RecvMsg(bob,alice,stagepack_a(sid_2),m))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

1. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. We assume as hypothesis that
attacker(m).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

5. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 4 may be read at get {243}.
The event SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2)) may be executed at {240}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on channel pub at output {242}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

6. By 3, the attacker may have the channel pub.
By 5, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

7. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).

9. The event LeakPsk(phase0,alice,charlie) may be executed at {354}.
So the message key_psk(alice,charlie) may be sent on channel pub at output {355}.
mess(pub,key_psk(alice,charlie)).

10. By 3, the attacker may have the channel pub.
By 9, the message key_psk(alice,charlie) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,charlie) by listening on this channel.
attacker(key_psk(alice,charlie)).

11. Using the function empty the attacker may obtain empty.
attacker(empty).

12. Using the function somename the attacker may obtain somename.
attacker(somename).

13. By 12, the attacker may know somename.
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

14. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).

15. By 13, the attacker may know hash(somename,empty).
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie)))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

18. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

19. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,charlie))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 18, the attacker may know minnonce.
By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

22. By 21, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

23. The attacker has some term a_1.
attacker(a_1).

24. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

25. By 3, the attacker may have the channel pub.
By 24, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

26. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

27. By 15, the attacker may know hash(hash(somename,empty),empty).
By 26, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

28. By 27, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 23, the attacker may know a_1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1)).

29. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know a_1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1)).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 18, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 22, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).

32. By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))))).

33. By 18, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

34. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
By 2, the attacker may know m.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).

35. By 23, the attacker may know a_1.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
Using the function concat3 the attacker may obtain concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
attacker(concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

36. By 3, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

37. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {423}.
The message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)) that may be sent on channel pub by 36 may be received at input {376}.
We have a_1 ≠ caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_1),m) may be executed at {421}.
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).

38. By 37, end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakPsk(phase0,alice,charlie)) && begin(SendMsg(alice,charlie,stagepack_a(sid_1),msg_a(alice,charlie,sid_1))) && attacker(m) -> end(RecvMsg(bob,alice,stagepack_a(sid_2),m))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

1. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. We assume as hypothesis that
attacker(m).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

5. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 4 may be read at get {243}.
The event SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2)) may be executed at {240}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on channel pub at output {242}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

6. By 3, the attacker may have the channel pub.
By 5, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

7. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).

9. The event LeakPsk(phase0,alice,charlie) may be executed at {354}.
So the message key_psk(alice,charlie) may be sent on channel pub at output {355}.
mess(pub,key_psk(alice,charlie)).

10. By 3, the attacker may have the channel pub.
By 9, the message key_psk(alice,charlie) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,charlie) by listening on this channel.
attacker(key_psk(alice,charlie)).

11. Using the function empty the attacker may obtain empty.
attacker(empty).

12. Using the function somename the attacker may obtain somename.
attacker(somename).

13. By 12, the attacker may know somename.
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

14. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).

15. By 13, the attacker may know hash(somename,empty).
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie)))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

18. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

19. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,charlie))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 18, the attacker may know minnonce.
By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

22. By 21, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

23. The attacker has some term a_1.
attacker(a_1).

24. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

25. By 3, the attacker may have the channel pub.
By 24, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

26. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

27. By 15, the attacker may know hash(hash(somename,empty),empty).
By 26, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

28. By 27, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 23, the attacker may know a_1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1)).

29. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know a_1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1)).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 18, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 22, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).

32. By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))))).

33. By 18, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

34. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
By 2, the attacker may know m.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).

35. By 23, the attacker may know a_1.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
Using the function concat3 the attacker may obtain concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
attacker(concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

36. By 3, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

37. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {423}.
The message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)) that may be sent on channel pub by 36 may be received at input {376}.
We have a_1 ≠ caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_1),m) may be executed at {421}.
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).

38. By 37, end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakPsk(phase0,alice,charlie)) && begin(SendMsg(alice,charlie,stagepack_a(sid_1),msg_a(alice,charlie,sid_1))) && attacker(m) -> end(RecvMsg(bob,alice,stagepack_a(sid_2),m))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

1. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. We assume as hypothesis that
attacker(m).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

5. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 4 may be read at get {243}.
The event SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2)) may be executed at {240}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on channel pub at output {242}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

6. By 3, the attacker may have the channel pub.
By 5, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

7. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).

9. The event LeakPsk(phase0,alice,charlie) may be executed at {354}.
So the message key_psk(alice,charlie) may be sent on channel pub at output {355}.
mess(pub,key_psk(alice,charlie)).

10. By 3, the attacker may have the channel pub.
By 9, the message key_psk(alice,charlie) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,charlie) by listening on this channel.
attacker(key_psk(alice,charlie)).

11. Using the function empty the attacker may obtain empty.
attacker(empty).

12. Using the function somename the attacker may obtain somename.
attacker(somename).

13. By 12, the attacker may know somename.
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

14. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).

15. By 13, the attacker may know hash(somename,empty).
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie)))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

18. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

19. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,charlie))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 18, the attacker may know minnonce.
By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

22. By 21, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

23. The attacker has some term a_1.
attacker(a_1).

24. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

25. By 3, the attacker may have the channel pub.
By 24, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

26. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

27. By 15, the attacker may know hash(hash(somename,empty),empty).
By 26, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

28. By 27, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 23, the attacker may know a_1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1)).

29. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know a_1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1)).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 18, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 22, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).

32. By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))))).

33. By 18, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

34. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))).
By 2, the attacker may know m.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).

35. By 23, the attacker may know a_1.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m).
Using the function concat3 the attacker may obtain concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
attacker(concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

36. By 3, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m))).

37. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {423}.
The message concat3(a_1,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),a_1),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),a_1),validkey(dhexp_real(key_s(alice),g)))),m)) that may be sent on channel pub by 36 may be received at input {376}.
We have a_1 ≠ caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_1),m) may be executed at {421}.
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).

38. By 37, end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_1),m)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(LeakPsk(phase1,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> attacker_p1(msg_a(alice,bob,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on channel pub at output {62}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

9. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

10. By 9, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

11. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

12. The event LeakPsk(phase1,alice,bob) may be executed at {177}.
So the message key_psk(alice,bob) may be sent on channel pub in phase 1 at output {178}.
mess_p1(pub,key_psk(alice,bob)).

13. By 11, the attacker may have the channel pub in phase 1.
By 12, the message key_psk(alice,bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) in phase 1 by listening on this channel.
attacker_p1(key_psk(alice,bob)).

14. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

15. Using the function somename the attacker may obtain somename in phase 1.
attacker_p1(somename).

16. By 15, the attacker may know somename in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

17. By 16, the attacker may know hash(somename,empty) in phase 1.
By 13, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

18. By 16, the attacker may know hash(somename,empty) in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty) in phase 1.
attacker_p1(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty) in phase 1.
By 17, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))) in phase 1.
By 10, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
By 8, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 22, the attacker may know minnonce in phase 1.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce) in phase 1.
attacker_p1(increment_nonce(minnonce)).

24. By 16, the attacker may know hash(somename,empty) in phase 1.
By 13, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)) in phase 1.
By 10, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
By 23, the attacker may know increment_nonce(minnonce) in phase 1.
By 21, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1)).

28. By 27, attacker_p1(msg_a(alice,bob,sid_1)).
The goal is reached, represented in the following fact:
attacker_p1(msg_a(alice,bob,sid_1)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))
goal reachable: begin(LeakPsk(phase1,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> attacker_p1(msg_a(alice,bob,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on channel pub at output {62}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

9. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

10. By 9, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

11. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

12. The event LeakPsk(phase1,alice,bob) may be executed at {177}.
So the message key_psk(alice,bob) may be sent on channel pub in phase 1 at output {178}.
mess_p1(pub,key_psk(alice,bob)).

13. By 11, the attacker may have the channel pub in phase 1.
By 12, the message key_psk(alice,bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) in phase 1 by listening on this channel.
attacker_p1(key_psk(alice,bob)).

14. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

15. Using the function somename the attacker may obtain somename in phase 1.
attacker_p1(somename).

16. By 15, the attacker may know somename in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

17. By 16, the attacker may know hash(somename,empty) in phase 1.
By 13, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

18. By 16, the attacker may know hash(somename,empty) in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty) in phase 1.
attacker_p1(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty) in phase 1.
By 17, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))) in phase 1.
By 10, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
By 8, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 22, the attacker may know minnonce in phase 1.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce) in phase 1.
attacker_p1(increment_nonce(minnonce)).

24. By 16, the attacker may know hash(somename,empty) in phase 1.
By 13, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)) in phase 1.
By 10, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
By 23, the attacker may know increment_nonce(minnonce) in phase 1.
By 21, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1)).

28. By 27, attacker_p1(msg_a(alice,bob,sid_1)).
The goal is reached, represented in the following fact:
attacker_p1(msg_a(alice,bob,sid_1)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(LeakPsk(phase1,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> attacker_p1(msg_a(alice,bob,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on channel pub at output {62}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

9. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

10. By 9, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

11. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

12. The event LeakPsk(phase1,alice,bob) may be executed at {177}.
So the message key_psk(alice,bob) may be sent on channel pub in phase 1 at output {178}.
mess_p1(pub,key_psk(alice,bob)).

13. By 11, the attacker may have the channel pub in phase 1.
By 12, the message key_psk(alice,bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) in phase 1 by listening on this channel.
attacker_p1(key_psk(alice,bob)).

14. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

15. Using the function somename the attacker may obtain somename in phase 1.
attacker_p1(somename).

16. By 15, the attacker may know somename in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

17. By 16, the attacker may know hash(somename,empty) in phase 1.
By 13, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

18. By 16, the attacker may know hash(somename,empty) in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty) in phase 1.
attacker_p1(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty) in phase 1.
By 17, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))) in phase 1.
By 10, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
By 8, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 22, the attacker may know minnonce in phase 1.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce) in phase 1.
attacker_p1(increment_nonce(minnonce)).

24. By 16, the attacker may know hash(somename,empty) in phase 1.
By 13, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)) in phase 1.
By 10, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
By 23, the attacker may know increment_nonce(minnonce) in phase 1.
By 21, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1)).

28. By 27, attacker_p1(msg_a(alice,bob,sid_1)).
The goal is reached, represented in the following fact:
attacker_p1(msg_a(alice,bob,sid_1)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))
goal reachable: begin(LeakPsk(phase1,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> attacker_p1(msg_a(alice,bob,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on channel pub at output {62}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

9. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

10. By 9, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

11. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

12. The event LeakPsk(phase1,alice,bob) may be executed at {177}.
So the message key_psk(alice,bob) may be sent on channel pub in phase 1 at output {178}.
mess_p1(pub,key_psk(alice,bob)).

13. By 11, the attacker may have the channel pub in phase 1.
By 12, the message key_psk(alice,bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) in phase 1 by listening on this channel.
attacker_p1(key_psk(alice,bob)).

14. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

15. Using the function somename the attacker may obtain somename in phase 1.
attacker_p1(somename).

16. By 15, the attacker may know somename in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

17. By 16, the attacker may know hash(somename,empty) in phase 1.
By 13, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

18. By 16, the attacker may know hash(somename,empty) in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty) in phase 1.
attacker_p1(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty) in phase 1.
By 17, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))) in phase 1.
By 10, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
By 8, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 22, the attacker may know minnonce in phase 1.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce) in phase 1.
attacker_p1(increment_nonce(minnonce)).

24. By 16, the attacker may know hash(somename,empty) in phase 1.
By 13, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)) in phase 1.
By 10, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))) in phase 1.
By 23, the attacker may know increment_nonce(minnonce) in phase 1.
By 21, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1)).

28. By 27, attacker_p1(msg_a(alice,bob,sid_1)).
The goal is reached, represented in the following fact:
attacker_p1(msg_a(alice,bob,sid_1)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && attacker(m) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_b(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the entry statestore(alice,bob,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {61}.
table(statestore(alice,bob,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),empty,empty,key_psk(alice,bob),true)))).

3. We assume as hypothesis that
attacker(m).

4. Using the function g the attacker may obtain g.
attacker(g).

5. Using the function pub the attacker may obtain pub.
attacker(pub).

6. The event LeakS(phase0,bob) may be executed at {538}.
So the message key_s(bob) may be sent on channel pub at output {539}.
mess(pub,key_s(bob)).

7. By 5, the attacker may have the channel pub.
By 6, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

8. By 7, the attacker may know key_s(bob).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(bob),g).
attacker(dhexp_real(key_s(bob),g)).

9. By 8, the attacker may know dhexp_real(key_s(bob),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(bob),g)).
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function zero the attacker may obtain zero.
attacker(zero).

11. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on channel pub at output {62}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

12. By 5, the attacker may have the channel pub.
By 11, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

13. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

14. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

15. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

16. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

17. By 5, the attacker may have the channel pub.
By 16, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

18. Using the function empty the attacker may obtain empty.
attacker(empty).

19. Using the function somename the attacker may obtain somename.
attacker(somename).

20. By 19, the attacker may know somename.
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

21. By 20, the attacker may know hash(somename,empty).
By 17, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

22. By 20, the attacker may know hash(somename,empty).
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

23. By 22, the attacker may know hash(hash(somename,empty),empty).
By 21, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

24. By 23, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

25. By 24, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
By 14, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))))).

26. By 25, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).
By 13, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

27. By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
By 10, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero)).

28. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

29. By 20, the attacker may know hash(somename,empty).
By 17, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero)).

32. By 31, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero)).

33. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero).
By 10, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero)).

34. By 33, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
By 28, the attacker may know minnonce.
By 27, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).

35. By 27, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))))).

36. By 7, the attacker may know key_s(bob).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).

37. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
By 36, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)))).

39. By 38, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
By 28, the attacker may know minnonce.
By 35, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 3, the attacker may know m.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),m).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),m)).

40. By 10, the attacker may know zero.
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))).
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),m).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),m)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),m))).

41. By 5, the attacker may have the channel pub.
By 40, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),m)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),m))).

42. The entry statestore(alice,bob,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {132}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),m)) that may be sent on channel pub by 41 may be received at input {64}.
So event RecvMsg(alice,bob,stagepack_b(sid_1),m) may be executed at {130}.
end(RecvMsg(alice,bob,stagepack_b(sid_1),m)).

43. By 42, end(RecvMsg(alice,bob,stagepack_b(sid_1),m)).
The goal is reached, represented in the following fact:
end(RecvMsg(alice,bob,stagepack_b(sid_1),m)).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && attacker(m) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_b(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_a(sid_2),msg_a(alice,bob,sid_2))) -> end(RecvMsg(alice,bob,stagepack_b(sid_2),msg_b(bob,alice,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && attacker(m) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_b(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_a(sid_2),msg_a(alice,bob,sid_2))) -> end(RecvMsg(alice,bob,stagepack_b(sid_2),msg_b(bob,alice,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && attacker(m) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_b(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_a(sid_2),msg_a(alice,bob,sid_2))) -> end(RecvMsg(alice,bob,stagepack_b(sid_2),msg_b(bob,alice,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && attacker(m) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_b(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_a(sid_2),msg_a(alice,bob,sid_2))) -> end(RecvMsg(alice,bob,stagepack_b(sid_2),msg_b(bob,alice,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakPsk(phase0,alice,charlie)) && begin(SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2))) -> attacker_p1(msg_b(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

3. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

4. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

5. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 4 may be read at get {243}.
The event SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2)) may be executed at {240}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on channel pub at output {242}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

6. By 1, the attacker may have the channel pub.
By 5, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

7. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).

9. The event LeakPsk(phase0,alice,charlie) may be executed at {354}.
So the message key_psk(alice,charlie) may be sent on channel pub at output {355}.
mess(pub,key_psk(alice,charlie)).

10. By 1, the attacker may have the channel pub.
By 9, the message key_psk(alice,charlie) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,charlie) by listening on this channel.
attacker(key_psk(alice,charlie)).

11. Using the function empty the attacker may obtain empty.
attacker(empty).

12. Using the function somename the attacker may obtain somename.
attacker(somename).

13. By 12, the attacker may know somename.
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

14. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).

15. By 13, the attacker may know hash(somename,empty).
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie)))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

18. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

19. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,charlie))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 18, the attacker may know minnonce.
By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

22. By 21, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

23. Using the function zero the attacker may obtain zero.
attacker(zero).

24. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

25. By 1, the attacker may have the channel pub.
By 24, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

26. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

27. By 15, the attacker may know hash(hash(somename,empty),empty).
By 26, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

28. By 27, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 23, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero)).

29. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 18, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 22, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).

32. By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))))).

33. By 18, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

34. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 3, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).

35. By 23, the attacker may know zero.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

36. By 1, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

37. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 2 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)) that may be sent on channel pub by 36 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

38. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 37 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

39. By 1, the attacker may have the channel pub.
By 38, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

40. By 39, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

41. By 40, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

42. By 39, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).

43. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

44. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 43, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).

45. By 23, the attacker may know zero.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 44, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

46. By 1, the attacker may have the channel pub.
By 45, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

47. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 2 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)) that may be sent on channel pub by 46 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

48. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 47 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

49. By 1, the attacker may have the channel pub.
By 48, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

50. By 49, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_1),g))).

51. By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

52. By 51, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
By 50, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

53. By 52, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 42, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))))).

54. By 53, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))))).

55. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

56. Using the function zero the attacker may obtain zero in phase 1.
attacker_p1(zero).

57. By 50, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
So the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(bob,alice,sid_1),g))).

58. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

59. The event LeakS(phase1,alice) may be executed at {182}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {183}.
mess_p1(pub,key_s(alice)).

60. By 58, the attacker may have the channel pub in phase 1.
By 59, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

61. By 60, the attacker may know key_s(alice) in phase 1.
By 57, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))).

62. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

63. By 62, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 50, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

64. By 63, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 23, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero)).

65. By 64, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
So the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero)).

66. By 65, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero) in phase 1.
By 61, the attacker may know dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)))).

67. By 66, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))) in phase 1.
By 56, the attacker may know zero in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero)).

68. By 67, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero) in phase 1.
By 55, the attacker may know minnonce in phase 1.
By 54, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))) in phase 1.
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

69. By 68, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice,sid_1) in phase 1.
attacker_p1(msg_b(bob,alice,sid_1)).

70. By 69, attacker_p1(msg_b(bob,alice,sid_1)).
The goal is reached, represented in the following fact:
attacker_p1(msg_b(bob,alice,sid_1)).


RESULT not attacker_p1(msg_b(bob,alice,sid_b)) cannot be proved.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakPsk(phase0,alice,charlie)) && begin(SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2))) -> attacker_p1(msg_b(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_2),msg_a(alice,bob,sid_2))) -> attacker_p1(msg_b(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_b(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakPsk(phase0,alice,charlie)) && begin(SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2))) -> attacker_p1(msg_b(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

3. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

4. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

5. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 4 may be read at get {243}.
The event SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2)) may be executed at {240}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on channel pub at output {242}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

6. By 1, the attacker may have the channel pub.
By 5, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

7. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).

9. The event LeakPsk(phase0,alice,charlie) may be executed at {354}.
So the message key_psk(alice,charlie) may be sent on channel pub at output {355}.
mess(pub,key_psk(alice,charlie)).

10. By 1, the attacker may have the channel pub.
By 9, the message key_psk(alice,charlie) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,charlie) by listening on this channel.
attacker(key_psk(alice,charlie)).

11. Using the function empty the attacker may obtain empty.
attacker(empty).

12. Using the function somename the attacker may obtain somename.
attacker(somename).

13. By 12, the attacker may know somename.
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

14. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).

15. By 13, the attacker may know hash(somename,empty).
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie)))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

18. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

19. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,charlie))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 18, the attacker may know minnonce.
By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

22. By 21, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

23. Using the function zero the attacker may obtain zero.
attacker(zero).

24. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

25. By 1, the attacker may have the channel pub.
By 24, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

26. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

27. By 15, the attacker may know hash(hash(somename,empty),empty).
By 26, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

28. By 27, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 23, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero)).

29. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 18, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 22, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).

32. By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))))).

33. By 18, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

34. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 3, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).

35. By 23, the attacker may know zero.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

36. By 1, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

37. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 2 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)) that may be sent on channel pub by 36 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

38. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 37 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

39. By 1, the attacker may have the channel pub.
By 38, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

40. By 39, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

41. By 40, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

42. By 39, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).

43. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

44. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 43, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).

45. By 23, the attacker may know zero.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 44, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

46. By 1, the attacker may have the channel pub.
By 45, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

47. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 2 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)) that may be sent on channel pub by 46 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

48. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 47 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

49. By 1, the attacker may have the channel pub.
By 48, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

50. By 49, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_1),g))).

51. By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

52. By 51, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
By 50, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

53. By 52, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 42, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))))).

54. By 53, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))))).

55. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

56. Using the function zero the attacker may obtain zero in phase 1.
attacker_p1(zero).

57. By 50, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
So the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(bob,alice,sid_1),g))).

58. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

59. The event LeakS(phase1,alice) may be executed at {182}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {183}.
mess_p1(pub,key_s(alice)).

60. By 58, the attacker may have the channel pub in phase 1.
By 59, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

61. By 60, the attacker may know key_s(alice) in phase 1.
By 57, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))).

62. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

63. By 62, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 50, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

64. By 63, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 23, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero)).

65. By 64, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
So the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero)).

66. By 65, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero) in phase 1.
By 61, the attacker may know dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)))).

67. By 66, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))) in phase 1.
By 56, the attacker may know zero in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero)).

68. By 67, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero) in phase 1.
By 55, the attacker may know minnonce in phase 1.
By 54, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))) in phase 1.
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

69. By 68, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice,sid_1) in phase 1.
attacker_p1(msg_b(bob,alice,sid_1)).

70. By 69, attacker_p1(msg_b(bob,alice,sid_1)).
The goal is reached, represented in the following fact:
attacker_p1(msg_b(bob,alice,sid_1)).


RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) cannot be proved.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakPsk(phase0,alice,charlie)) && begin(SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2))) -> attacker_p1(msg_b(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]
sid_2 = sid[!1 = @sid_1]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

3. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

4. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

5. The entry statestore(alice,charlie,sid_2,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 4 may be read at get {243}.
The event SendMsg(alice,charlie,stagepack_a(sid_2),msg_a(alice,charlie,sid_2)) may be executed at {240}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on channel pub at output {242}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

6. By 1, the attacker may have the channel pub.
By 5, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2)))).

7. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

8. By 6, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_2),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_2))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).

9. The event LeakPsk(phase0,alice,charlie) may be executed at {354}.
So the message key_psk(alice,charlie) may be sent on channel pub at output {355}.
mess(pub,key_psk(alice,charlie)).

10. By 1, the attacker may have the channel pub.
By 9, the message key_psk(alice,charlie) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,charlie) by listening on this channel.
attacker(key_psk(alice,charlie)).

11. Using the function empty the attacker may obtain empty.
attacker(empty).

12. Using the function somename the attacker may obtain somename.
attacker(somename).

13. By 12, the attacker may know somename.
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

14. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).

15. By 13, the attacker may know hash(somename,empty).
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie)))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

18. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

19. By 13, the attacker may know hash(somename,empty).
By 10, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,charlie))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
By 8, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_2),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 18, the attacker may know minnonce.
By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))).
By 7, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g)))).

22. By 21, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_2),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

23. Using the function zero the attacker may obtain zero.
attacker(zero).

24. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

25. By 1, the attacker may have the channel pub.
By 24, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

26. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

27. By 15, the attacker may know hash(hash(somename,empty),empty).
By 26, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

28. By 27, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 23, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero)).

29. By 13, the attacker may know hash(somename,empty).
By 25, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 18, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 22, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).

32. By 28, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))))).

33. By 18, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

34. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 3, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).

35. By 23, the attacker may know zero.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

36. By 1, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

37. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 2 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)) that may be sent on channel pub by 36 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

38. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 37 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

39. By 1, the attacker may have the channel pub.
By 38, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

40. By 39, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

41. By 40, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

42. By 39, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).

43. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

44. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 33, the attacker may know increment_nonce(minnonce).
By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 43, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).

45. By 23, the attacker may know zero.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 44, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

46. By 1, the attacker may have the channel pub.
By 45, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

47. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 2 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)) that may be sent on channel pub by 46 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

48. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 47 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

49. By 1, the attacker may have the channel pub.
By 48, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

50. By 49, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_1),g))).

51. By 32, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

52. By 51, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
By 50, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

53. By 52, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 42, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))))).

54. By 53, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))))).

55. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

56. Using the function zero the attacker may obtain zero in phase 1.
attacker_p1(zero).

57. By 50, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
So the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(bob,alice,sid_1),g))).

58. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

59. The event LeakS(phase1,alice) may be executed at {182}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {183}.
mess_p1(pub,key_s(alice)).

60. By 58, the attacker may have the channel pub in phase 1.
By 59, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

61. By 60, the attacker may know key_s(alice) in phase 1.
By 57, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))).

62. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 23, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

63. By 62, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 50, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

64. By 63, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 23, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero)).

65. By 64, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
So the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero)).

66. By 65, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero) in phase 1.
By 61, the attacker may know dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)))).

67. By 66, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))) in phase 1.
By 56, the attacker may know zero in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero)).

68. By 67, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero) in phase 1.
By 55, the attacker may know minnonce in phase 1.
By 54, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))) in phase 1.
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

69. By 68, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice,sid_1) in phase 1.
attacker_p1(msg_b(bob,alice,sid_1)).

70. By 69, attacker_p1(msg_b(bob,alice,sid_1)).
The goal is reached, represented in the following fact:
attacker_p1(msg_b(bob,alice,sid_1)).


RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: attacker(m) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The event LeakS(phase0,alice) may be executed at {179}.
So the message key_s(alice) may be sent on channel pub at output {180}.
mess(pub,key_s(alice)).

6. By 4, the attacker may have the channel pub.
By 5, the message key_s(alice) may be sent on this channel.
So the attacker may obtain the message key_s(alice) by listening on this channel.
attacker(key_s(alice)).

7. By 6, the attacker may know key_s(alice).
By 3, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(alice),g).
attacker(dhexp_real(key_s(alice),g)).

8. By 7, the attacker may know dhexp_real(key_s(alice),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

9. Using the function zero the attacker may obtain zero.
attacker(zero).

10. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

11. By 4, the attacker may have the channel pub.
By 10, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 11, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

16. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

17. By 16, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

18. By 17, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 9, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero)).

19. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

20. By 14, the attacker may know hash(somename,empty).
By 11, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 9, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 19, the attacker may know minnonce.
By 18, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 8, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).

23. By 18, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))))).

24. By 19, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

25. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 24, the attacker may know increment_nonce(minnonce).
By 23, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).

26. By 9, the attacker may know zero.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 25, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

27. By 4, the attacker may have the channel pub.
By 26, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

28. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)) that may be sent on channel pub by 27 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

29. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 28 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the entry statestore(bob,alice,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),key_e(bob,alice,sid_1)),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce))) may be inserted in a table at insert {490}.
table(statestore(bob,alice,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),key_e(bob,alice,sid_1)),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce)))).

30. We assume as hypothesis that
attacker(m).

31. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 28 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

32. By 4, the attacker may have the channel pub.
By 31, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

33. By 32, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

34. By 32, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).

35. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

36. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 24, the attacker may know increment_nonce(minnonce).
By 23, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 35, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).

37. By 9, the attacker may know zero.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 36, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

38. By 4, the attacker may have the channel pub.
By 37, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

39. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)) that may be sent on channel pub by 38 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

40. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 39 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

41. By 4, the attacker may have the channel pub.
By 40, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

42. By 41, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_1),g))).

43. By 23, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 25, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

44. By 43, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
By 42, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

45. By 44, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))))).

46. By 45, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
By 33, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

47. By 6, the attacker may know key_s(alice).
By 42, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)).
attacker(dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))).

48. By 20, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 9, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

49. By 48, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 42, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

50. By 49, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 9, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero)).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
By 47, the attacker may know dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)))).

52. By 51, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))).
By 9, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero)).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero).
By 9, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero)).

54. By 53, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero).
By 19, the attacker may know minnonce.
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
By 30, the attacker may know m.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),m).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),m)).

55. The attacker has some term b_1.
attacker(b_1).

56. The attacker has some term a_1.
attacker(a_1).

57. By 56, the attacker may know a_1.
By 55, the attacker may know b_1.
By 54, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),m).
Using the function concat3 the attacker may obtain concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),m)).
attacker(concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),m))).

58. By 4, the attacker may have the channel pub.
By 57, the attacker may have the message concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),m)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),m))).

59. The entry statestore(bob,alice,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),key_e(bob,alice,sid_1)),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce))) that may be in a table by 29 may be read at get {513}.
The message concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),m)) that may be sent on channel pub by 58 may be received at input {495}.
So event RecvMsg(bob,alice,stagepack_c(sid_1),m) may be executed at {511}.
end(RecvMsg(bob,alice,stagepack_c(sid_1),m)).

60. By 59, end(RecvMsg(bob,alice,stagepack_c(sid_1),m)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_c(sid_1),m)).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: attacker(m) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(SendMsg(bob,alice,stagepack_b(sid_2),msg_b(bob,alice,sid_2))) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(bob,alice,stagepack_c(sid_2),msg_c(alice,bob,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: attacker(m) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(SendMsg(bob,alice,stagepack_b(sid_2),msg_b(bob,alice,sid_2))) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(bob,alice,stagepack_c(sid_2),msg_c(alice,bob,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: attacker(m) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(SendMsg(bob,alice,stagepack_b(sid_2),msg_b(bob,alice,sid_2))) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(bob,alice,stagepack_c(sid_2),msg_c(alice,bob,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: attacker(m) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(SendMsg(bob,alice,stagepack_b(sid_2),msg_b(bob,alice,sid_2))) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(bob,alice,stagepack_c(sid_2),msg_c(alice,bob,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> attacker_p1(msg_c(alice,bob,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the entry statestore(alice,bob,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {61}.
table(statestore(alice,bob,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),empty,empty,key_psk(alice,bob),true)))).

4. The attacker has some term plaintext_b_2.
attacker(plaintext_b_2).

5. Using the function g the attacker may obtain g.
attacker(g).

6. The event LeakS(phase0,bob) may be executed at {538}.
So the message key_s(bob) may be sent on channel pub at output {539}.
mess(pub,key_s(bob)).

7. By 1, the attacker may have the channel pub.
By 6, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

8. By 7, the attacker may know key_s(bob).
By 5, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(bob),g).
attacker(dhexp_real(key_s(bob),g)).

9. By 8, the attacker may know dhexp_real(key_s(bob),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(bob),g)).
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function zero the attacker may obtain zero.
attacker(zero).

11. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on channel pub at output {62}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

12. By 1, the attacker may have the channel pub.
By 11, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

13. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

14. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

15. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

16. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

17. By 1, the attacker may have the channel pub.
By 16, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

18. Using the function empty the attacker may obtain empty.
attacker(empty).

19. Using the function somename the attacker may obtain somename.
attacker(somename).

20. By 19, the attacker may know somename.
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

21. By 20, the attacker may know hash(somename,empty).
By 17, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

22. By 20, the attacker may know hash(somename,empty).
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

23. By 22, the attacker may know hash(hash(somename,empty),empty).
By 21, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

24. By 23, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

25. By 24, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
By 14, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))))).

26. By 25, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).
By 13, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

27. By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
By 10, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero)).

28. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

29. By 20, the attacker may know hash(somename,empty).
By 17, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero)).

32. By 31, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero)).

33. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero).
By 10, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero)).

34. By 33, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
By 28, the attacker may know minnonce.
By 27, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).

35. By 27, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))))).

36. By 7, the attacker may know key_s(bob).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).

37. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
By 36, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)))).

39. By 38, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
By 28, the attacker may know minnonce.
By 35, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 4, the attacker may know plaintext_b_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).

40. By 10, the attacker may know zero.
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))).
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))).

41. By 1, the attacker may have the channel pub.
By 40, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))).

42. The entry statestore(alice,bob,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 3 may be read at get {132}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)) that may be sent on channel pub by 41 may be received at input {64}.
So the entry statestore(alice,bob,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce))) may be inserted in a table at insert {131}.
table(statestore(alice,bob,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce)))).

43. The entry statestore(alice,bob,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce))) that may be in a table by 42 may be read at get {152}.
The event SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1)) may be executed at {149}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))) may be sent on channel pub at output {151}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)))).

44. By 1, the attacker may have the channel pub.
By 43, the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)))).

45. By 44, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))).

46. By 35, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))).

47. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
By 36, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)))).

48. By 47, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero)).

49. By 48, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero).
By 28, the attacker may know minnonce.
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).
By 45, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))).

50. By 49, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)).
Using the function 3-proj-aeadpack the attacker may obtain msg_c(alice,bob,sid_1).
attacker(msg_c(alice,bob,sid_1)).

51. By 50, the attacker may know msg_c(alice,bob,sid_1).
So the attacker may know msg_c(alice,bob,sid_1) in phase 1.
attacker_p1(msg_c(alice,bob,sid_1)).

52. By 51, attacker_p1(msg_c(alice,bob,sid_1)).
The goal is reached, represented in the following fact:
attacker_p1(msg_c(alice,bob,sid_1)).


RESULT not attacker_p1(msg_c(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> attacker_p1(msg_c(alice,bob,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> attacker_p1(msg_c(alice,bob,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> attacker_p1(msg_c(alice,bob,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: attacker(m) && begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_d(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the entry statestore(alice,bob,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {61}.
table(statestore(alice,bob,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),empty,empty,key_psk(alice,bob),true)))).

3. The attacker has some term plaintext_b_2.
attacker(plaintext_b_2).

4. Using the function g the attacker may obtain g.
attacker(g).

5. Using the function pub the attacker may obtain pub.
attacker(pub).

6. The event LeakS(phase0,bob) may be executed at {538}.
So the message key_s(bob) may be sent on channel pub at output {539}.
mess(pub,key_s(bob)).

7. By 5, the attacker may have the channel pub.
By 6, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

8. By 7, the attacker may know key_s(bob).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(bob),g).
attacker(dhexp_real(key_s(bob),g)).

9. By 8, the attacker may know dhexp_real(key_s(bob),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(bob),g)).
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function zero the attacker may obtain zero.
attacker(zero).

11. The entry statestore(alice,bob,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {63}.
The event SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1)) may be executed at {60}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on channel pub at output {62}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

12. By 5, the attacker may have the channel pub.
By 11, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

13. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).

14. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

15. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1),g))).

16. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

17. By 5, the attacker may have the channel pub.
By 16, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

18. Using the function empty the attacker may obtain empty.
attacker(empty).

19. Using the function somename the attacker may obtain somename.
attacker(somename).

20. By 19, the attacker may know somename.
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

21. By 20, the attacker may know hash(somename,empty).
By 17, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

22. By 20, the attacker may know hash(somename,empty).
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

23. By 22, the attacker may know hash(hash(somename,empty),empty).
By 21, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

24. By 23, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

25. By 24, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
By 14, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g))))).

26. By 25, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).
By 13, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))).

27. By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))).
By 10, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero)).

28. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

29. By 20, the attacker may know hash(somename,empty).
By 17, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g)))).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero)).

32. By 31, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero)).

33. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero).
By 10, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero)).

34. By 33, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
By 28, the attacker may know minnonce.
By 27, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).

35. By 27, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))))).

36. By 7, the attacker may know key_s(bob).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)).
attacker(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).

37. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
By 36, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)))).

39. By 38, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
By 28, the attacker may know minnonce.
By 35, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 3, the attacker may know plaintext_b_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).

40. By 10, the attacker may know zero.
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))).
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))).

41. By 5, the attacker may have the channel pub.
By 40, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))).

42. The entry statestore(alice,bob,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {132}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)) that may be sent on channel pub by 41 may be received at input {64}.
So the entry statestore(alice,bob,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce))) may be inserted in a table at insert {131}.
table(statestore(alice,bob,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce)))).

43. The entry statestore(alice,bob,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce))) that may be in a table by 42 may be read at get {152}.
The event SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1)) may be executed at {149}.
So the entry statestore(alice,bob,sid_1,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce))) may be inserted in a table at insert {150}.
table(statestore(alice,bob,sid_1,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce)))).

44. We assume as hypothesis that
attacker(m).

45. The entry statestore(alice,bob,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce))) that may be in a table by 42 may be read at get {152}.
The event SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1)) may be executed at {149}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))) may be sent on channel pub at output {151}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)))).

46. By 5, the attacker may have the channel pub.
By 45, the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)))).

47. By 46, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))).

48. By 35, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2))).

49. By 48, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)).
By 47, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)))).

50. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero).
By 36, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g)))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))).
By 10, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero)).

52. By 51, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero).
By 28, the attacker may know minnonce.
By 49, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))).
By 44, the attacker may know m.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))),m).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))),m)).

53. The attacker has some term b_1.
attacker(b_1).

54. The attacker has some term a_1.
attacker(a_1).

55. By 54, the attacker may know a_1.
By 53, the attacker may know b_1.
By 52, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))),m).
Using the function concat3 the attacker may obtain concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))),m)).
attacker(concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))),m))).

56. By 5, the attacker may have the channel pub.
By 55, the attacker may have the message concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))),m)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))),m))).

57. The entry statestore(alice,bob,sid_1,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1),g)),key_e(alice,bob,sid_1)),validkey(dhexp_real(key_s(bob),g)),zero,key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce))) that may be in a table by 43 may be read at get {173}.
The message concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),validkey(dhexp_real(key_e(alice,bob,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1))),zero),validkey(dhexp_real(key_s(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_1))),m)) that may be sent on channel pub by 56 may be received at input {155}.
So event RecvMsg(alice,bob,stagepack_d(sid_1),m) may be executed at {171}.
end(RecvMsg(alice,bob,stagepack_d(sid_1),m)).

58. By 57, end(RecvMsg(alice,bob,stagepack_d(sid_1),m)).
The goal is reached, represented in the following fact:
end(RecvMsg(alice,bob,stagepack_d(sid_1),m)).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: attacker(m) && begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_d(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_1),msg_d(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_c(sid_2),msg_c(alice,bob,sid_2))) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_a(sid_2),msg_a(alice,bob,sid_2))) -> end(RecvMsg(alice,bob,stagepack_d(sid_2),msg_d(bob,alice,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: attacker(m) && begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_d(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_1),msg_d(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_c(sid_2),msg_c(alice,bob,sid_2))) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_a(sid_2),msg_a(alice,bob,sid_2))) -> end(RecvMsg(alice,bob,stagepack_d(sid_2),msg_d(bob,alice,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: attacker(m) && begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_d(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_1),msg_d(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_c(sid_2),msg_c(alice,bob,sid_2))) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_a(sid_2),msg_a(alice,bob,sid_2))) -> end(RecvMsg(alice,bob,stagepack_d(sid_2),msg_d(bob,alice,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: attacker(m) && begin(SendMsg(alice,bob,stagepack_c(sid_1),msg_c(alice,bob,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_1),msg_a(alice,bob,sid_1))) -> end(RecvMsg(alice,bob,stagepack_d(sid_1),m))
Abbreviations:
sid_1 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_1),msg_d(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_c(sid_2),msg_c(alice,bob,sid_2))) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(SendMsg(alice,bob,stagepack_a(sid_2),msg_a(alice,bob,sid_2))) -> end(RecvMsg(alice,bob,stagepack_d(sid_2),msg_d(bob,alice,sid_1)))
Abbreviations:
sid_2 = sid[!1 = @sid]
sid_1 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_1),msg_d(bob,alice,sid_1))) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

3. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The event LeakS(phase0,alice) may be executed at {179}.
So the message key_s(alice) may be sent on channel pub at output {180}.
mess(pub,key_s(alice)).

6. By 1, the attacker may have the channel pub.
By 5, the message key_s(alice) may be sent on this channel.
So the attacker may obtain the message key_s(alice) by listening on this channel.
attacker(key_s(alice)).

7. By 6, the attacker may know key_s(alice).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(alice),g).
attacker(dhexp_real(key_s(alice),g)).

8. By 7, the attacker may know dhexp_real(key_s(alice),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

9. Using the function zero the attacker may obtain zero.
attacker(zero).

10. The event LeakPsk(phase0,alice,bob) may be executed at {174}.
So the message key_psk(alice,bob) may be sent on channel pub at output {175}.
mess(pub,key_psk(alice,bob)).

11. By 1, the attacker may have the channel pub.
By 10, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 11, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,bob))).

16. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

17. By 16, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob)))).

18. By 17, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))).
By 9, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero)).

19. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

20. By 14, the attacker may know hash(somename,empty).
By 11, the attacker may know key_psk(alice,bob).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,bob))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 9, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 19, the attacker may know minnonce.
By 18, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 8, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).

23. By 18, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))))).

24. By 19, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

25. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 24, the attacker may know increment_nonce(minnonce).
By 23, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 3, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).

26. By 9, the attacker may know zero.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 25, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

27. By 1, the attacker may have the channel pub.
By 26, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

28. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 2 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)) that may be sent on channel pub by 27 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

29. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 28 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the entry statestore(bob,alice,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),key_e(bob,alice,sid_1)),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce))) may be inserted in a table at insert {490}.
table(statestore(bob,alice,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),key_e(bob,alice,sid_1)),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce)))).

30. The attacker has some term plaintext_c_2.
attacker(plaintext_c_2).

31. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 28 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

32. By 1, the attacker may have the channel pub.
By 31, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

33. By 32, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).

34. By 32, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).

35. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

36. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 24, the attacker may know increment_nonce(minnonce).
By 23, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 35, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).

37. By 9, the attacker may know zero.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))).
By 36, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

38. By 1, the attacker may have the channel pub.
By 37, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))).

39. The entry statestore(bob,alice,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 2 may be read at get {423}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)) that may be sent on channel pub by 38 may be received at input {376}.
We have zero ≠ caught-fail.
So the entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) may be inserted in a table at insert {422}.
table(statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false)))).

40. The entry statestore(bob,alice,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false))) that may be in a table by 39 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

41. By 1, the attacker may have the channel pub.
By 40, the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

42. By 41, the attacker may know concat3(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_1),g))).

43. By 23, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 25, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2))).

44. By 43, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)).
By 42, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

45. By 44, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g))))).

46. By 45, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))).
By 33, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))).

47. By 6, the attacker may know key_s(alice).
By 42, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)).
attacker(dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))).

48. By 20, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,bob)).
By 9, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero)).

49. By 48, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero).
By 42, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g)))).

50. By 49, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))).
By 9, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero)).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero).
By 47, the attacker may know dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g)))).

52. By 51, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))).
By 9, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero)).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero).
By 9, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero)).

54. By 53, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero).
By 19, the attacker may know minnonce.
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
By 30, the attacker may know plaintext_c_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)).

55. The attacker has some term b_1.
attacker(b_1).

56. The attacker has some term a_1.
attacker(a_1).

57. By 56, the attacker may know a_1.
By 55, the attacker may know b_1.
By 54, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2).
Using the function concat3 the attacker may obtain concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)).
attacker(concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2))).

58. By 1, the attacker may have the channel pub.
By 57, the attacker may have the message concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2))).

59. The entry statestore(bob,alice,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),key_e(bob,alice,sid_1)),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce))) that may be in a table by 29 may be read at get {513}.
The message concat3(a_1,b_1,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)) that may be sent on channel pub by 58 may be received at input {495}.
So the entry statestore(bob,alice,sid_1,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),key_e(bob,alice,sid_1)),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce))) may be inserted in a table at insert {512}.
table(statestore(bob,alice,sid_1,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),key_e(bob,alice,sid_1)),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce)))).

60. The entry statestore(bob,alice,sid_1,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1),g)),key_e(bob,alice,sid_1)),validkey(dhexp_real(key_s(alice),g)),zero,key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce))) that may be in a table by 59 may be read at get {532}.
The event SendMsg(bob,alice,stagepack_d(sid_1),msg_d(bob,alice,sid_1)) may be executed at {530}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1))) may be sent on channel pub at output {531}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1)))).

61. By 1, the attacker may have the channel pub.
By 60, the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1)))).

62. By 61, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1))).

63. By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))).
By 54, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2))).

64. By 52, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero).
By 9, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero)).

65. By 64, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero).
By 19, the attacker may know minnonce.
By 63, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)).
By 62, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1))).

66. By 65, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),zero),dhexp_real(key_e(bob,alice,sid_1),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,bob))),zero),validkey(dhexp_real(key_s(alice),g)))),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_1),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1))),plaintext_c_2)),msg_d(bob,alice,sid_1)).
Using the function 3-proj-aeadpack the attacker may obtain msg_d(bob,alice,sid_1).
attacker(msg_d(bob,alice,sid_1)).

67. By 66, the attacker may know msg_d(bob,alice,sid_1).
So the attacker may know msg_d(bob,alice,sid_1) in phase 1.
attacker_p1(msg_d(bob,alice,sid_1)).

68. By 67, attacker_p1(msg_d(bob,alice,sid_1)).
The goal is reached, represented in the following fact:
attacker_p1(msg_d(bob,alice,sid_1)).


RESULT not attacker_p1(msg_d(bob,alice,sid_b)) cannot be proved.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_1),msg_d(bob,alice,sid_1))) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_1),msg_d(bob,alice,sid_1))) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_1),msg_d(bob,alice,sid_1))) && begin(SendMsg(bob,alice,stagepack_b(sid_1),msg_b(bob,alice,sid_1))) && begin(LeakPsk(phase0,alice,bob)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice,sid_1))
Abbreviations:
sid_1 = sid[!1 = @sid]
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(alice,charlie,stagepack_c(sid_1),msg_c(alice,charlie,sid_1))) && begin(LeakPsk(phase0,alice,charlie)) && begin(SendMsg(alice,charlie,stagepack_a(sid_1),msg_a(alice,charlie,sid_1))) -> end(RecvEnd(true))
Abbreviations:
sid_1 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_1 = sid[!1 = @sid]

1. The entry statestore(alice,charlie,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

2. The entry statestore(alice,charlie,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 1 may be read at get {243}.
The event SendMsg(alice,charlie,stagepack_a(sid_1),msg_a(alice,charlie,sid_1)) may be executed at {240}.
So the entry statestore(alice,charlie,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {241}.
table(statestore(alice,charlie,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),empty,empty,key_psk(alice,charlie),true)))).

3. The attacker has some term plaintext_b_2.
attacker(plaintext_b_2).

4. Using the function g the attacker may obtain g.
attacker(g).

5. Using the function pub the attacker may obtain pub.
attacker(pub).

6. The message key_s(charlie) may be sent on channel pub at output {1}.
mess(pub,key_s(charlie)).

7. By 5, the attacker may have the channel pub.
By 6, the message key_s(charlie) may be sent on this channel.
So the attacker may obtain the message key_s(charlie) by listening on this channel.
attacker(key_s(charlie)).

8. By 7, the attacker may know key_s(charlie).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(charlie),g).
attacker(dhexp_real(key_s(charlie),g)).

9. By 8, the attacker may know dhexp_real(key_s(charlie),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(charlie),g)).
attacker(validkey(dhexp_real(key_s(charlie),g))).

10. Using the function zero the attacker may obtain zero.
attacker(zero).

11. The entry statestore(alice,charlie,sid_1,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 1 may be read at get {243}.
The event SendMsg(alice,charlie,stagepack_a(sid_1),msg_a(alice,charlie,sid_1)) may be executed at {240}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))) may be sent on channel pub at output {242}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1)))).

12. By 5, the attacker may have the channel pub.
By 11, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1)))).

13. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))).

14. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).

15. By 12, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_1),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_1),g))).

16. The event LeakPsk(phase0,alice,charlie) may be executed at {354}.
So the message key_psk(alice,charlie) may be sent on channel pub at output {355}.
mess(pub,key_psk(alice,charlie)).

17. By 5, the attacker may have the channel pub.
By 16, the message key_psk(alice,charlie) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,charlie) by listening on this channel.
attacker(key_psk(alice,charlie)).

18. Using the function empty the attacker may obtain empty.
attacker(empty).

19. Using the function somename the attacker may obtain somename.
attacker(somename).

20. By 19, the attacker may know somename.
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

21. By 20, the attacker may know hash(somename,empty).
By 17, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).

22. By 20, the attacker may know hash(somename,empty).
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

23. By 22, the attacker may know hash(hash(somename,empty),empty).
By 21, the attacker may know hmac_hash2(hash(somename,empty),key_psk(alice,charlie)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
attacker(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie)))).

24. By 23, the attacker may know hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_1),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g)))).

25. By 24, the attacker may know hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))).
By 14, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g))))).

26. By 25, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))).
By 13, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1)))).

27. By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))).
By 10, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero)).

28. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

29. By 20, the attacker may know hash(somename,empty).
By 17, the attacker may know key_psk(alice,charlie).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
attacker(hmac_hash1(hash(somename,empty),key_psk(alice,charlie))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),key_psk(alice,charlie)).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g)))).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero)).

32. By 31, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero)).

33. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero).
By 10, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero)).

34. By 33, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero).
By 28, the attacker may know minnonce.
By 27, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero).
By 9, the attacker may know validkey(dhexp_real(key_s(charlie),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))).

35. By 27, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g))))).

36. By 7, the attacker may know key_s(charlie).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_1),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g)).
attacker(dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))).

37. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero).
By 10, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero).
By 36, the attacker may know dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g)))).

39. By 38, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))).
By 28, the attacker may know minnonce.
By 35, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))).
By 3, the attacker may know plaintext_b_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)).

40. By 10, the attacker may know zero.
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g))).
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2))).

41. By 5, the attacker may have the channel pub.
By 40, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2))).

42. The entry statestore(alice,charlie,sid_1,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {312}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)) that may be sent on channel pub by 41 may be received at input {244}.
So the entry statestore(alice,charlie,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),validkey(dhexp_real(key_s(charlie),g)),zero,key_psk(alice,charlie),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce))) may be inserted in a table at insert {311}.
table(statestore(alice,charlie,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),validkey(dhexp_real(key_s(charlie),g)),zero,key_psk(alice,charlie),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce)))).

43. The entry statestore(alice,charlie,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),validkey(dhexp_real(key_s(charlie),g)),zero,key_psk(alice,charlie),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce))) that may be in a table by 42 may be read at get {332}.
The event SendMsg(alice,charlie,stagepack_c(sid_1),msg_c(alice,charlie,sid_1)) may be executed at {329}.
So the entry statestore(alice,charlie,sid_1,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),validkey(dhexp_real(key_s(charlie),g)),zero,key_psk(alice,charlie),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce))) may be inserted in a table at insert {330}.
table(statestore(alice,charlie,sid_1,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),validkey(dhexp_real(key_s(charlie),g)),zero,key_psk(alice,charlie),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce)))).

44. The attacker has some term plaintext_d_2.
attacker(plaintext_d_2).

45. The entry statestore(alice,charlie,sid_1,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),validkey(dhexp_real(key_s(charlie),g)),zero,key_psk(alice,charlie),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce))) that may be in a table by 42 may be read at get {332}.
The event SendMsg(alice,charlie,stagepack_c(sid_1),msg_c(alice,charlie,sid_1)) may be executed at {329}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))) may be sent on channel pub at output {331}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1)))).

46. By 5, the attacker may have the channel pub.
By 45, the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1)))).

47. By 46, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))).

48. By 35, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))).
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2))).

49. By 48, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)).
By 47, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1)))).

50. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero).
By 36, the attacker may know dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g)))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))).
By 10, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero)).

52. By 51, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero).
By 28, the attacker may know minnonce.
By 49, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))).
By 44, the attacker may know plaintext_d_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))),plaintext_d_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))),plaintext_d_2)).

53. The attacker has some term b_1.
attacker(b_1).

54. The attacker has some term a_1.
attacker(a_1).

55. By 54, the attacker may know a_1.
By 53, the attacker may know b_1.
By 52, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))),plaintext_d_2).
Using the function concat3 the attacker may obtain concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))),plaintext_d_2)).
attacker(concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))),plaintext_d_2))).

56. By 5, the attacker may have the channel pub.
By 55, the attacker may have the message concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))),plaintext_d_2)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))),plaintext_d_2))).

57. The entry statestore(alice,charlie,sid_1,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,charlie,sid_1),g)),key_e(alice,charlie,sid_1)),validkey(dhexp_real(key_s(charlie),g)),zero,key_psk(alice,charlie),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce))) that may be in a table by 43 may be read at get {353}.
The message concat3(a_1,b_1,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),key_psk(alice,charlie)),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),hmac_hash2(hash(somename,empty),key_psk(alice,charlie))),validkey(dhexp_real(key_e(alice,charlie,sid_1),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1))),zero),validkey(dhexp_real(key_s(charlie),g)))),plaintext_b_2)),msg_c(alice,charlie,sid_1))),plaintext_d_2)) that may be sent on channel pub by 56 may be received at input {335}.
So event RecvEnd(true) may be executed at {352}.
end(RecvEnd(true)).

58. By 57, end(RecvEnd(true)).
The goal is reached, represented in the following fact:
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.

--------------------------------------------------------------
Verification summary:

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.

Query not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.

Query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) cannot be proved.

Query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) cannot be proved.

Query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)) cannot be proved.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.

Query not attacker_p1(msg_b(bob,alice,sid_b)) cannot be proved.

Query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) is true.

Query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) cannot be proved.

Query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.

Query not attacker_p1(msg_c(alice,bob,sid_a)) cannot be proved.

Query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) is true.

Query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.

Query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)) is true.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) cannot be proved.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.

Query not attacker_p1(msg_d(bob,alice,sid_b)) cannot be proved.

Query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) is true.

Query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.

Query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)) is true.

Query not event(RecvEnd(true)) cannot be proved.

--------------------------------------------------------------

